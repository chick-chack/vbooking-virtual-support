{"version":3,"file":"static/js/523.861949ad.chunk.js","mappings":"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","sources":["views/VirtualSupport/DragContext.jsx","services/metaverse.service.js","views/VirtualSupport/MeetingCallControls/index.jsx","views/VirtualSupport/MeetNavigateSide/index.jsx","views/VirtualSupport/MeetingCallParticipants/index.jsx","services/shop.service.js","views/VirtualSupport/InventorySection/index.jsx","views/VirtualSupport/ProductSection/index.jsx","views/VirtualSupport/MeetChat/index.jsx","views/VirtualSupport/MyCart/index.jsx","views/VirtualSupport/ShareTools/index.jsx","views/VirtualSupport/MetaExperience/index.jsx","views/VirtualSupport/Holomeet/index.jsx","views/VirtualSupport/FilesSharing/index.jsx","views/VirtualSupport/SharedFiles/index.jsx","views/VirtualSupport/YoutubeLink/index.jsx","views/VirtualSupport/Counter/index.jsx","views/VirtualSupport/Counter/CounterParticipants.jsx","views/VirtualSupport/ProductionTools/index.jsx","views/VirtualSupport/LiveStream/index.jsx","views/VirtualSupport/Counter/CounterForUser.jsx","views/VirtualSupport/Counter/CounterSharedData.jsx","services/desk.service.js","views/VirtualSupport/Desks/index.jsx","views/VirtualSupport/EmbedLink/index.jsx","views/VirtualSupport/MeetAsaider/index.jsx","views/VirtualSupport/MeetingScreen/index.jsx","services/participants.service.js","views/VirtualSupport/InviteFriends/index.jsx","views/VirtualSupport/HolomeetDim/index.jsx","views/VirtualSupport/VirtualSupportView.jsx","views/VirtualSupport/index.jsx"],"sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport default createContext(null);\r\n","import axios from \"axios\";\r\nimport { API_BASE } from \"./config\";\r\n\r\nconst SERVICE_BASE = API_BASE + \"/metaverse/\";\r\n\r\nconst getMyDimensions = () => {\r\n  return axios.get(SERVICE_BASE + \"my-dimension\", {\r\n    params: { limit: 100, offset: 0 },\r\n  });\r\n};\r\n\r\nconst addDimension = (data) => {\r\n  return axios.post(SERVICE_BASE + \"add-dimension\", data);\r\n};\r\n\r\nconst deleteDimension = (id) => {\r\n  return axios.delete(SERVICE_BASE + `delete-dimension/${id}`);\r\n};\r\n\r\nconst renameDimension = (id, data) => {\r\n  return axios.put(SERVICE_BASE + `rename-dimension/${id}`, data);\r\n};\r\n\r\nconst getHoloCategory = () => {\r\n  return axios.get(SERVICE_BASE + \"holo-category\");\r\n};\r\n\r\nconst getHoloDimensionByCategory = (id) => {\r\n  return axios.get(SERVICE_BASE + `holo-dimension-by-category/${id}`);\r\n};\r\n\r\nconst MetaverseService = {\r\n  addDimension,\r\n  deleteDimension,\r\n  renameDimension,\r\n  getMyDimensions,\r\n  getHoloCategory,\r\n  getHoloDimensionByCategory,\r\n};\r\n\r\nexport default MetaverseService;\r\n","import { useEffect, useMemo, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  Dropdown,\r\n  Image,\r\n  Modal,\r\n  Row,\r\n  Tooltip,\r\n  Typography,\r\n} from \"antd\";\r\n\r\nimport {\r\n  ArrowDownSVG,\r\n  CallEndSVG,\r\n  MuteVoiceSVG,\r\n  NoSoundSVG,\r\n  NoVideoSVG,\r\n  SettingFillSVG,\r\n  SoundSVG,\r\n  VideoSVG,\r\n  VoiceSVG,\r\n} from \"assets/jsx-svg\";\r\nimport MetaverseService from \"services/metaverse.service\";\r\nimport \"./styles.css\";\r\n\r\nexport default function MeetingCallControls({\r\n  isHost,\r\n  audioMuted,\r\n  cameraEnabled,\r\n  soundMuted,\r\n  toggleAudioMute,\r\n  toggleVideo,\r\n  toggleSoundMute,\r\n  unPublishScreen,\r\n  sharingScreen,\r\n  SystemMessage,\r\n  unPublishDim,\r\n  sharingDim,\r\n  joinedSharedDim,\r\n  setJoinedSharedDim,\r\n  sharedDimId,\r\n  userFullName,\r\n  controlSettingsShow,\r\n  setControlSettingsShow,\r\n  permissions,\r\n  setPermissions,\r\n  setActiveBtn,\r\n  sharingWhiteboard,\r\n  sharingFile,\r\n  showArrow,\r\n}) {\r\n  const [dimModalOpen, setDimModalOpen] = useState(false);\r\n  const [myDims, setMyDims] = useState([]);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const {\r\n          data: {\r\n            data: { rows },\r\n          },\r\n        } = await MetaverseService.getMyDimensions();\r\n\r\n        setMyDims(rows);\r\n      } catch (error) {\r\n        console.log(\"Error fetching my dimensions\", error.message);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  const settingsMenu = useMemo(() => {\r\n    return (\r\n      <Row justify=\"center\" align=\"bottom\" className=\"settings-options\">\r\n        <Col xs={24} style={{ marginBottom: \"0.5rem\" }}>\r\n          <Row align=\"middle\">\r\n            <Col xs={24}>\r\n              <Typography.Text className=\"fw-600 wc\">\r\n                Allow Participants to :\r\n              </Typography.Text>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <Col\r\n          xs={24}\r\n          onClick={() =>\r\n            setPermissions({ ...permissions, screen: !permissions.screen })\r\n          }\r\n          className=\"clickable\"\r\n        >\r\n          <Row align=\"middle\">\r\n            <Col xs={2}>{permissions.screen ? \"✔\" : \"\"}</Col>\r\n            <Col xs={22}>Share Screen</Col>\r\n          </Row>\r\n        </Col>\r\n        <Col\r\n          xs={24}\r\n          onClick={() =>\r\n            setPermissions({ ...permissions, chat: !permissions.chat })\r\n          }\r\n          className=\"clickable\"\r\n        >\r\n          <Row align=\"middle\">\r\n            <Col xs={2}>{permissions.chat ? \"✔\" : \"\"}</Col>\r\n            <Col xs={22}>Chat</Col>\r\n          </Row>\r\n        </Col>\r\n        <Col\r\n          xs={24}\r\n          onClick={() =>\r\n            setPermissions({ ...permissions, mic: !permissions.mic })\r\n          }\r\n          className=\"clickable\"\r\n        >\r\n          <Row align=\"middle\">\r\n            <Col xs={2}>{permissions.mic ? \"✔\" : \"\"}</Col>\r\n            <Col xs={22}>Unmute Themselves</Col>\r\n          </Row>\r\n        </Col>\r\n        <Col\r\n          xs={24}\r\n          onClick={() =>\r\n            setPermissions({ ...permissions, cam: !permissions.cam })\r\n          }\r\n          className=\"clickable\"\r\n        >\r\n          <Row align=\"middle\">\r\n            <Col xs={2}>{permissions.cam ? \"✔\" : \"\"}</Col>\r\n            <Col xs={22}>Start Video</Col>\r\n          </Row>\r\n        </Col>\r\n        <Col\r\n          xs={24}\r\n          onClick={() =>\r\n            setPermissions({\r\n              ...permissions,\r\n              whiteboard: !permissions.whiteboard,\r\n            })\r\n          }\r\n          className=\"clickable\"\r\n        >\r\n          <Row align=\"middle\">\r\n            <Col xs={2}>{permissions.whiteboard ? \"✔\" : \"\"}</Col>\r\n            <Col xs={22}>Use Whiteboard</Col>\r\n          </Row>\r\n        </Col>\r\n        <Col\r\n          xs={24}\r\n          onClick={() =>\r\n            setPermissions({\r\n              ...permissions,\r\n              canDownload: !permissions.canDownload,\r\n            })\r\n          }\r\n          className=\"clickable\"\r\n        >\r\n          <Row align=\"middle\">\r\n            <Col xs={2}>{permissions.canDownload ? \"✔\" : \"\"}</Col>\r\n            <Col xs={22}>Allow Download</Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }, [permissions, setPermissions]);\r\n\r\n  const endMenu = useMemo(\r\n    () => (\r\n      <Row justify=\"center\" className=\"settings-options\">\r\n        <Col\r\n          xs={24}\r\n          onClick={() => {\r\n            SystemMessage.endMeeting();\r\n            navigate(\"/meetings\");\r\n          }}\r\n        >\r\n          <Button type=\"ghost\" className=\"w-100 end-meet-btn\">\r\n            End Metting for All\r\n          </Button>\r\n        </Col>\r\n        <Col xs={24} onClick={() => navigate(\"/meetings\")}>\r\n          <Button type=\"ghost\" className=\"w-100 leave-meet-btn\">\r\n            Leave Metting\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    ),\r\n    [navigate, SystemMessage],\r\n  );\r\n\r\n  // const endCurrentShareLabel = useMemo(() => {\r\n  //   let onClick;\r\n  //   let text;\r\n\r\n  //   if (sharingScreen) {\r\n  //     onClick = unPublishScreen;\r\n  //     text = \"Stop Screen Share\";\r\n  //   } else if (sharingDim) {\r\n  //     onClick = SystemMessage.stopDim;\r\n  //     text = \"Stop Dimension Share\";\r\n  //   } else if (sharingWhiteboard) {\r\n  //     onClick = SystemMessage.stopWhiteboard;\r\n  //     text = \"Stop Whiteboard Share\";\r\n  //   } else if (sharingFile) {\r\n  //     onClick = SystemMessage.stopFilePreview;\r\n  //     text = \"Stop File Share\";\r\n  //   } else {\r\n  //     return null;\r\n  //   }\r\n\r\n  //   return (\r\n  //     <Row align=\"middle\" gutter={[8, 0]} wrap={false} onClick={onClick}>\r\n  //       <Col>\r\n  //         <Row align=\"middle\">\r\n  //           <ScreenSVG color=\"#fff\" style={{ width: \"16px\", height: \"16px\" }} />\r\n  //         </Row>\r\n  //       </Col>\r\n  //       <Col>\r\n  //         <Typography.Text className=\"fz-16 wc fw-300\">{text}</Typography.Text>\r\n  //       </Col>\r\n  //     </Row>\r\n  //   );\r\n  // }, [\r\n  //   SystemMessage,\r\n  //   sharingDim,\r\n  //   sharingFile,\r\n  //   sharingScreen,\r\n  //   sharingWhiteboard,\r\n  //   unPublishScreen,\r\n  // ]);\r\n\r\n  return (\r\n    <>\r\n      <Row\r\n        align={\"bottom\"}\r\n        justify=\"space-between\"\r\n        style={{ padding: \"10px 14px\", position: \"relative\" }}\r\n      >\r\n        {showArrow && (\r\n          <span\r\n            className=\"open-settings clickable\"\r\n            onClick={() => setControlSettingsShow((prev) => !prev)}\r\n          >\r\n            <ArrowDownSVG\r\n              color=\"#fff\"\r\n              style={{\r\n                width: \"14px\",\r\n                height: \"14px\",\r\n                rotate: controlSettingsShow ? \"-180deg\" : \"0deg\",\r\n                transition: \"all 0.3s ease-in-out\",\r\n              }}\r\n            />\r\n          </span>\r\n        )}\r\n\r\n        <Col xs={0} md={3}>\r\n          {!sharingDim && (\r\n            <Typography.Text\r\n              className=\"fz-12 wc\"\r\n              ellipsis\r\n              style={{\r\n                background: \"rgba(0, 0, 0, 0.35)\",\r\n                borderRadius: \"43px\",\r\n                padding: \"1px 8px\",\r\n              }}\r\n            >\r\n              {userFullName}\r\n            </Typography.Text>\r\n          )}\r\n        </Col>\r\n\r\n        <Col flex={1}>\r\n          <Row justify=\"center\" align=\"middle\">\r\n            <Tooltip title=\"Sound on/off\">\r\n              <div className=\"icon-wrapper\" onClick={toggleSoundMute}>\r\n                {soundMuted ? (\r\n                  <NoSoundSVG\r\n                    color=\"#fff\"\r\n                    style={{ width: \"20px\", height: \"20px\" }}\r\n                  />\r\n                ) : (\r\n                  <SoundSVG\r\n                    color=\"#fff\"\r\n                    style={{ width: \"20px\", height: \"20px\" }}\r\n                  />\r\n                )}\r\n              </div>\r\n            </Tooltip>\r\n\r\n            {/* <Dropdown\r\n              placement=\"top\"\r\n              trigger={[\"click\"]}\r\n              overlay={\r\n                <Menu\r\n                  className=\"share-screen-options\"\r\n                  items={[\r\n                    {\r\n                      key: \"0\",\r\n                      label: (\r\n                        <Row justify=\"center\">\r\n                          <Typography.Text className=\"fz-16 wc w-600\">\r\n                            Share\r\n                          </Typography.Text>\r\n                        </Row>\r\n                      ),\r\n                      style: { pointerEvents: \"none\" },\r\n                    },\r\n                    {\r\n                      key: \"1\",\r\n                      label: (\r\n                        <Row align=\"middle\" gutter={[8, 0]} wrap={false}>\r\n                          <Col>\r\n                            <Row align=\"middle\">\r\n                              <WebViewSVG />\r\n                            </Row>\r\n                          </Col>\r\n                          <Col>\r\n                            <Typography.Text className=\"fz-16 wc fw-300\">\r\n                              Share Tools\r\n                            </Typography.Text>\r\n                          </Col>\r\n                        </Row>\r\n                      ),\r\n                      onClick: () => setActiveBtn(\"tools\"),\r\n                    },\r\n                    {\r\n                      key: \"2\",\r\n                      label: endCurrentShareLabel,\r\n                    },\r\n                  ]}\r\n                />\r\n              }\r\n            >\r\n              <div\r\n                className=\"icon-wrapper\"\r\n                style={{\r\n                  background:\r\n                    \"linear-gradient(270deg, #74b715 0%, #0129b7 100%)\",\r\n                  opacity: isHost ? \"1\" : \"0.5\",\r\n                  pointerEvents: isHost ? \"auto\" : \"none\",\r\n                }}\r\n              >\r\n                <ScreenSVG style={{ width: \"20px\", height: \"20px\" }} />\r\n              </div>\r\n            </Dropdown> */}\r\n\r\n            <Row\r\n              wrap={false}\r\n              align=\"middle\"\r\n              gutter={[12, 0]}\r\n              className=\"two-icons\"\r\n            >\r\n              <Col>\r\n                <Tooltip title={audioMuted ? \"Unmute\" : \"Mute\"}>\r\n                  <div\r\n                    className=\"center-items clickable\"\r\n                    onClick={() => {\r\n                      if (!isHost && !permissions.mic) return;\r\n\r\n                      toggleAudioMute();\r\n                    }}\r\n                  >\r\n                    {audioMuted ? (\r\n                      <MuteVoiceSVG\r\n                        color=\"#fff\"\r\n                        style={{ width: \"20px\", height: \"20px\" }}\r\n                      />\r\n                    ) : (\r\n                      <VoiceSVG\r\n                        color=\"#fff\"\r\n                        style={{ width: \"20px\", height: \"20px\" }}\r\n                      />\r\n                    )}\r\n                  </div>\r\n                </Tooltip>\r\n              </Col>\r\n              <Col>\r\n                <Tooltip\r\n                  title={!cameraEnabled ? \"Turn on Camera\" : \"Turn off Camera\"}\r\n                >\r\n                  <div\r\n                    className=\"center-items clickable\"\r\n                    onClick={() => {\r\n                      if (!isHost && !permissions.cam) return;\r\n\r\n                      toggleVideo();\r\n                    }}\r\n                  >\r\n                    {!cameraEnabled ? (\r\n                      <NoVideoSVG\r\n                        color=\"#fff\"\r\n                        style={{ width: \"20px\", height: \"20px\" }}\r\n                      />\r\n                    ) : (\r\n                      <VideoSVG\r\n                        color=\"#fff\"\r\n                        style={{ width: \"20px\", height: \"20px\" }}\r\n                      />\r\n                    )}\r\n                  </div>\r\n                </Tooltip>\r\n              </Col>\r\n            </Row>\r\n          </Row>\r\n        </Col>\r\n        <Col xs={0} md={3}>\r\n          <Row justify=\"end\" gutter={[12, 0]} wrap={false}>\r\n            {isHost ? (\r\n              <>\r\n                <Col>\r\n                  <Dropdown\r\n                    placement=\"top\"\r\n                    trigger={[\"click\"]}\r\n                    overlay={settingsMenu}\r\n                  >\r\n                    <div className=\"icon-wrapper\">\r\n                      <SettingFillSVG\r\n                        color=\"#fff\"\r\n                        style={{ width: \"20px\", height: \"20px\" }}\r\n                      />\r\n                    </div>\r\n                  </Dropdown>\r\n                </Col>\r\n                <Col>\r\n                  <Dropdown\r\n                    placement=\"topRight\"\r\n                    trigger={[\"click\"]}\r\n                    overlay={endMenu}\r\n                  >\r\n                    <div\r\n                      style={{ marginInlineEnd: \"0px\", background: \"#E81224\" }}\r\n                      className=\"icon-wrapper\"\r\n                    >\r\n                      <CallEndSVG />\r\n                    </div>\r\n                  </Dropdown>\r\n                </Col>\r\n              </>\r\n            ) : (\r\n              <div\r\n                style={{ marginInlineEnd: \"0px\", background: \"#E81224\" }}\r\n                className=\"icon-wrapper\"\r\n                onClick={() => navigate(\"/meetings\")}\r\n              >\r\n                <CallEndSVG />\r\n              </div>\r\n            )}\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row justify=\"center\">\r\n        <Col xs={24} md={0} style={{ marginTop: \"24px\" }}>\r\n          <Row justify=\"center\" align=\"middle\" gutter={[12, 0]} wrap={false}>\r\n            {isHost ? (\r\n              <>\r\n                <Col>\r\n                  <Dropdown\r\n                    placement=\"top\"\r\n                    trigger={[\"click\"]}\r\n                    overlay={settingsMenu}\r\n                  >\r\n                    <div className=\"icon-wrapper\">\r\n                      <SettingFillSVG\r\n                        color=\"#fff\"\r\n                        style={{ width: \"20px\", height: \"20px\" }}\r\n                      />\r\n                    </div>\r\n                  </Dropdown>\r\n                </Col>\r\n                <Col>\r\n                  <Dropdown\r\n                    placement=\"top\"\r\n                    trigger={[\"click\"]}\r\n                    overlay={endMenu}\r\n                  >\r\n                    <div\r\n                      style={{ marginInlineEnd: \"0px\", background: \"#E81224\" }}\r\n                      className=\"icon-wrapper\"\r\n                    >\r\n                      <CallEndSVG />\r\n                    </div>\r\n                  </Dropdown>\r\n                </Col>\r\n              </>\r\n            ) : (\r\n              <div\r\n                style={{ marginInlineEnd: \"0px\", background: \"#E81224\" }}\r\n                className=\"icon-wrapper\"\r\n                onClick={() => navigate(\"/meetings\")}\r\n              >\r\n                <CallEndSVG />\r\n              </div>\r\n            )}\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n\r\n      {myDims.length > 0 && (\r\n        <Modal\r\n          footer={null}\r\n          closable={false}\r\n          onCancel={() => setDimModalOpen(false)}\r\n          open={dimModalOpen}\r\n          title=\"Please select a dimension to share\"\r\n          centered\r\n          width={500}\r\n        >\r\n          <Row gutter={[10, 10]}>\r\n            {myDims.map((dim) => (\r\n              <Col\r\n                key={dim.id}\r\n                span={8}\r\n                className=\"meeting-call-main-dim-col\"\r\n                onClick={() => {\r\n                  SystemMessage.shareDim(dim.id);\r\n                  setDimModalOpen(false);\r\n                }}\r\n              >\r\n                <Image\r\n                  style={{\r\n                    width: \"100%\",\r\n                    maxHeight: 200,\r\n                    objectFit: \"cover\",\r\n                    borderRadius: 12,\r\n                  }}\r\n                  src={dim.image}\r\n                  preview={false}\r\n                />\r\n\r\n                <Typography className=\"fz-16\">\r\n                  {dim.customerDimensionTranslations[0].name}\r\n                </Typography>\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { useContext } from \"react\";\r\nimport { Avatar, Col, Image, Row, Tooltip } from \"antd\";\r\nimport {\r\n  AlbumsSVG,\r\n  CounterSVG,\r\n  FileSVG,\r\n  PackageSVG,\r\n  ParticipantsSVG,\r\n  SMSSVG,\r\n  ShareDimenstionSVG,\r\n  ShoppingCartSVG,\r\n  ToolsSVG,\r\n  VirtualMeetSVG,\r\n} from \"assets/jsx-svg\";\r\nimport userContext from \"context/userContext\";\r\n\r\nimport logo from \"assets/images/logo.png\";\r\nimport hologram from \"assets/images/3d-hologram.png\";\r\n\r\nimport \"./styles.css\";\r\nimport { CustomerServiceFilled } from \"@ant-design/icons\";\r\n\r\nexport default function MeetNavigateSide({\r\n  isHost,\r\n  activeBtn,\r\n  setActiveBtn,\r\n  setHideSide,\r\n  sharedDimId,\r\n  askedForCounter,\r\n  setMainFullScreen,\r\n}) {\r\n  const { user } = useContext(userContext);\r\n\r\n  console.warn(activeBtn);\r\n  return (\r\n    <Row\r\n      justify=\"start\"\r\n      align=\"middle\"\r\n      wrap={false}\r\n      className=\"meet-navigate-side\"\r\n    >\r\n      <Col>\r\n        <Row justify=\"center\">\r\n          <Image\r\n            preview={false}\r\n            width={32}\r\n            height={32}\r\n            src={logo}\r\n            className=\"clickable\"\r\n            onClick={() => setHideSide((prev) => !prev)}\r\n          />\r\n        </Row>\r\n      </Col>\r\n\r\n      <Col className=\"virtual-support-nav-sider-btns-wraper\">\r\n        <Row\r\n          justify=\"space-between\"\r\n          align=\"middle\"\r\n          gutter={[\r\n            { xs: 20, lg: 0 },\r\n            { xs: 0, lg: 40 },\r\n          ]}\r\n          className=\"virtual-support-nav-sider-btns\"\r\n        >\r\n          {/* For All users */}\r\n          {[\r\n            {\r\n              id: \"participant\",\r\n              title: \"Participants\",\r\n              icon: ParticipantsSVG,\r\n            },\r\n            { id: \"chat\", title: \"Chat\", icon: SMSSVG },\r\n          ].map((item) => (\r\n            <Col key={item.id}>\r\n              <Row\r\n                justify=\"center\"\r\n                className={activeBtn === item.id && \"sider-active-btn\"}\r\n              >\r\n                <Tooltip title={item.title} mouseLeaveDelay={0}>\r\n                  <item.icon\r\n                    className=\"clickable\"\r\n                    onClick={() => {\r\n                      setHideSide(false);\r\n                      setMainFullScreen && setMainFullScreen(false);\r\n                      setActiveBtn(item.id);\r\n                    }}\r\n                  />\r\n                </Tooltip>\r\n              </Row>\r\n            </Col>\r\n          ))}\r\n\r\n          {/* Not Host User Only */}\r\n          {!isHost && (\r\n            <>\r\n              <Col>\r\n                <Row\r\n                  justify=\"center\"\r\n                  className={activeBtn === \"myCart\" && \"sider-active-btn\"}\r\n                >\r\n                  <Tooltip title=\"My Cart\" mouseLeaveDelay={0}>\r\n                    <ShoppingCartSVG\r\n                      className=\"clickable\"\r\n                      style={{ width: \"22px\", height: \"22px\" }}\r\n                      color={\"#c7c7cc\"}\r\n                      onClick={() => {\r\n                        setHideSide(false);\r\n                        setMainFullScreen && setMainFullScreen(false);\r\n                        setActiveBtn(\"myCart\");\r\n                      }}\r\n                    />\r\n                  </Tooltip>\r\n                </Row>\r\n              </Col>\r\n\r\n              <Col>\r\n                <Row\r\n                  justify=\"center\"\r\n                  className={activeBtn === \"sharedFiles\" && \"sider-active-btn\"}\r\n                >\r\n                  <Tooltip title=\"Shared Files\" mouseLeaveDelay={0}>\r\n                    <FileSVG\r\n                      className=\"clickable\"\r\n                      style={{ width: \"22px\", height: \"22px\" }}\r\n                      color={\"#c7c7cc\"}\r\n                      onClick={() => {\r\n                        setHideSide(false);\r\n                        setMainFullScreen && setMainFullScreen(false);\r\n                        setActiveBtn(\"sharedFiles\");\r\n                      }}\r\n                    />\r\n                  </Tooltip>\r\n                </Row>\r\n              </Col>\r\n\r\n              {!!sharedDimId && (\r\n                <Col>\r\n                  <Row\r\n                    justify=\"center\"\r\n                    className={activeBtn === \"sharingDim\" && \"sider-active-btn\"}\r\n                  >\r\n                    <Tooltip title=\"Join Dimension\" mouseLeaveDelay={0}>\r\n                      <ShareDimenstionSVG\r\n                        className=\"clickable\"\r\n                        style={{ width: \"22px\", height: \"22px\" }}\r\n                        color={\"#c7c7cc\"}\r\n                        onClick={() => {\r\n                          setHideSide(false);\r\n                          setMainFullScreen && setMainFullScreen(false);\r\n                          setActiveBtn(\"sharingDim\");\r\n                        }}\r\n                      />\r\n                    </Tooltip>\r\n                  </Row>\r\n                </Col>\r\n              )}\r\n\r\n              {askedForCounter && (\r\n                <Col>\r\n                  <Row\r\n                    justify=\"center\"\r\n                    className={\r\n                      activeBtn === \"userCounter\" && \"sider-active-btn\"\r\n                    }\r\n                  >\r\n                    <Tooltip title=\"Counter\" mouseLeaveDelay={0}>\r\n                      <CounterSVG\r\n                        className=\"clickable\"\r\n                        style={{ width: \"22px\", height: \"22px\" }}\r\n                        color={\"#c7c7cc\"}\r\n                        onClick={() => {\r\n                          setHideSide(false);\r\n                          setMainFullScreen && setMainFullScreen(false);\r\n                          setActiveBtn(\"userCounter\");\r\n                        }}\r\n                      />\r\n                    </Tooltip>\r\n                  </Row>\r\n                </Col>\r\n              )}\r\n            </>\r\n          )}\r\n\r\n          {/* Host User Only */}\r\n          {isHost && (\r\n            <>\r\n              {[\r\n                {\r\n                  id: \"inventory\",\r\n                  title: \"Inventory\",\r\n                  icon: PackageSVG,\r\n                },\r\n                {\r\n                  id: \"tools\",\r\n                  title: \"Sharing Tools\",\r\n                  icon: ToolsSVG,\r\n                },\r\n                {\r\n                  id: \"counter\",\r\n                  title: \"Counter\",\r\n                  icon: CounterSVG,\r\n                },\r\n                {\r\n                  id: \"counterUserSharedData\",\r\n                  title: \"Users Shared Data\",\r\n                  icon: VirtualMeetSVG,\r\n                },\r\n                {\r\n                  id: \"productionTools\",\r\n                  title: \"Production Tools\",\r\n                  icon: AlbumsSVG,\r\n                },\r\n                {\r\n                  id: \"desks\",\r\n                  title: \"Desks\",\r\n                  icon: CustomerServiceFilled,\r\n                },\r\n                {\r\n                  id: \"holomeet\",\r\n                  title: \"Holomeet\",\r\n                  image: hologram,\r\n                },\r\n              ].map((item) => (\r\n                <Col key={item.id}>\r\n                  <Row\r\n                    justify=\"center\"\r\n                    className={activeBtn === item.id && \"sider-active-btn\"}\r\n                  >\r\n                    <Tooltip title={item.title} mouseLeaveDelay={0}>\r\n                      {item.icon ? (\r\n                        <item.icon\r\n                          color=\"#c7c7cc\"\r\n                          className=\"clickable\"\r\n                          style={{\r\n                            width: \"24px\",\r\n                            height: \"24px\",\r\n                            fontSize: \"24px\",\r\n                            color: \"#c7c7cc\",\r\n                          }}\r\n                          onClick={() => {\r\n                            setHideSide(false);\r\n                            setMainFullScreen && setMainFullScreen(false);\r\n                            setActiveBtn(item.id);\r\n                          }}\r\n                        />\r\n                      ) : (\r\n                        <Image\r\n                          className=\"clickable\"\r\n                          preview={false}\r\n                          width={24}\r\n                          height={24}\r\n                          src={item.image}\r\n                          onClick={() => {\r\n                            setHideSide(false);\r\n                            setMainFullScreen && setMainFullScreen(false);\r\n                            setActiveBtn(item.id);\r\n                          }}\r\n                        />\r\n                      )}\r\n                    </Tooltip>\r\n                  </Row>\r\n                </Col>\r\n              ))}\r\n            </>\r\n          )}\r\n        </Row>\r\n      </Col>\r\n\r\n      <Col className=\"virtual-support-avatar\">\r\n        <Avatar\r\n          src={user.profileImage}\r\n          size={40}\r\n          style={{ objectFit: \"cover\" }}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n","import { Avatar, Col, Input, Row, Typography } from \"antd\";\r\nimport profileImg from \"assets/images/avatar.png\";\r\nimport {\r\n  MuteVoiceSVG,\r\n  NoVideoSVG,\r\n  SearchSVG,\r\n  VideoSVG,\r\n  VoiceSVG,\r\n} from \"assets/jsx-svg\";\r\n\r\nimport \"./styles.css\";\r\n\r\nexport default function MeetingCallParticipants({ participants, onSearch }) {\r\n  return (\r\n    <>\r\n      <Typography.Text className=\"fw-500 fz-18\">Participants</Typography.Text>\r\n\r\n      <Row gutter={[0, 14]} style={{ marginTop: \"24px\" }}>\r\n        <Col xs={24}>\r\n          <Input\r\n            onChange={onSearch}\r\n            prefix={<SearchSVG />}\r\n            placeholder=\"Search\"\r\n            style={{\r\n              borderRadius: \"14px\",\r\n              border: \"none\",\r\n              height: \"40px\",\r\n            }}\r\n          />\r\n        </Col>\r\n        <Col xs={24}>\r\n          <Row className=\"support-participants\" gutter={[0, 12]}>\r\n            {participants?.map((participant) => (\r\n              <Col key={participant.uid} xs={24}>\r\n                <Row\r\n                  justify=\"space-between\"\r\n                  align=\"middle\"\r\n                  wrap={false}\r\n                  style={{\r\n                    padding: \"8px 12px\",\r\n                    background: participant.isHost && \"#fff\",\r\n                    borderRadius: \"32px\",\r\n                  }}\r\n                >\r\n                  <Col flex={1}>\r\n                    <Row align=\"middle\" wrap={false}>\r\n                      <Avatar\r\n                        style={{ objectFit: \"cover\" }}\r\n                        src={participant.profileImage || profileImg}\r\n                        size={35}\r\n                      />\r\n\r\n                      <Typography.Text\r\n                        ellipsis\r\n                        style={{\r\n                          marginInlineStart: \"0.5rem\",\r\n                          color: \"#888888\",\r\n                        }}\r\n                        className=\"fz-12\"\r\n                      >\r\n                        {participant.name}\r\n                      </Typography.Text>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col>\r\n                    <Row\r\n                      align=\"middle\"\r\n                      className=\"participant-status\"\r\n                      wrap={false}\r\n                    >\r\n                      {participant.isHost && (\r\n                        <span\r\n                          style={{\r\n                            color: \"#93C850\",\r\n                            fontSize: \"12px\",\r\n                            marginInlineEnd: \"8px\",\r\n                          }}\r\n                        >\r\n                          Host\r\n                        </span>\r\n                      )}\r\n                      {participant.hasAudio && (\r\n                        <VoiceSVG\r\n                          color={participant.talking ? \"#93C850\" : \"#A5A299\"}\r\n                          style={{ width: \"18px\", height: \"18px\" }}\r\n                        />\r\n                      )}\r\n                      {!participant.hasAudio && (\r\n                        <MuteVoiceSVG\r\n                          color=\"#BDBDBD\"\r\n                          style={{ width: \"18px\", height: \"18px\" }}\r\n                        />\r\n                      )}\r\n                      {participant.hasVideo && (\r\n                        <VideoSVG\r\n                          color=\"#A5A299\"\r\n                          style={{ width: \"18px\", height: \"18px\" }}\r\n                        />\r\n                      )}\r\n                      {!participant.hasVideo && (\r\n                        <NoVideoSVG\r\n                          color=\"#BDBDBD\"\r\n                          style={{ width: \"18px\", height: \"18px\" }}\r\n                        />\r\n                      )}\r\n                    </Row>\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport { API_BASE } from \"./config\";\r\n\r\nconst SERVICE_BASE = API_BASE + \"/business/shop/product/\";\r\nconst COMMON_BASE = API_BASE + \"/business/shop/common/\";\r\nconst CART_BASE = API_BASE + \"/business/shop/cart/\";\r\n\r\nconst getProductList = ({\r\n  offset = 0,\r\n  limit = 100,\r\n  name = \"\",\r\n  mainCategory = [],\r\n  subCategory = [],\r\n  sortBy = \"\",\r\n}) => {\r\n  return axios.get(\r\n    SERVICE_BASE +\r\n      `get-products?limit=${limit}&offset=${offset}&name=${name}&mainCategory=${mainCategory}&subCategory=${subCategory}&sortBy=${sortBy}`,\r\n  );\r\n};\r\n\r\nconst getProductById = (productId) => {\r\n  return axios.get(SERVICE_BASE + `get-product/${productId}`);\r\n};\r\n\r\nconst getCategories = () => {\r\n  return axios.get(COMMON_BASE + \"get-categories\");\r\n};\r\n\r\nconst getMyProductList = ({\r\n  offset = 0,\r\n  limit = 1000,\r\n  name = \"\",\r\n  mainCategory = [],\r\n  subCategory = \"\",\r\n  sortBy = \"\",\r\n}) => {\r\n  return axios.get(\r\n    SERVICE_BASE +\r\n      `get-my-products?name=${name}&mainCategory=${mainCategory}&subCategory=${subCategory}&sortBy=${sortBy}&limit=${limit}&offset=${offset}`,\r\n  );\r\n};\r\n\r\nconst addToCart = (data) => {\r\n  return axios.post(CART_BASE + \"add-edit-quantity-support\", data);\r\n};\r\n\r\nconst getCartData = () => {\r\n  return axios.get(CART_BASE + \"list\");\r\n};\r\n\r\nconst ShopService = {\r\n  getProductList,\r\n  getProductById,\r\n  getCategories,\r\n  getMyProductList,\r\n  addToCart,\r\n  getCartData,\r\n};\r\n\r\nexport default ShopService;\r\n","import { Col, Image, Row, Skeleton, Typography } from \"antd\";\r\nimport { ShoppingCartSVG } from \"assets/jsx-svg\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport ShopService from \"services/shop.service\";\r\nimport { axiosCatch } from \"utils/axiosUtils\";\r\nimport { AppstoreOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nimport defualtImage from \"assets/images/download.png\";\r\nimport \"./styles.css\";\r\n\r\nexport default function InventorySection({ setProductSelected, setActiveBtn }) {\r\n  const [products, setProducts] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [productLoading, setProductLoading] = useState(false);\r\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    ShopService.getCategories()\r\n      .then(({ data }) => {\r\n        setCategories(data.data.rows);\r\n      })\r\n      .catch(axiosCatch)\r\n      .finally(() => setLoading(false));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setProductLoading(true);\r\n    ShopService.getMyProductList({\r\n      mainCategory: selectedCategory ? JSON.stringify([selectedCategory]) : \"\",\r\n    })\r\n      .then(({ data }) => {\r\n        setProducts(data.data.rows);\r\n      })\r\n      .catch(axiosCatch)\r\n      .finally(() => setProductLoading(false));\r\n  }, [selectedCategory]);\r\n\r\n  return (\r\n    <>\r\n      <Typography.Text className=\"fz-18 fw-500\">Iventory</Typography.Text>\r\n      <section style={{ marginTop: \"24px\" }}>\r\n        <Row gutter={[0, 16]}>\r\n          {/* <Col xs={24}>\r\n          <Input\r\n            prefix={<SearchSVG />}\r\n            placeholder=\"Search\"\r\n            style={{ borderRadius: \"14px\", border: \"none\" }}\r\n          />\r\n        </Col> */}\r\n          <Col xs={24}>\r\n            <Row\r\n              className=\"inventory-categories\"\r\n              wrap={false}\r\n              style={{ overflowX: \"auto\", paddingBottom: \"1rem\" }}\r\n              gutter={[8, 0]}\r\n            >\r\n              <Col\r\n                onClick={() => setSelectedCategory(\"\")}\r\n                className=\"clickable\"\r\n              >\r\n                <Row gutter={[0, 4]}>\r\n                  <Col xs={24}>\r\n                    <Row justify=\"center\">\r\n                      <div\r\n                        className=\"inventory-category\"\r\n                        style={{\r\n                          background:\r\n                            selectedCategory === \"\"\r\n                              ? \"linear-gradient(270deg, #960bcd 0%, #44c9ff 100%)\"\r\n                              : \"\",\r\n                        }}\r\n                      >\r\n                        <AppstoreOutlined\r\n                          style={{ color: \"#fff\", fontSize: \"30px\" }}\r\n                        />\r\n                      </div>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col xs={24}>\r\n                    <Row justify=\"center\">\r\n                      <Typography.Text ellipsis>All</Typography.Text>\r\n                    </Row>\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n\r\n              {loading &&\r\n                [1, 2, 3, 4, 5, 6].map((item) => (\r\n                  <Col>\r\n                    <Skeleton.Avatar size=\"large\" />\r\n                  </Col>\r\n                ))}\r\n\r\n              {categories?.map((category) => (\r\n                <Col\r\n                  onClick={() => setSelectedCategory(category.id)}\r\n                  className=\"clickable\"\r\n                  style={{ maxWidth: \"80px\" }}\r\n                >\r\n                  <Row gutter={[0, 4]}>\r\n                    <Col xs={24}>\r\n                      <Row justify=\"center\">\r\n                        <div\r\n                          className=\"inventory-category\"\r\n                          style={{\r\n                            background:\r\n                              selectedCategory === category.id\r\n                                ? \"linear-gradient(270deg, #960bcd 0%, #44c9ff 100%)\"\r\n                                : \"\",\r\n                          }}\r\n                        >\r\n                          {category.image ? (\r\n                            <Image\r\n                              preview={false}\r\n                              src={category.image}\r\n                              alt=\"category\"\r\n                              style={{ borderRadius: \"50%\" }}\r\n                              width={30}\r\n                              height={30}\r\n                            />\r\n                          ) : (\r\n                            <ShoppingCartSVG\r\n                              color=\"#fff\"\r\n                              style={{ width: \"24px\", height: \"24px\" }}\r\n                            />\r\n                          )}\r\n                        </div>\r\n                      </Row>\r\n                    </Col>\r\n                    <Col xs={24}>\r\n                      <Row justify=\"center\">\r\n                        <Typography.Text ellipsis>\r\n                          {\r\n                            category.businessCategoryTranslations.find(\r\n                              (lang) => lang.languageCode === \"en\",\r\n                            )?.name\r\n                          }\r\n                        </Typography.Text>\r\n                      </Row>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n              ))}\r\n            </Row>\r\n\r\n            <Row className=\"inventory-section\">\r\n              {productLoading && (\r\n                <>\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </>\r\n              )}\r\n              {products?.map((product) => (\r\n                <Col xs={24} className=\"inventory-product\">\r\n                  <Row justify=\"space-between\" wrap={false} gutter={[8, 0]}>\r\n                    <Col flex={1}>\r\n                      <Row gutter={[8, 0]} wrap={false}>\r\n                        <Col>\r\n                          <div className=\"inventory-product-img\">\r\n                            <Image\r\n                              // preview={false}\r\n                              alt=\"productImage\"\r\n                              width={40}\r\n                              height={40}\r\n                              src={\r\n                                product.businessProductVariants[0]?.images\r\n                                  ?.length\r\n                                  ? product.businessProductVariants[0]\r\n                                      ?.images[0]\r\n                                  : defualtImage\r\n                              }\r\n                            />\r\n                          </div>\r\n                        </Col>\r\n                        <Col>\r\n                          <Typography.Text ellipsis>\r\n                            {\r\n                              product.businessProductTranslations.find(\r\n                                (lang) => lang.languageCode === \"en\",\r\n                              ).name\r\n                            }\r\n                          </Typography.Text>\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n                    <Col>\r\n                      <Row justify=\"end\" gutter={[0, 8]}>\r\n                        <Col xs={24}>\r\n                          <Row justify=\"end\">\r\n                            <Typography.Text className=\"fz-16 fw-500\">\r\n                              $ {product.businessProductVariants[0].price}\r\n                            </Typography.Text>\r\n                          </Row>\r\n                        </Col>\r\n                        <Col xs={24}>\r\n                          <Row justify=\"end\">\r\n                            <button\r\n                              className=\"add-cart\"\r\n                              onClick={() => {\r\n                                setProductSelected(product.id);\r\n                                setActiveBtn(\"productSection\");\r\n                              }}\r\n                            >\r\n                              <Row align=\"middle\" gutter={[6, 0]}>\r\n                                <Col>\r\n                                  <PlusOutlined />\r\n                                </Col>\r\n                                <Col>\r\n                                  <Typography.Text className=\"fw-400\">\r\n                                    Cart\r\n                                  </Typography.Text>\r\n                                </Col>\r\n                              </Row>\r\n                            </button>\r\n                          </Row>\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n              ))}\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  Image,\r\n  InputNumber,\r\n  notification,\r\n  Row,\r\n  Skeleton,\r\n  Spin,\r\n  Tooltip,\r\n  Typography,\r\n} from \"antd\";\r\n\r\nimport ShopService from \"services/shop.service\";\r\nimport { ArrowRightSVG } from \"assets/jsx-svg\";\r\nimport { axiosCatch } from \"utils/axiosUtils\";\r\nimport { LoadingOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nimport profileImg from \"assets/images/avatar.png\";\r\nimport defualtImage from \"assets/images/download.png\";\r\nimport \"./styles.css\";\r\n\r\nexport default function ProductSection({\r\n  setProductSelected,\r\n  productSelected,\r\n  participants,\r\n  setActiveBtn,\r\n}) {\r\n  const [productData, setProductData] = useState({});\r\n  const [currentProductVariant, setCurrentProductVariant] = useState([]);\r\n  const [productQuantity, setProductQuantity] = useState(1);\r\n  const [selectedVariant, setSelectedVariant] = useState([]);\r\n  const [attributes, setAttributes] = useState([]);\r\n  const [options, setOptions] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [addLoading, setAddLoading] = useState({ id: 0, loading: false });\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    ShopService.getProductById(productSelected)\r\n      .then(({ data }) => {\r\n        setProductData(data.data.productInfo);\r\n        setCurrentProductVariant(\r\n          data.data.productInfo.businessProductVariants[0],\r\n        );\r\n        setOptions(data.data.productInfo.options);\r\n        setAttributes(data.data.productInfo.options.attributes);\r\n\r\n        setSelectedVariant(\r\n          data.data.productInfo.businessProductVariants[0].title.split(\"/\"),\r\n        );\r\n      })\r\n      .catch(axiosCatch)\r\n      .finally(() => setLoading(false));\r\n  }, [productSelected]);\r\n\r\n  useEffect(() => {\r\n    if (selectedVariant.length > 0) {\r\n      const found = productData?.businessProductVariants.find(\r\n        (variant) => variant.title === selectedVariant.join(\"/\"),\r\n      );\r\n      if (found) {\r\n        setCurrentProductVariant(found);\r\n      }\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [selectedVariant]);\r\n\r\n  const addToCart = ({ customerId }) => {\r\n    setAddLoading({ id: customerId, loading: true });\r\n    ShopService.addToCart({\r\n      productId: productData.id,\r\n      quantity: productQuantity,\r\n      productVariantId: currentProductVariant.id,\r\n      // ahmed\r\n      customerId: customerId,\r\n    })\r\n      .then(() => {\r\n        notification.success({ message: \"Product added successfully ✔\" });\r\n      })\r\n      .catch(axiosCatch)\r\n      .finally(() => setAddLoading({ id: customerId, loading: false }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row\r\n        wrap={false}\r\n        align=\"middle\"\r\n        gutter={[8, 0]}\r\n        style={{ width: \"fit-content\" }}\r\n        className=\"clickable\"\r\n        onClick={() => setActiveBtn(\"inventory\")}\r\n      >\r\n        <Col>\r\n          <Row align=\"middle\">\r\n            <ArrowRightSVG color=\"#8E8E93\" style={{ rotate: \"180deg\" }} />\r\n          </Row>\r\n        </Col>\r\n        <Col>\r\n          <Typography.Text className=\"gc\">Back</Typography.Text>\r\n        </Col>\r\n      </Row>\r\n      <div className=\"support-product-section\">\r\n        {loading && (\r\n          <>\r\n            <Skeleton />\r\n            <Skeleton />\r\n            <Skeleton />\r\n          </>\r\n        )}\r\n\r\n        {productData.id && currentProductVariant && (\r\n          <Row style={{ margin: \"24px 0 45px\" }} gutter={[10, 20]}>\r\n            <Col>\r\n              <Col xs={24}>\r\n                <Image\r\n                  width={140}\r\n                  src={currentProductVariant?.images[0] || defualtImage}\r\n                  style={{ borderRadius: \"16px\" }}\r\n                />\r\n              </Col>\r\n              <Col xs={24}>\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    margin: \"1rem 0 1rem\",\r\n                  }}\r\n                >\r\n                  <Col>\r\n                    <Button\r\n                      className=\"cart-add-btn\"\r\n                      shape=\"circle\"\r\n                      type=\"ghost\"\r\n                      onClick={() =>\r\n                        setProductQuantity((prev) => {\r\n                          if (prev === 0) {\r\n                            return prev;\r\n                          } else {\r\n                            return prev - 1;\r\n                          }\r\n                        })\r\n                      }\r\n                    >\r\n                      -\r\n                    </Button>\r\n                  </Col>\r\n                  <Col>\r\n                    <InputNumber\r\n                      className=\"cart-quantity-input\"\r\n                      controls={false}\r\n                      min={0}\r\n                      max={currentProductVariant.quantity || 0}\r\n                      value={productQuantity}\r\n                      onChange={(e) => setProductQuantity(e)}\r\n                    />\r\n                  </Col>\r\n                  <Col>\r\n                    <Button\r\n                      className=\"cart-add-btn\"\r\n                      shape=\"circle\"\r\n                      onClick={() => setProductQuantity((prev) => prev + 1)}\r\n                    >\r\n                      +\r\n                    </Button>\r\n                  </Col>\r\n                </div>\r\n              </Col>\r\n            </Col>\r\n            <Col flex={1}>\r\n              <Row justify=\"space-between\">\r\n                <Col>\r\n                  <Typography.Text className=\"fz-18 fw-600\">\r\n                    {\r\n                      productData.businessProductTranslations.find(\r\n                        (lang) => lang.languageCode === \"en\",\r\n                      ).name\r\n                    }\r\n                  </Typography.Text>\r\n                </Col>\r\n                <Col>\r\n                  <Typography.Text className=\"fz-18 fw-600\">\r\n                    $ {currentProductVariant.price}\r\n                  </Typography.Text>\r\n                </Col>\r\n              </Row>\r\n\r\n              {attributes?.map((att, index) => (\r\n                <>\r\n                  <Row>\r\n                    <Typography.Text className=\"fz-18 fw-500\">\r\n                      Select{\" \"}\r\n                      {\r\n                        att.lang.find((lang) => lang.lang === \"en\")\r\n                          ?.attributeName\r\n                      }\r\n                    </Typography.Text>\r\n                  </Row>\r\n\r\n                  {att.colorCheck ? (\r\n                    <Row gutter={[22, 22]} style={{ marginTop: \"12px\" }}>\r\n                      {options.attOptions\r\n                        .find((option) => option.attId === att.id)\r\n                        ?.options.map((option) => (\r\n                          <Col key={option.id}>\r\n                            <Tooltip title={option.enOptionName}>\r\n                              <button\r\n                                style={{\r\n                                  backgroundColor: option.color || \"#000\",\r\n                                  outline:\r\n                                    attributes.find(\r\n                                      (attr) => attr.id === att.id,\r\n                                    ).defaulttOption === option.id\r\n                                      ? \"5px solid #9f9f9f\"\r\n                                      : \"\",\r\n                                }}\r\n                                className=\"color-btn\"\r\n                                onClick={() => {\r\n                                  setSelectedVariant((prev) => {\r\n                                    prev[index] = option.enOptionName;\r\n                                    return [...prev];\r\n                                  });\r\n                                  let copy = [...attributes];\r\n                                  let foundIndex = copy.findIndex(\r\n                                    (attr) => attr.id === att.id,\r\n                                  );\r\n                                  if (foundIndex > -1) {\r\n                                    copy[foundIndex].defaulttOption = option.id;\r\n                                  }\r\n\r\n                                  setAttributes([...copy]);\r\n                                }}\r\n                              >\r\n                                <Typography.Text\r\n                                  ellipsis\r\n                                  className=\"color-text\"\r\n                                >\r\n                                  {option.enOptionName}\r\n                                </Typography.Text>\r\n                              </button>\r\n                            </Tooltip>\r\n                          </Col>\r\n                        ))}\r\n                    </Row>\r\n                  ) : (\r\n                    <Row gutter={[22, 22]} style={{ marginTop: \"12px\" }}>\r\n                      {options.attOptions\r\n                        .find((option) => option.attId === att.id)\r\n                        ?.options.map((option) => (\r\n                          <Col key={option.id}>\r\n                            <Tooltip title={option.enOptionName}>\r\n                              <button\r\n                                style={{\r\n                                  backgroundColor:\r\n                                    attributes.find(\r\n                                      (attr) => attr.id === att.id,\r\n                                    ).defaulttOption === option.id\r\n                                      ? \"#9f9f9f\"\r\n                                      : \"\",\r\n                                  color:\r\n                                    attributes.find(\r\n                                      (attr) => attr.id === att.id,\r\n                                    ).defaulttOption === option.id\r\n                                      ? \"white\"\r\n                                      : \"\",\r\n                                }}\r\n                                className=\"size-btn\"\r\n                                onClick={() => {\r\n                                  setSelectedVariant((prev) => {\r\n                                    prev[index] = option.enOptionName;\r\n                                    return [...prev];\r\n                                  });\r\n                                  let copy = [...attributes];\r\n                                  let foundIndex = copy.findIndex(\r\n                                    (attr) => attr.id === att.id,\r\n                                  );\r\n                                  if (foundIndex > -1) {\r\n                                    copy[foundIndex].defaulttOption = option.id;\r\n                                  }\r\n                                  setAttributes([...copy]);\r\n                                }}\r\n                              >\r\n                                <Typography.Text ellipsis>\r\n                                  {option.enOptionName[0]}\r\n                                </Typography.Text>\r\n                              </button>\r\n                            </Tooltip>\r\n                          </Col>\r\n                        ))}\r\n                    </Row>\r\n                  )}\r\n                </>\r\n              ))}\r\n\r\n              <Row className=\"mt-1\" gutter={[10, 10]} align=\"middle\">\r\n                <Col>\r\n                  <div\r\n                    className=\"dot\"\r\n                    style={{\r\n                      background:\r\n                        currentProductVariant.quantity > 0 ? \"#93c850\" : \"#888\",\r\n                    }}\r\n                  />\r\n                </Col>\r\n                <Col>\r\n                  <Typography.Text\r\n                    style={{\r\n                      color:\r\n                        currentProductVariant.quantity > 0 ? \"#888\" : \"eee\",\r\n                    }}\r\n                  >\r\n                    {currentProductVariant.quantity > 0\r\n                      ? `${currentProductVariant.quantity} pieces left available!`\r\n                      : \"Product Will be Avaliable Soon\"}\r\n                  </Typography.Text>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n\r\n            {/* <Col xs={24}>\r\n            <Input\r\n              prefix={<SearchSVG />}\r\n              placeholder=\"Search\"\r\n              style={{\r\n                borderRadius: \"14px\",\r\n                border: \"none\",\r\n                marginTop: \"0px\",\r\n              }}\r\n            />\r\n          </Col> */}\r\n\r\n            <Row\r\n              style={{ width: \"100%\" }}\r\n              className=\"meet-participants\"\r\n              gutter={[0, 12]}\r\n            >\r\n              {participants\r\n                ?.filter((p) => !p.isHost)\r\n                ?.map((participant) => (\r\n                  <Col key={participant.uid} xs={24}>\r\n                    <Row justify=\"space-between\" align=\"middle\" wrap={false}>\r\n                      <Col flex={1}>\r\n                        <Row align=\"middle\" wrap={false}>\r\n                          <Image\r\n                            style={{ borderRadius: \"50%\" }}\r\n                            preview={false}\r\n                            alt=\"profile pic\"\r\n                            src={participant.profileImage || profileImg}\r\n                            width={48}\r\n                            height={48}\r\n                          />\r\n\r\n                          <Typography.Text\r\n                            ellipsis\r\n                            style={{\r\n                              marginInlineStart: \"0.5rem\",\r\n                              color: \"#888888\",\r\n                              fontSize: \"1rem\",\r\n                            }}\r\n                          >\r\n                            {participant.name}\r\n                          </Typography.Text>\r\n                        </Row>\r\n                      </Col>\r\n                      <Col>\r\n                        <button\r\n                          className=\"add-cart\"\r\n                          onClick={() =>\r\n                            addToCart({ customerId: participant.uid })\r\n                          }\r\n                        >\r\n                          <Row align=\"middle\" gutter={[6, 0]}>\r\n                            <Col>\r\n                              {addLoading.id === participant.uid &&\r\n                              addLoading.loading ? (\r\n                                <Spin spinning>\r\n                                  <LoadingOutlined />\r\n                                </Spin>\r\n                              ) : (\r\n                                <PlusOutlined />\r\n                              )}\r\n                            </Col>\r\n                            <Col>\r\n                              <Typography.Text\r\n                                className=\"fw-500\"\r\n                                style={{ color: \"#000\" }}\r\n                              >\r\n                                Cart\r\n                              </Typography.Text>\r\n                            </Col>\r\n                          </Row>\r\n                        </button>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                ))}\r\n            </Row>\r\n          </Row>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import { useEffect, useRef } from \"react\";\r\nimport { Button, Col, Form, Image, Input, Row, Typography } from \"antd\";\r\nimport { LoadingOutlined } from \"@ant-design/icons\";\r\nimport { useForm } from \"antd/es/form/Form\";\r\n\r\nimport { PaperclipSVG, SendSVG } from \"assets/jsx-svg\";\r\nimport profileImg from \"assets/images/avatar.png\";\r\n\r\nimport \"./styles.css\";\r\n\r\nexport default function MeetChat({\r\n  loading,\r\n  messages,\r\n  sendMessage,\r\n  noMarign = false,\r\n  isHost,\r\n  permissions,\r\n}) {\r\n  const [form] = useForm();\r\n\r\n  const messageListEndRef = useRef();\r\n\r\n  const onFinish = async (values) => {\r\n    const msg = values?.message?.trim();\r\n\r\n    if (msg) {\r\n      form.setFieldValue(\"message\", \"\");\r\n      await sendMessage(msg);\r\n      messageListEndRef.current?.scrollIntoView();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (messages.length) {\r\n      messageListEndRef.current?.scrollIntoView();\r\n    }\r\n  }, [messages]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"w-100 h-100 center-items\">\r\n        <LoadingOutlined />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Typography.Text className=\"fz-18 fw-500\">Chat</Typography.Text>\r\n      <Row className=\"support-chat\" style={{ margin: noMarign && \"24px 0rem\" }}>\r\n        <div className=\"meet-chat-panel\">\r\n          <div className=\"chat-list\">\r\n            {messages?.map((message, index) => (\r\n              <Row\r\n                key={index}\r\n                align=\"middle\"\r\n                wrap={false}\r\n                style={{ flexDirection: message.owner && \"row-reverse\" }}\r\n              >\r\n                <Image\r\n                  preview={false}\r\n                  width={45}\r\n                  height={45}\r\n                  src={message.profileImage || profileImg}\r\n                  style={{ borderRadius: \"50%\", objectFit: \"cover\" }}\r\n                />\r\n                <div\r\n                  className=\"chat-message\"\r\n                  style={{\r\n                    marginInlineEnd: message.owner && \"0.5rem\",\r\n                    borderRadius: message.owner && \"15px 3px 15px 15px\",\r\n                  }}\r\n                >\r\n                  <div>\r\n                    <Row justify={message.owner ? \"end\" : \"start\"}>\r\n                      <Typography.Text className=\"fz-12 fw-600\">\r\n                        {message.name}\r\n                      </Typography.Text>\r\n                    </Row>\r\n                  </div>\r\n                  <div>\r\n                    <Row justify={message.owner ? \"end\" : \"start\"}>\r\n                      <Typography.Text className=\"fw-400\">\r\n                        {message.msg}\r\n                      </Typography.Text>\r\n                    </Row>\r\n                  </div>\r\n                </div>\r\n              </Row>\r\n            ))}\r\n            <span\r\n              ref={messageListEndRef}\r\n              style={{\r\n                minHeight: \"1px\",\r\n                overflowAnchor: \"auto\",\r\n                scrollMarginBottom: \"50px\",\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          <Form form={form} onFinish={onFinish}>\r\n            <Row align=\"middle\" justify=\"space-between\" wrap={false}>\r\n              <Col flex={1} className=\"mr-1\">\r\n                <Form.Item name=\"message\">\r\n                  <Input\r\n                    className=\"message-input\"\r\n                    prefix={<PaperclipSVG />}\r\n                    placeholder=\"Message..\"\r\n                    disabled={!isHost && !permissions.chat}\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n\r\n              <Col>\r\n                <Form.Item>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    shape=\"circle\"\r\n                    className=\"center-items\"\r\n                    htmlType=\"submit\"\r\n                  >\r\n                    <SendSVG style={{ width: \"18px\", height: \"18px\" }} />\r\n                  </Button>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </div>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n","import { Button, Col, Image, Row, Typography } from \"antd\";\r\n\r\nimport defualtImage from \"assets/images/download.png\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ShopService from \"services/shop.service\";\r\nimport { axiosCatch } from \"utils/axiosUtils\";\r\nimport \"./styles.css\";\r\n\r\nexport default function MyCart({ setActiveBtn }) {\r\n  const [cart, setCart] = useState([]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const res = await ShopService.getCartData();\r\n        setCart(res.data.data.rows);\r\n      } catch (err) {\r\n        axiosCatch(err);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Typography.Text className=\"fz-18 fw-500\">My Cart</Typography.Text>\r\n      <section className=\"support-my-cart\">\r\n        {cart?.map((item) => (\r\n          <Row\r\n            key={item.id}\r\n            align=\"middle\"\r\n            justify=\"space-between\"\r\n            gutter={[0, 25]}\r\n            className=\"cart-item\"\r\n          >\r\n            <Col>\r\n              <Row\r\n                align=\"middle\"\r\n                justify=\"space-between\"\r\n                gutter={[16, 0]}\r\n                wrap={false}\r\n              >\r\n                <Col>\r\n                  <Image\r\n                    alt=\"product image\"\r\n                    src={\r\n                      item.businessProductVariant?.images?.length\r\n                        ? item.businessProductVariant?.images[0]\r\n                        : defualtImage\r\n                    }\r\n                    width={70}\r\n                    height={70}\r\n                    style={{ borderRadius: \"16px\" }}\r\n                    preview={false}\r\n                  />\r\n                </Col>\r\n                <Col>\r\n                  <Row style={{ maxWidth: \"160px\" }}>\r\n                    <Col xs={24}>\r\n                      <Typography.Text className=\"fz-14 fw-600\" ellipsis>\r\n                        {item.businessProductVariant?.title}\r\n                      </Typography.Text>\r\n                    </Col>\r\n                    <Col xs={24}>\r\n                      <Typography.Text\r\n                        className=\"fz-12\"\r\n                        style={{ color: \"#77838F\" }}\r\n                        ellipsis\r\n                      >\r\n                        Qty: {item.quantity}\r\n                      </Typography.Text>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n\r\n            <Col>\r\n              <Typography.Text className=\"fz-16 fw-600\">\r\n                $ {item.businessProductVariant?.price}\r\n              </Typography.Text>\r\n            </Col>\r\n          </Row>\r\n        ))}\r\n        <Row style={{ marginTop: \"24px\" }}>\r\n          <Col xs={24}>\r\n            <Link to=\"/checkout\">\r\n              <Button type=\"primary\" className=\"w-100\">\r\n                Checkout Now\r\n              </Button>\r\n            </Link>\r\n          </Col>\r\n        </Row>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n","import { Col, Row, Spin, notification, Typography, Button } from \"antd\";\r\nimport { useState } from \"react\";\r\n\r\nimport {\r\n  FileSVG,\r\n  LiveSVG,\r\n  ScreenSVG,\r\n  ShareDimenstionSVG,\r\n  WhiteBoardSVG,\r\n} from \"assets/jsx-svg\";\r\nimport \"./styles.css\";\r\n\r\nexport default function ShareTools({\r\n  setActiveBtn,\r\n  shareWhiteboard,\r\n  isHost,\r\n  permissions,\r\n  sharingScreen,\r\n  unPublishScreen,\r\n  publishScreen,\r\n  SystemMessage,\r\n  sharingDim,\r\n  sharingFile,\r\n  sharingWhiteboard,\r\n}) {\r\n  const [activeTool, setActiveTool] = useState();\r\n  const [activeToolLoading, setActiveToolLoading] = useState(false);\r\n\r\n  const tools = [\r\n    {\r\n      id: 1,\r\n      defaultLabel: sharingScreen ? \"Stop Share Screen\" : \"Share Screen\",\r\n      icon: ScreenSVG,\r\n    },\r\n    {\r\n      id: 2,\r\n      defaultLabel: \"Metaverse Experience\",\r\n      icon: ShareDimenstionSVG,\r\n    },\r\n    {\r\n      id: 3,\r\n      defaultLabel: \"Whiteboard\",\r\n      icon: WhiteBoardSVG,\r\n    },\r\n    // {\r\n    //   id: 4,\r\n    //   defaultLabel: \"World Map\",\r\n    //   icon: WorldMapSVG,\r\n    // },\r\n    {\r\n      id: 5,\r\n      defaultLabel: \"Files\",\r\n      icon: FileSVG,\r\n    },\r\n    {\r\n      id: 6,\r\n      defaultLabel: \"LiveStream\",\r\n      icon: LiveSVG,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <section className=\"share-tools\">\r\n      <Typography.Text className=\"fz-18 fw-500\">Sharing Tools</Typography.Text>\r\n\r\n      <Row gutter={[8, 8]} style={{ marginTop: \"24px\" }}>\r\n        {tools.map((tool) => (\r\n          <Col xs={8} key={tool.id}>\r\n            <Spin spinning={activeTool === tool.id && activeToolLoading}>\r\n              <div\r\n                className={`share-tools-card ${\r\n                  activeTool === tool.id && \"active\"\r\n                }`}\r\n                onClick={() => {\r\n                  if (tool.id === 1) {\r\n                    if (!isHost && !permissions.screen) return;\r\n\r\n                    if (sharingScreen) unPublishScreen();\r\n                    else {\r\n                      if (sharingDim) {\r\n                        SystemMessage.stopDim();\r\n                      } else if (sharingWhiteboard) {\r\n                        SystemMessage.stopWhiteboard();\r\n                      } else if (sharingFile) {\r\n                        SystemMessage.stopFilePreview();\r\n                      }\r\n\r\n                      publishScreen();\r\n                    }\r\n                    setActiveTool(1);\r\n                  } else if (tool.id === 3) {\r\n                    setActiveTool(tool.id);\r\n\r\n                    if (sharingDim) {\r\n                      SystemMessage.stopDim();\r\n                    } else if (sharingScreen) {\r\n                      unPublishScreen();\r\n                    } else if (sharingFile) {\r\n                      SystemMessage.stopFilePreview();\r\n                    }\r\n\r\n                    notification.info({\r\n                      message: \"Initializing whiteboard\",\r\n                    });\r\n                    setActiveToolLoading(true);\r\n                    shareWhiteboard().then(() => setActiveToolLoading(false));\r\n                  } else if (tool.id === 2) {\r\n                    setActiveBtn(\"metaExperience\");\r\n                    setActiveTool(tool.id);\r\n                  } else if (tool.id === 5) {\r\n                    setActiveBtn(\"files\");\r\n                    setActiveTool(tool.id);\r\n                  } else if (tool.id === 6) {\r\n                    setActiveBtn(\"liveStream\");\r\n                    setActiveTool(tool.id);\r\n                  } else {\r\n                    setActiveTool(tool.id);\r\n                  }\r\n                }}\r\n              >\r\n                <Row gutter={[0, 12]} justify=\"center\">\r\n                  <Col xs={24}>\r\n                    <Row justify=\"center\">\r\n                      <tool.icon\r\n                        style={{ width: \"24px\", height: \"24px\" }}\r\n                        color={activeTool === tool.id ? \"#960bcd\" : \"#000\"}\r\n                      />\r\n                    </Row>\r\n                  </Col>\r\n                  <Col xs={24}>\r\n                    <Row justify=\"center\" style={{ textAlign: \"center\" }}>\r\n                      <Typography.Text>{tool.defaultLabel}</Typography.Text>\r\n                    </Row>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n            </Spin>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </section>\r\n  );\r\n}\r\n","import { useEffect, useState, useContext } from \"react\";\r\nimport { LoadingOutlined } from \"@ant-design/icons\";\r\nimport { Button, Col, Row, Typography } from \"antd\";\r\n\r\nimport { ArrowRightSVG } from \"assets/jsx-svg\";\r\nimport MetaverseService from \"services/metaverse.service\";\r\nimport { axiosCatch } from \"utils/axiosUtils\";\r\nimport DragContext from \"../DragContext\";\r\nimport \"./styles.css\";\r\n\r\nexport default function MetaExperience({\r\n  setActiveBtn,\r\n  SystemMessage,\r\n  sharingDimId,\r\n  sharingScreen,\r\n  unPublishScreen,\r\n  sharingFile,\r\n  sharingWhiteboard,\r\n}) {\r\n  const [myDims, setMyDims] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const { setDragData } = useContext(DragContext);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      setLoading(true);\r\n      try {\r\n        const {\r\n          data: {\r\n            data: { rows },\r\n          },\r\n        } = await MetaverseService.getMyDimensions();\r\n\r\n        setMyDims(rows);\r\n      } catch (error) {\r\n        axiosCatch(error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"meta-experience\">\r\n      <div className=\"back-word\">\r\n        <Row\r\n          wrap={false}\r\n          align=\"middle\"\r\n          gutter={[8, 0]}\r\n          style={{ width: \"fit-content\" }}\r\n          className=\"clickable\"\r\n          onClick={() => setActiveBtn(\"tools\")}\r\n        >\r\n          <Col>\r\n            <Row align=\"middle\">\r\n              <ArrowRightSVG color=\"#8E8E93\" style={{ rotate: \"180deg\" }} />\r\n            </Row>\r\n          </Col>\r\n          <Col>\r\n            <Typography.Text className=\"gc\">Back</Typography.Text>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n\r\n      {loading ? (\r\n        <Row justify=\"center\">\r\n          <LoadingOutlined />\r\n        </Row>\r\n      ) : (\r\n        <Row gutter={[0, 10]} style={{ marginTop: \"2rem\" }}>\r\n          <Col xs={24}>\r\n            <Typography.Paragraph\r\n              ellipsis={{ rows: 3 }}\r\n              className=\"fz-18 fw-600\"\r\n            >\r\n              Drag verse & drop it to your window to share with others\r\n            </Typography.Paragraph>\r\n          </Col>\r\n\r\n          <Row\r\n            style={{ maxHeight: \"76vh\", overflowY: \"auto\", width: \"100%\" }}\r\n            gutter={[0, 12]}\r\n          >\r\n            {myDims.map((dim) => (\r\n              <Col\r\n                draggable\r\n                xs={24}\r\n                key={dim.id}\r\n                onDragStart={() =>\r\n                  setDragData({\r\n                    dragging: true,\r\n                    dropText: \"Drop to share dimension\",\r\n                    dimId: dim.id,\r\n                    file: null,\r\n                  })\r\n                }\r\n                onDragEnd={() =>\r\n                  setDragData({\r\n                    dragging: false,\r\n                    dropText: \"\",\r\n                    dimId: null,\r\n                    file: null,\r\n                  })\r\n                }\r\n              >\r\n                <div\r\n                  style={{\r\n                    border: +sharingDimId === +dim.id && \"2px solid #0000\",\r\n                    background:\r\n                      +sharingDimId === +dim.id &&\r\n                      `linear-gradient(#ffffff, #ffffff) padding-box,\r\n                      linear-gradient(270deg, #960bcd 0%, #44c9ff 100%)`,\r\n                  }}\r\n                  className=\"dim-card\"\r\n                  onClick={() => {\r\n                    if (sharingScreen) {\r\n                      unPublishScreen();\r\n                    } else if (sharingWhiteboard) {\r\n                      SystemMessage.stopWhiteboard();\r\n                    } else if (sharingFile) {\r\n                      SystemMessage.stopFilePreview();\r\n                    }\r\n\r\n                    SystemMessage.shareDim(dim.id);\r\n                  }}\r\n                >\r\n                  <div\r\n                    style={{ background: `url(${dim.image})` }}\r\n                    className=\"dim-card-img\"\r\n                  />\r\n\r\n                  <div className=\"dim-card-text\">\r\n                    <Typography className=\"wc\">\r\n                      {dim.customerDimensionTranslations[0].name}\r\n                    </Typography>\r\n                  </div>\r\n\r\n                  {+sharingDimId === +dim.id && (\r\n                    <div className=\"dim-card-btn\">\r\n                      <Button\r\n                        type=\"primary\"\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          e.stopPropagation();\r\n                          SystemMessage.stopDim();\r\n                        }}\r\n                      >\r\n                        Exit\r\n                      </Button>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n        </Row>\r\n      )}\r\n    </section>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { Col, Image, Row, Typography } from \"antd\";\r\n\r\nimport EducationImg from \"assets/images/Education.png\";\r\nimport BusinessImg from \"assets/images/Business.png\";\r\nimport FunImg from \"assets/images/Fun.png\";\r\nimport { LeftArrowSVG } from \"assets/jsx-svg\";\r\nimport defaultDim from \"assets/images/house.png\";\r\n\r\nimport \"./styles.css\";\r\nimport { axiosCatch } from \"utils/axiosUtils\";\r\nimport MetaverseService from \"services/metaverse.service\";\r\n\r\nconst categoriesImages = {\r\n  Education: EducationImg,\r\n  Business: BusinessImg,\r\n  Fun: FunImg,\r\n};\r\n\r\nexport default function Holomeet() {\r\n  const [selectedCategory, setSelectedCategory] = useState();\r\n  const [category, setCategory] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const { meetingId } = useParams();\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      setLoading(true);\r\n      try {\r\n        const res = await MetaverseService.getHoloCategory();\r\n        setCategory(res.data.data.rows);\r\n      } catch (err) {\r\n        axiosCatch(err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    })();\r\n  }, []);\r\n  return (\r\n    <>\r\n      {!selectedCategory && (\r\n        <Typography.Text className=\"fz-18 fw-500 \">Holomeet</Typography.Text>\r\n      )}\r\n      <div className=\"holo-meet\">\r\n        <div\r\n          className={selectedCategory ? \"\" : \"center-items\"}\r\n          style={{\r\n            height: \"90%\",\r\n            marginTop: selectedCategory ? \"2rem\" : \"1rem\",\r\n          }}\r\n        >\r\n          <Row gutter={[0, 32]}>\r\n            {!selectedCategory && (\r\n              <Col xs={24}>\r\n                <Row justify=\"center\">\r\n                  <Typography.Text className=\"fz-16 fw-500 \">\r\n                    Select Category\r\n                  </Typography.Text>\r\n                </Row>\r\n              </Col>\r\n            )}\r\n            <Col xs={24}>\r\n              <Row gutter={[16, 16]}>\r\n                {!loading &&\r\n                  category &&\r\n                  category.map((category) => (\r\n                    <Col\r\n                      xs={selectedCategory ? 8 : 24}\r\n                      xl={selectedCategory && 12}\r\n                      xxl={selectedCategory ? 8 : 24}\r\n                      key={category.id}\r\n                    >\r\n                      <div\r\n                        className=\"holo-meet-category\"\r\n                        style={{\r\n                          outline:\r\n                            selectedCategory === category.id &&\r\n                            \"1px solid #AEAEB2\",\r\n                          padding: selectedCategory && \"1rem\",\r\n                        }}\r\n                        onClick={() => {\r\n                          setSelectedCategory(category.id);\r\n                        }}\r\n                      >\r\n                        <Row gutter={[0, 12]}>\r\n                          <Col xs={24}>\r\n                            <Row justify=\"center\">\r\n                              <Image\r\n                                preview={false}\r\n                                alt={category.name}\r\n                                src={categoriesImages[category.name]}\r\n                                height={40}\r\n                              />\r\n                            </Row>\r\n                          </Col>\r\n                          <Col xs={24}>\r\n                            <Row justify=\"center\">\r\n                              <Typography.Text\r\n                                className=\"fz-16\"\r\n                                ellipsis\r\n                                title={category.name}\r\n                              >\r\n                                {category.name}\r\n                              </Typography.Text>\r\n                            </Row>\r\n                          </Col>\r\n                        </Row>\r\n                      </div>\r\n                    </Col>\r\n                  ))}\r\n              </Row>\r\n\r\n              {selectedCategory && (\r\n                <HolomeetRooms\r\n                  category={selectedCategory}\r\n                  meetingId={meetingId}\r\n                />\r\n              )}\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n\r\n        {selectedCategory && (\r\n          <div\r\n            className=\"back-btn clickable\"\r\n            onClick={() => setSelectedCategory(null)}\r\n          >\r\n            <Row wrap={false} gutter={[6, 0]} align=\"middle\">\r\n              <Col>\r\n                <Row align=\"middle\">\r\n                  <LeftArrowSVG\r\n                    color=\"#8E8E93\"\r\n                    style={{ width: \"14px\", height: \"14px\" }}\r\n                  />\r\n                </Row>\r\n              </Col>\r\n              <Col>\r\n                <Typography.Text style={{ color: \"#8E8E93\" }}>\r\n                  Back\r\n                </Typography.Text>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst HolomeetRooms = ({ category, meetingId }) => {\r\n  const [metaverse, setMetaverse] = useState();\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const res = await MetaverseService.getHoloDimensionByCategory(category);\r\n        setMetaverse(res.data.data.rows);\r\n      } catch (err) {\r\n        axiosCatch(err);\r\n      }\r\n    })();\r\n  }, [category]);\r\n  return (\r\n    <div className=\"holo-meet-room-main\">\r\n      <Row gutter={[16, 16]}>\r\n        {metaverse &&\r\n          metaverse.map((room, index) => (\r\n            <Col xs={24} key={index}>\r\n              <Link to={`/metaverse/${meetingId}?holomeet=true`}>\r\n                <div className=\"holo-meet-room\">\r\n                  <Row gutter={[0, 8]}>\r\n                    <Col xs={24}>\r\n                      <div\r\n                        className=\"holo-meet-img\"\r\n                        style={{\r\n                          background: room.image\r\n                            ? `url(${room.image})`\r\n                            : `url(${defaultDim})`,\r\n                        }}\r\n                      />\r\n                    </Col>\r\n                    <Col xs={24}>\r\n                      <Row gutter={[0, 4]}>\r\n                        {room.customerDimensionTranslations.find(\r\n                          (lang) => lang.languageCode === \"en\",\r\n                        ).name !== \"undefined\" ? (\r\n                          <Col xs={24}>\r\n                            <Typography.Text className=\"fz-16 fw-500\">\r\n                              {\r\n                                room.customerDimensionTranslations.find(\r\n                                  (lang) => lang.languageCode === \"en\",\r\n                                ).name\r\n                              }\r\n                            </Typography.Text>\r\n                          </Col>\r\n                        ) : null}\r\n                        {room.customerDimensionTranslations.find(\r\n                          (lang) => lang.languageCode === \"en\",\r\n                        ).description !== \"undefined\" ? (\r\n                          <Col xs={24}>\r\n                            <Typography.Paragraph\r\n                              className=\"fz-12\"\r\n                              ellipsis={{ rows: 2 }}\r\n                            >\r\n                              {\r\n                                room.customerDimensionTranslations.find(\r\n                                  (lang) => lang.languageCode === \"en\",\r\n                                ).description\r\n                              }\r\n                            </Typography.Paragraph>\r\n                          </Col>\r\n                        ) : null}\r\n                      </Row>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              </Link>\r\n            </Col>\r\n          ))}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n","import { useMemo, useCallback, useState, useContext } from \"react\";\r\nimport useDrivePicker from \"react-google-drive-picker/dist\";\r\nimport {\r\n  Col,\r\n  Image,\r\n  Row,\r\n  Spin,\r\n  Tooltip,\r\n  Typography,\r\n  Upload,\r\n  message,\r\n} from \"antd\";\r\n\r\nimport CommonService from \"services/common.service\";\r\nimport { ArrowRightSVG, DeleteSVG } from \"assets/jsx-svg\";\r\nimport googleDriveImg from \"assets/images/GoogleDrive.png\";\r\nimport png from \"assets/images/png.png\";\r\nimport pdf from \"assets/images/pdf.png\";\r\nimport doc from \"assets/images/doc.png\";\r\nimport xls from \"assets/images/xls.png\";\r\nimport zip from \"assets/images/zip.png\";\r\nimport jpg from \"assets/images/jpg.png\";\r\nimport fileImg from \"assets/images/file.png\";\r\n\r\nimport DragContext from \"../DragContext\";\r\nimport \"./styles.css\";\r\n\r\nexport default function FilesSharing({\r\n  setActiveBtn,\r\n  sharedFiles,\r\n  setSharedFiles,\r\n}) {\r\n  const [uploading, setUploading] = useState(0);\r\n  const [openPicker] = useDrivePicker();\r\n  const { setDragData } = useContext(DragContext);\r\n\r\n  const draggerProps = useMemo(\r\n    () => ({\r\n      name: \"file\",\r\n      multiple: true,\r\n      action: false,\r\n      beforeUpload: () => false,\r\n      onChange: async (info) => {\r\n        setUploading((prev) => prev + 1);\r\n\r\n        try {\r\n          const {\r\n            uploadedFiles: { file: fileUrl },\r\n          } = await CommonService.uploadFile(info.file);\r\n\r\n          const newFile = {\r\n            id: info.file.uid,\r\n            name: info.file.name,\r\n            type: info.file.type,\r\n            url: fileUrl,\r\n            isGoogleDrive: false,\r\n            embedUrl: null,\r\n          };\r\n\r\n          setSharedFiles((prev) => [...prev, newFile]);\r\n\r\n          message.success({\r\n            content: `Uploaded file: ${info.file.name}`,\r\n          });\r\n        } catch (error) {\r\n          console.log(\"Error uploading file: \", error);\r\n          message.error({\r\n            content: `Failed to upload file: ${info.file.name}`,\r\n          });\r\n        } finally {\r\n          setUploading((prev) => prev - 1);\r\n        }\r\n      },\r\n      showUploadList: false,\r\n    }),\r\n    [setSharedFiles],\r\n  );\r\n\r\n  const onFileDelete = useCallback(\r\n    (id) => {\r\n      setSharedFiles((prev) => prev.filter((file) => file.id !== id));\r\n    },\r\n    [setSharedFiles],\r\n  );\r\n\r\n  const handleOpenPicker = useCallback(() => {\r\n    openPicker({\r\n      clientId: process.env.REACT_APP_GOOGLE_CLIENT_ID,\r\n      developerKey: process.env.REACT_APP_GOOGLE_PICKER_API_KEY,\r\n      viewId: \"DOCS\",\r\n      showUploadView: true,\r\n      showUploadFolders: false,\r\n      supportDrives: true,\r\n      multiselect: true,\r\n      callbackFunction: (data) => {\r\n        // possible actions: loaded, picked, cancel\r\n        if (data.action === \"picked\" && data.docs?.length) {\r\n          const newFiles = data.docs.map((file) => ({\r\n            id: file.id,\r\n            name: file.name,\r\n            type: file.mimeType,\r\n            url: file.url,\r\n            isGoogleDrive: true,\r\n            embedUrl: file.embedUrl,\r\n          }));\r\n\r\n          setSharedFiles((prev) => [...prev, ...newFiles]);\r\n        }\r\n      },\r\n    });\r\n  }, [openPicker, setSharedFiles]);\r\n\r\n  return (\r\n    <section className=\"files-sharing\">\r\n      <Row\r\n        wrap={false}\r\n        align=\"middle\"\r\n        gutter={[8, 0]}\r\n        style={{ width: \"fit-content\" }}\r\n        className=\"clickable\"\r\n        onClick={() => setActiveBtn(\"tools\")}\r\n      >\r\n        <Col>\r\n          <Row align=\"middle\">\r\n            <ArrowRightSVG color=\"#8E8E93\" style={{ rotate: \"180deg\" }} />\r\n          </Row>\r\n        </Col>\r\n        <Col>\r\n          <Typography.Text className=\"gc\">Back</Typography.Text>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row style={{ marginTop: \"24px\" }} gutter={[0, 24]}>\r\n        <Col xs={24}>\r\n          <Typography.Text className=\"fz-16 fw-500\">\r\n            Upload & Share Files with Participants\r\n          </Typography.Text>\r\n        </Col>\r\n        <Col xs={24}>\r\n          <Upload.Dragger\r\n            {...draggerProps}\r\n            customRequest={(e) => e.onSuccess(\"ok\")}\r\n            style={{\r\n              background: \"#fff\",\r\n              borderRadius: \"14px\",\r\n              minHeight: \"140px\",\r\n            }}\r\n            fileList={[]}\r\n            disabled={!!uploading}\r\n          >\r\n            <Spin spinning={!!uploading}>\r\n              <Typography.Text className=\"fz-16 fw-500\">\r\n                Upload Files\r\n              </Typography.Text>\r\n              <br />\r\n              <Typography.Text className=\"gc\">or drag and drop</Typography.Text>\r\n            </Spin>\r\n          </Upload.Dragger>\r\n        </Col>\r\n\r\n        <Col style={{ cursor: \"pointer\" }} xs={24} onClick={handleOpenPicker}>\r\n          <div className=\"center-items from-google-drive\">\r\n            <Row gutter={[0, 8]}>\r\n              <Col xs={24}>\r\n                <Row justify=\"center\">\r\n                  <Image\r\n                    src={googleDriveImg}\r\n                    alt=\"Google Drive\"\r\n                    height={30}\r\n                    width={30}\r\n                    preview={false}\r\n                  />\r\n                </Row>\r\n              </Col>\r\n              <Col xs={24}>\r\n                <Row justify=\"center\">\r\n                  <Typography.Text className=\"fz-16 fw-500\">\r\n                    From Google Drive\r\n                  </Typography.Text>\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n\r\n      {sharedFiles?.length ? (\r\n        <div style={{ marginTop: \"32px\" }}>\r\n          <Typography.Text className=\"fz-16 fw-500\">\r\n            Uploaded Files:\r\n          </Typography.Text>\r\n\r\n          <Row\r\n            gutter={[0, 8]}\r\n            className=\"mt-1\"\r\n            style={{ maxHeight: \"390px\", overflowY: \"auto\" }}\r\n          >\r\n            {sharedFiles.map((file) => (\r\n              <Col\r\n                key={file.id}\r\n                xs={24}\r\n                draggable\r\n                onDragStart={() =>\r\n                  setDragData({\r\n                    dragging: true,\r\n                    dropText: \"Drop to share file\",\r\n                    dimId: null,\r\n                    file: file,\r\n                  })\r\n                }\r\n                onDragEnd={() =>\r\n                  setDragData({\r\n                    dragging: false,\r\n                    dropText: \"\",\r\n                    dimId: null,\r\n                    file: null,\r\n                  })\r\n                }\r\n              >\r\n                <Row\r\n                  justify=\"space-between\"\r\n                  align=\"middle\"\r\n                  wrap={false}\r\n                  className=\"file-uploaded\"\r\n                >\r\n                  <Col>\r\n                    <Row align=\"middle\" wrap={false} gutter={[16, 0]}>\r\n                      <Col>\r\n                        <Image\r\n                          width={32}\r\n                          height={32}\r\n                          alt={file.name}\r\n                          src={filesExtentionsImg(file.type)}\r\n                          preview={false}\r\n                        />\r\n                      </Col>\r\n                      <Col style={{ maxWidth: \"100px\" }}>\r\n                        <Tooltip title={file.name}>\r\n                          <Typography.Text ellipsis>\r\n                            {file.name}\r\n                          </Typography.Text>\r\n                        </Tooltip>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col\r\n                    className=\"clickable\"\r\n                    onClick={() => onFileDelete(file.id)}\r\n                  >\r\n                    <Row align=\"middle\" wrap={false} gutter={[8, 0]}>\r\n                      <Col>\r\n                        <Typography.Text>Delete</Typography.Text>\r\n                      </Col>\r\n                      <Col>\r\n                        <Row align=\"middle\">\r\n                          <DeleteSVG color=\"#000\" />\r\n                        </Row>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n        </div>\r\n      ) : null}\r\n    </section>\r\n  );\r\n}\r\n\r\nconst filesExtentionsImg = (fileType) => {\r\n  const extension = fileType.split(\"/\")[1];\r\n\r\n  let imageSrc;\r\n  switch (extension) {\r\n    case \"png\":\r\n      imageSrc = png;\r\n      break;\r\n    case \"pdf\":\r\n      imageSrc = pdf;\r\n      break;\r\n    case \"doc\":\r\n    case \"docx\":\r\n      imageSrc = doc;\r\n      break;\r\n    case \"xls\":\r\n    case \"xlsx\":\r\n      imageSrc = xls;\r\n      break;\r\n    case \"zip\":\r\n      imageSrc = zip;\r\n      break;\r\n    case \"jpg\":\r\n    case \"jpeg\":\r\n      imageSrc = jpg;\r\n      break;\r\n    default:\r\n      imageSrc = fileImg;\r\n  }\r\n\r\n  return imageSrc;\r\n};\r\n","import { Col, Image, Row, Tooltip, Typography } from \"antd\";\r\n\r\nimport { ArrowRightSVG } from \"assets/jsx-svg\";\r\nimport png from \"assets/images/png.png\";\r\nimport pdf from \"assets/images/pdf.png\";\r\nimport doc from \"assets/images/doc.png\";\r\nimport xls from \"assets/images/xls.png\";\r\nimport zip from \"assets/images/zip.png\";\r\nimport jpg from \"assets/images/jpg.png\";\r\nimport fileImg from \"assets/images/file.png\";\r\n\r\nimport \"./styles.css\";\r\n\r\nexport default function SharedFiles({\r\n  setActiveBtn,\r\n  sharedFiles,\r\n  permissions,\r\n}) {\r\n  return (\r\n    <section className=\"shared-files\">\r\n      <Row\r\n        wrap={false}\r\n        align=\"middle\"\r\n        gutter={[8, 0]}\r\n        style={{ width: \"fit-content\" }}\r\n        className=\"clickable\"\r\n        onClick={() => setActiveBtn(\"tools\")}\r\n      >\r\n        <Col>\r\n          <Row align=\"middle\">\r\n            <ArrowRightSVG color=\"#8E8E93\" style={{ rotate: \"180deg\" }} />\r\n          </Row>\r\n        </Col>\r\n        <Col>\r\n          <Typography.Text className=\"gc\">Back</Typography.Text>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row style={{ marginTop: \"24px\" }} gutter={[0, 24]}>\r\n        <Col xs={24}>\r\n          <Typography.Text className=\"fz-16 fw-500\">\r\n            Files shared by host:\r\n          </Typography.Text>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row\r\n        gutter={[0, 8]}\r\n        className=\"mt-1\"\r\n        style={{ maxHeight: \"750px\", overflowY: \"auto\" }}\r\n      >\r\n        {sharedFiles.map((file) => (\r\n          <Col key={file.id} xs={24} style={{ userSelect: \"none\" }}>\r\n            <Row\r\n              justify=\"space-between\"\r\n              align=\"middle\"\r\n              wrap={false}\r\n              className=\"file-uploaded\"\r\n            >\r\n              <Col>\r\n                <Row align=\"middle\" wrap={false} gutter={[16, 0]}>\r\n                  <Col>\r\n                    <Image\r\n                      width={32}\r\n                      height={32}\r\n                      alt={file.name}\r\n                      src={filesExtentionsImg(file.type)}\r\n                      preview={false}\r\n                    />\r\n                  </Col>\r\n                  <Col style={{ maxWidth: \"100px\" }}>\r\n                    <Tooltip title={file.name}>\r\n                      <Typography.Text ellipsis>{file.name}</Typography.Text>\r\n                    </Tooltip>\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n              {permissions.canDownload && (\r\n                <Col\r\n                  className=\"clickable\"\r\n                  onClick={() => window.open(file.url)}\r\n                >\r\n                  <Row align=\"middle\" wrap={false} gutter={[8, 0]}>\r\n                    <Col>\r\n                      <Typography.Text>Download</Typography.Text>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n              )}\r\n            </Row>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </section>\r\n  );\r\n}\r\n\r\nconst filesExtentionsImg = (fileType) => {\r\n  const extension = fileType.split(\"/\")[1];\r\n\r\n  let imageSrc;\r\n  switch (extension) {\r\n    case \"png\":\r\n      imageSrc = png;\r\n      break;\r\n    case \"pdf\":\r\n      imageSrc = pdf;\r\n      break;\r\n    case \"doc\":\r\n    case \"docx\":\r\n      imageSrc = doc;\r\n      break;\r\n    case \"xls\":\r\n    case \"xlsx\":\r\n      imageSrc = xls;\r\n      break;\r\n    case \"zip\":\r\n      imageSrc = zip;\r\n      break;\r\n    case \"jpg\":\r\n    case \"jpeg\":\r\n      imageSrc = jpg;\r\n      break;\r\n    default:\r\n      imageSrc = fileImg;\r\n  }\r\n\r\n  return imageSrc;\r\n};\r\n","import { Button, Col, Form, Input, Row, Typography, message } from \"antd\";\r\nimport { LeftArrowSVG } from \"assets/jsx-svg\";\r\n\r\nexport default function YoutubeLink({ setActiveBtn, fastboard }) {\r\n  const [form] = Form.useForm();\r\n\r\n  const onFinish = async (values) => {\r\n    const pattern = new RegExp(\r\n      /^(?:https?:\\/\\/)?(?:m\\.|www\\.)?(?:youtu\\.be\\/|youtube\\.com\\/(?:embed\\/|v\\/|watch\\?v=|watch\\?.+&v=))((\\w|-){11})(?:\\S+)?$/,\r\n    );\r\n\r\n    if (pattern.test(values.link)) {\r\n      const regex = /[?&]v=([^&#]*)/;\r\n      const videoId = values.link.match(regex);\r\n      await fastboard?.manager.addApp({\r\n        kind: \"Plyr\",\r\n        options: { title: \"YouTube\" },\r\n        attributes: {\r\n          src: `https://www.youtube.com/embed/${videoId[1]}`,\r\n          provider: \"youtube\",\r\n        },\r\n      });\r\n      form.resetFields();\r\n    } else {\r\n      message.error(\"test\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      onFinish={onFinish}\r\n      requiredMark={false}\r\n      form={form}\r\n      layout=\"vertical\"\r\n      name=\"youtune\"\r\n    >\r\n      <div className=\"clickable\" onClick={() => setActiveBtn(\"participant\")}>\r\n        <Row wrap={false} gutter={[6, 0]} align=\"middle\">\r\n          <Col>\r\n            <Row align=\"middle\">\r\n              <LeftArrowSVG\r\n                color=\"#8E8E93\"\r\n                style={{ width: \"14px\", height: \"14px\" }}\r\n              />\r\n            </Row>\r\n          </Col>\r\n          <Col>\r\n            <Typography.Text style={{ color: \"#8E8E93\" }}>Back</Typography.Text>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n\r\n      <Form.Item\r\n        className=\"mt-1\"\r\n        label=\"Add Video Link\"\r\n        name=\"link\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"Please Add Link\",\r\n          },\r\n        ]}\r\n      >\r\n        <Input placeholder=\"Enter Here\" />\r\n      </Form.Item>\r\n\r\n      <Row justify=\"end\" className=\"mt-1\">\r\n        <Button htmlType=\"submit\" type=\"primary\">\r\n          Play\r\n        </Button>\r\n      </Row>\r\n    </Form>\r\n  );\r\n}\r\n","import { Button, Col, Form, Input, Row, Typography, notification } from \"antd\";\r\n\r\nimport {\r\n  CounterFileSVG,\r\n  FullNameSVG,\r\n  SignatureSVG,\r\n  PluseSVG,\r\n} from \"assets/jsx-svg\";\r\n\r\nimport \"./styles.css\";\r\n\r\nexport default function Counter({\r\n  setActiveBtn,\r\n  SystemMessage,\r\n  counterForm,\r\n  counterActiveBtn,\r\n  setCounterActiveBtn,\r\n  setAskedForCounter,\r\n}) {\r\n  const onFinish = (values) => {\r\n    if (counterActiveBtn === 1) {\r\n      SystemMessage.askAllUserForCounter({\r\n        formData: {\r\n          type: counterActiveBtn,\r\n          message: `full name`,\r\n          fileName: \"\",\r\n          customField: \"\",\r\n        },\r\n      });\r\n      notification.info({\r\n        message:\r\n          \"Notification has been send to participants to submit full name.\",\r\n      });\r\n    }\r\n    if (counterActiveBtn === 2) {\r\n      SystemMessage.askAllUserForCounter({\r\n        formData: {\r\n          type: counterActiveBtn,\r\n          message: `signature`,\r\n          fileName: \"\",\r\n          customField: \"\",\r\n        },\r\n      });\r\n      notification.info({\r\n        message:\r\n          \"Notification has been send to participants to submit signature.\",\r\n      });\r\n    }\r\n\r\n    if (counterActiveBtn === 3) {\r\n      SystemMessage.askAllUserForCounter({\r\n        formData: {\r\n          type: counterActiveBtn,\r\n          message: `${values.fileName} file`,\r\n          fileName: values.fileName,\r\n          customField: values.customField,\r\n        },\r\n      });\r\n      notification.info({\r\n        message:\r\n          \"Notification has been send to participants to submit full name.\",\r\n      });\r\n    }\r\n\r\n    if (counterActiveBtn === 4) {\r\n      SystemMessage.askAllUserForCounter({\r\n        formData: {\r\n          type: counterActiveBtn,\r\n          message: `${values.customField} field`,\r\n          fileName: \"\",\r\n          customField: values.customField,\r\n        },\r\n      });\r\n      notification.info({\r\n        message: `Notification has been send to participants to submit ${values.customField} field.`,\r\n      });\r\n    }\r\n    setAskedForCounter(true);\r\n    setActiveBtn(\"counterUserSharedData\");\r\n    counterForm.resetFields();\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      name=\"counter-form\"\r\n      onFinish={onFinish}\r\n      layout=\"vertical\"\r\n      requiredMark={false}\r\n      form={counterForm}\r\n      className=\"w-100 h-100\"\r\n    >\r\n      <Row\r\n        gutter={[0, 24]}\r\n        className=\"counter-section h-100\"\r\n        justify=\"space-between\"\r\n      >\r\n        <Col flex={1}>\r\n          <Row>\r\n            <Typography.Text className=\"fz-18 fw-500\">Counter</Typography.Text>\r\n          </Row>\r\n\r\n          <Row style={{ margin: \"24px 0 24px\" }}>\r\n            <Typography.Text className=\"fz-16 fw-500\">\r\n              Ask Participants For Data or Files\r\n            </Typography.Text>\r\n          </Row>\r\n          <Row gutter={[14, 16]}>\r\n            {counterButtons.map((btn) => (\r\n              <Col key={btn.id} xs={24} md={12}>\r\n                <button\r\n                  className={`counter-btn ${\r\n                    counterActiveBtn === btn.id && \"counter-btn-active\"\r\n                  }`}\r\n                  type=\"button\"\r\n                  onClick={() => setCounterActiveBtn(btn.id)}\r\n                >\r\n                  <Row gutter={[12, 0]} align=\"middle\" wrap={false}>\r\n                    <Col>\r\n                      <Row align=\"middle\">\r\n                        <btn.icon />\r\n                      </Row>\r\n                    </Col>\r\n                    <Col>\r\n                      <Typography.Text ellipsis>{btn.label}</Typography.Text>\r\n                    </Col>\r\n                  </Row>\r\n                </button>\r\n              </Col>\r\n            ))}\r\n\r\n            {counterActiveBtn === 3 && (\r\n              <Col xs={24}>\r\n                <Form.Item\r\n                  rules={[\r\n                    {\r\n                      required: counterActiveBtn === 3,\r\n                      message: \"Please Enter The File Name\",\r\n                    },\r\n                  ]}\r\n                  name=\"fileName\"\r\n                  label=\"File Name\"\r\n                >\r\n                  <Input\r\n                    placeholder=\"Enter Here\"\r\n                    style={{ background: \"#fff\" }}\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n            )}\r\n\r\n            {counterActiveBtn === 4 && (\r\n              <Col xs={24}>\r\n                <Form.Item\r\n                  rules={[\r\n                    {\r\n                      required: counterActiveBtn === 4,\r\n                      message: \"Please Enter The Field Title\",\r\n                    },\r\n                  ]}\r\n                  name=\"customField\"\r\n                  label=\"Field Title\"\r\n                >\r\n                  <Input\r\n                    placeholder=\"Enter Here\"\r\n                    style={{ background: \"#fff\" }}\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n            )}\r\n          </Row>\r\n        </Col>\r\n\r\n        <Col>\r\n          <Row gutter={[14, 16]}>\r\n            <Col xs={24} md={12}>\r\n              <button\r\n                onClick={() => setActiveBtn(\"counterParticipants\")}\r\n                className=\"gradiant-border-btn w-100 counter-gradiant-btn\"\r\n                data=\"Select participants\"\r\n                style={{\r\n                  height: \"100%\",\r\n                  width: \"100%\",\r\n                  borderRadius: \"12px\",\r\n                }}\r\n              ></button>\r\n            </Col>\r\n            <Col xs={24} md={12}>\r\n              <Button\r\n                style={{\r\n                  borderRadius: \"12px\",\r\n                }}\r\n                type=\"primary\"\r\n                className=\"w-100\"\r\n                htmlType=\"submit\"\r\n              >\r\n                Send to All\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Form>\r\n  );\r\n}\r\n\r\nconst counterButtons = [\r\n  { id: 1, label: \"Full Name\", icon: FullNameSVG },\r\n  { id: 2, label: \"Signature\", icon: SignatureSVG },\r\n  { id: 3, label: \"File\", icon: CounterFileSVG },\r\n  { id: 4, label: \"Custom Field\", icon: PluseSVG },\r\n];\r\n","import { useMemo, useState } from \"react\";\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  Checkbox,\r\n  Col,\r\n  ConfigProvider,\r\n  Form,\r\n  Input,\r\n  Row,\r\n  Typography,\r\n  notification,\r\n} from \"antd\";\r\n\r\nimport { ArrowRightSVG, SearchSVG } from \"assets/jsx-svg\";\r\n\r\nexport default function CounterParticipants({\r\n  setActiveBtn,\r\n  participants,\r\n  counterForm,\r\n  SystemMessage,\r\n  counterActiveBtn,\r\n  setAskedForCounter,\r\n}) {\r\n  const [participantsForm] = Form.useForm();\r\n  const [selectedUsers, setSelectedUsers] = useState([]);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [showParticipants, setShowParticipants] = useState(\r\n    participants.filter((participant) => !participant.isHost),\r\n  );\r\n\r\n  useMemo(() => {\r\n    if (searchValue) {\r\n      setShowParticipants(\r\n        participants?.filter(\r\n          (participant) =>\r\n            !participant.isHost &&\r\n            participant.name.toLowerCase().includes(searchValue.toLowerCase()),\r\n        ),\r\n      );\r\n    } else {\r\n      setShowParticipants(\r\n        participants.filter((participant) => !participant.isHost),\r\n      );\r\n    }\r\n  }, [participants, searchValue]);\r\n\r\n  const onSearch = (e) => {\r\n    let value = e.target.value;\r\n    setSearchValue(value.trim());\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    console.warn(counterForm.getFieldValue(\"fileName\"));\r\n    const fileName = counterForm.getFieldValue(\"fileName\");\r\n    const customField = counterForm.getFieldValue(\"customField\");\r\n\r\n    if (values.users.length) {\r\n      if (counterActiveBtn === 1 || counterActiveBtn === 2) {\r\n        SystemMessage.askSelectedUserForCounter({\r\n          users: values.users,\r\n          formData: {\r\n            type: counterActiveBtn,\r\n            message: `${counterActiveBtn === 1 ? \"full name\" : \"signature\"}`,\r\n          },\r\n        });\r\n        notification.success({ message: \"Invitation send Succesfully ✔\" });\r\n        participantsForm.setFieldValue(\"users\", undefined);\r\n      }\r\n\r\n      if (counterActiveBtn === 3 && fileName) {\r\n        SystemMessage.askSelectedUserForCounter({\r\n          users: values.users,\r\n          formData: {\r\n            type: counterActiveBtn,\r\n            message: `${fileName} file`,\r\n            fileName: fileName,\r\n          },\r\n        });\r\n        notification.success({ message: \"Invitation send Succesfully ✔\" });\r\n        participantsForm.setFieldValue(\"users\", undefined);\r\n        setActiveBtn(\"counterUserSharedData\");\r\n      } else if (counterActiveBtn === 3 && !fileName) {\r\n        notification.error({ message: \"You should fill the file name\" });\r\n        setActiveBtn(\"counter\");\r\n      }\r\n\r\n      if (counterActiveBtn === 4 && customField) {\r\n        SystemMessage.askSelectedUserForCounter({\r\n          users: values.users,\r\n          formData: {\r\n            type: counterActiveBtn,\r\n            message: `${customField} file`,\r\n            customField: customField,\r\n          },\r\n        });\r\n        notification.success({ message: \"Invitation send Succesfully ✔\" });\r\n        participantsForm.setFieldValue(\"users\", undefined);\r\n        setActiveBtn(\"counterUserSharedData\");\r\n      } else if (counterActiveBtn === 4 && !customField) {\r\n        notification.error({ message: \"You should fill the file name\" });\r\n        setActiveBtn(\"counter\");\r\n      }\r\n\r\n      setAskedForCounter(true);\r\n      setActiveBtn(\"counterUserSharedData\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className=\"h-100\">\r\n      <Row\r\n        wrap={false}\r\n        align=\"middle\"\r\n        gutter={[8, 0]}\r\n        style={{ width: \"fit-content\" }}\r\n        className=\"clickable\"\r\n        onClick={() => setActiveBtn(\"counter\")}\r\n      >\r\n        <Col>\r\n          <Row align=\"middle\">\r\n            <ArrowRightSVG color=\"#8E8E93\" style={{ rotate: \"180deg\" }} />\r\n          </Row>\r\n        </Col>\r\n        <Col>\r\n          <Typography.Text className=\"gc\">Back</Typography.Text>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Form form={participantsForm} onFinish={onFinish} className=\"h-100\">\r\n        <ConfigProvider\r\n          theme={{\r\n            components: {\r\n              Checkbox: {\r\n                borderRadiusSM: \"4px\",\r\n                colorBgContainer: \"transparent\",\r\n                colorPrimary: \"#5c9937\",\r\n                colorWhite: \"#fff\",\r\n                colorPrimaryHover: \"#5c9937\",\r\n                colorPrimaryBorder: \"#eee\",\r\n              },\r\n            },\r\n          }}\r\n        >\r\n          <Row\r\n            gutter={[0, 14]}\r\n            style={{ flexDirection: \"column\" }}\r\n            justify=\"space-between\"\r\n            className=\"w-100\"\r\n          >\r\n            <Col flex={1}>\r\n              <Row gutter={[0, 14]} className=\"mt-1\">\r\n                <Row>\r\n                  <Typography.Text className=\"fz-16 fw-500\">\r\n                    Select Participants\r\n                  </Typography.Text>\r\n                </Row>\r\n                <Col xs={24} style={{ paddingRight: \"0.5rem\" }}>\r\n                  <Row className=\"counter-search-input\">\r\n                    <Input\r\n                      onChange={onSearch}\r\n                      placeholder=\"Search\"\r\n                      prefix={\r\n                        <SearchSVG color=\"#dedede\" style={{ scale: \"0.8\" }} />\r\n                      }\r\n                    />\r\n                  </Row>\r\n                </Col>\r\n\r\n                <Col\r\n                  xs={24}\r\n                  style={{\r\n                    maxHeight: \"70vh\",\r\n                    overflowY: \"auto\",\r\n                    paddingRight: \"0.5rem\",\r\n                  }}\r\n                >\r\n                  <Row gutter={[0, 20]} className=\"custome-checkbox-reversed\">\r\n                    <Form.Item name=\"users\" noStyle>\r\n                      <Checkbox.Group\r\n                        style={{\r\n                          height: \"calc(100% - 40px)\",\r\n                          width: \"100%\",\r\n                          display: \"flex\",\r\n                          flexDirection: \"column\",\r\n                          rowGap: \"16px\",\r\n                        }}\r\n                        className=\"w-100\"\r\n                        onChange={(e) => setSelectedUsers(e)}\r\n                      >\r\n                        {showParticipants.map((user) => (\r\n                          <Checkbox value={user.uid} key={user.uid}>\r\n                            <Row align=\"middle\" gutter={[12, 0]} wrap={false}>\r\n                              <Col>\r\n                                <Avatar\r\n                                  src={user.profileImage}\r\n                                  alt={user.name}\r\n                                  size={35}\r\n                                />\r\n                              </Col>\r\n                              <Col>\r\n                                <Typography.Text className=\"fw-500\">\r\n                                  {user.name}\r\n                                </Typography.Text>\r\n                              </Col>\r\n                            </Row>\r\n                          </Checkbox>\r\n                        ))}\r\n                      </Checkbox.Group>\r\n                    </Form.Item>\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n            <Col>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                style={{\r\n                  borderRadius: \"14px\",\r\n                  height: \"36px\",\r\n                  padding: \"0px 16px\",\r\n                  fontWeight: \"500\",\r\n                  fontSize: \"14px\",\r\n                  textOverflow: \"ellipsis\",\r\n                }}\r\n                className=\"w-100\"\r\n                disabled={!selectedUsers.length}\r\n              >\r\n                Send\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </ConfigProvider>\r\n      </Form>\r\n    </section>\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { Col, Row, Tooltip, Typography } from \"antd\";\r\n\r\nimport { ArrowRightSVG } from \"assets/jsx-svg\";\r\n\r\nimport \"./styles.css\";\r\nimport SocialEventService from \"services/social-event.service\";\r\nimport { axiosCatch } from \"utils/axiosUtils\";\r\n\r\nimport videoImg from \"assets/images/video.jpg\";\r\nimport { LoadingOutlined } from \"@ant-design/icons\";\r\n\r\nexport default function ProductionTools({\r\n  activeBtn,\r\n  setActiveBtn,\r\n  dimensionFrames,\r\n  iframeRef,\r\n}) {\r\n  const [dragedMedia, setDragedMedia] = useState(null);\r\n  const [mediaLibrary, setMediaLibrary] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const onDrop = (e, screenId) => {\r\n    e.preventDefault();\r\n    console.log(\"Draged Media\", dragedMedia);\r\n    console.log(\"Droped in Screen\", screenId);\r\n\r\n    const newFrame = {\r\n      name: screenId,\r\n      texture: dragedMedia,\r\n    };\r\n    iframeRef?.contentWindow?.unityInstance?.SendMessage(\r\n      \"BG_Scripts/JsBridge\",\r\n      \"SetFrameTexture\",\r\n      JSON.stringify(newFrame),\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (iframeRef) {\r\n      iframeRef.contentWindow?.unityInstance?.SendMessage(\r\n        \"BG_Scripts/JsBridge\",\r\n        \"GetFrames\",\r\n      );\r\n    }\r\n  }, [activeBtn, iframeRef]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        setLoading(true);\r\n        const res = await SocialEventService.getMedia();\r\n        setMediaLibrary(res.data.data.rows);\r\n        console.log(\"++++\", res.data.data.rows);\r\n      } catch (err) {\r\n        axiosCatch(err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    })();\r\n  }, [setMediaLibrary]);\r\n\r\n  return (\r\n    <section className=\"production-tools\">\r\n      <Row\r\n        wrap={false}\r\n        align=\"middle\"\r\n        gutter={[8, 0]}\r\n        style={{ width: \"fit-content\" }}\r\n        className=\"clickable\"\r\n        onClick={() => setActiveBtn(\"tools\")}\r\n      >\r\n        <Col>\r\n          <Row align=\"middle\">\r\n            <ArrowRightSVG color=\"#8E8E93\" style={{ rotate: \"180deg\" }} />\r\n          </Row>\r\n        </Col>\r\n        <Col>\r\n          <Typography.Text className=\"gc\">Back</Typography.Text>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row style={{ marginTop: \"24px\" }}>\r\n        <Typography.Text className=\"fz-22 fw-500\">\r\n          Production Tools\r\n        </Typography.Text>\r\n      </Row>\r\n\r\n      <Row gutter={[16, 0]} style={{ marginTop: \"2rem\" }}>\r\n        <Col xs={12} style={{ maxHeight: \"78vh\", overflowY: \"auto\" }}>\r\n          <Row gutter={[0, 12]}>\r\n            <Col xs={24}>\r\n              <Typography.Text className=\"fz-18\">Screens</Typography.Text>\r\n            </Col>\r\n            {dimensionFrames?.map((screen) => (\r\n              <Col key={screen.name} xs={24}>\r\n                <div\r\n                  onDragOver={(e) => e.preventDefault()}\r\n                  onDrop={(e) => onDrop(e, screen.name)}\r\n                  className=\"production-tools-screen\"\r\n                  style={{\r\n                    background: `url(${screen.texture || videoImg})`,\r\n                  }}\r\n                />\r\n                <Tooltip title={screen.name}>\r\n                  <Typography.Text ellipsis className={dragedMedia && \"wc\"}>\r\n                    {dragedMedia && \"Drop on \"}\r\n                    {screen.name}\r\n                  </Typography.Text>\r\n                </Tooltip>\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n        </Col>\r\n\r\n        <Col xs={12} style={{ maxHeight: \"78vh\", overflowY: \"auto\" }}>\r\n          {loading ? (\r\n            <Row justify=\"center\">\r\n              <LoadingOutlined />\r\n            </Row>\r\n          ) : (\r\n            <Row gutter={[12, 12]}>\r\n              <Col xs={24}>\r\n                <Typography.Text className=\"fz-18\">\r\n                  Media Library\r\n                </Typography.Text>\r\n              </Col>\r\n              {mediaLibrary?.map((media) => (\r\n                <Col key={media.id} xs={12}>\r\n                  <div\r\n                    draggable\r\n                    className=\"production-tools-media\"\r\n                    style={{\r\n                      background: `url(${media.image || videoImg})`,\r\n                      backgroundColor: \"#333\",\r\n                    }}\r\n                    onDragStart={() => setDragedMedia(media.file)}\r\n                    onDragEnd={() => setDragedMedia(null)}\r\n                  />\r\n                  <Tooltip title={media.name}>\r\n                    <Typography.Text ellipsis>{media.name}</Typography.Text>\r\n                  </Tooltip>\r\n                </Col>\r\n              ))}\r\n            </Row>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </section>\r\n  );\r\n}\r\n","import { Button, Col, Image, Row, Typography } from \"antd\";\r\nimport { WifiOutlined } from \"@ant-design/icons\";\r\n\r\nimport cam1Img from \"assets/images/cam1.png\";\r\nimport cam2Img from \"assets/images/cam2.png\";\r\nimport cam3Img from \"assets/images/cam3.png\";\r\nimport cam4Img from \"assets/images/cam4.png\";\r\n\r\nimport { ArrowRightSVG } from \"assets/jsx-svg\";\r\n\r\nimport \"./styles.css\";\r\n\r\nexport default function LiveStream({\r\n  setActiveBtn,\r\n  selectedCam,\r\n  setSelectedCam,\r\n}) {\r\n  const onAirStart = () => {\r\n    console.log(\"Air Start\");\r\n  };\r\n\r\n  const onAirFade = () => {\r\n    console.log(\"Air Fade\");\r\n  };\r\n\r\n  const onAirStop = () => {\r\n    console.log(\"Air Stop\");\r\n  };\r\n\r\n  return (\r\n    <section className=\"live-stream-section\">\r\n      <Row\r\n        wrap={false}\r\n        align=\"middle\"\r\n        gutter={[8, 0]}\r\n        style={{ width: \"fit-content\" }}\r\n        className=\"clickable\"\r\n        onClick={() => setActiveBtn(\"tools\")}\r\n      >\r\n        <Col>\r\n          <Row align=\"middle\">\r\n            <ArrowRightSVG color=\"#8E8E93\" style={{ rotate: \"180deg\" }} />\r\n          </Row>\r\n        </Col>\r\n        <Col>\r\n          <Typography.Text className=\"gc\">Back</Typography.Text>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row gutter={[0, 10]} style={{ marginTop: \"24px\" }}>\r\n        <Col xs={24}>\r\n          <Typography.Text className=\"fz-22 fw-500\">Livestream</Typography.Text>\r\n        </Col>\r\n        <Col xs={24}>\r\n          <Typography.Text className=\"fz-20\">\r\n            set Livestream Keys\r\n          </Typography.Text>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row gutter={[16, 16]} className=\"mt-1\">\r\n        <Col xs={24}>\r\n          <Typography.Text className=\"fz-20\">Screens</Typography.Text>\r\n        </Col>\r\n\r\n        <Col xs={24} style={{ maxHeight: \"330px\", overflowY: \"auto\" }}>\r\n          <Row gutter={[16, 16]}>\r\n            {cams.map((cam) => (\r\n              <Col key={cam.id} xs={24} md={12}>\r\n                <div\r\n                  className=\"live-stream-cam clickable\"\r\n                  style={{ borderColor: cam.color }}\r\n                  onClick={() => setSelectedCam(cam)}\r\n                >\r\n                  <Image\r\n                    src={cam.camImage}\r\n                    alt={cam.label}\r\n                    preview={false}\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                  />\r\n                </div>\r\n\r\n                <Typography.Text>{cam.label}</Typography.Text>\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n        </Col>\r\n\r\n        {selectedCam && (\r\n          <>\r\n            <Col xs={24}>\r\n              <Typography.Text className=\"fz-22 fw-500\">On Air</Typography.Text>\r\n            </Col>\r\n            <Col xs={24}>\r\n              <div\r\n                className=\"live-stream-cam\"\r\n                style={{ borderColor: selectedCam.color }}\r\n              >\r\n                <Image\r\n                  src={selectedCam.camImage}\r\n                  alt={selectedCam.label}\r\n                  preview={false}\r\n                  width=\"100%\"\r\n                  height=\"100%\"\r\n                />\r\n              </div>\r\n            </Col>\r\n\r\n            <Col xs={24}>\r\n              <Row justify=\"space-between\">\r\n                <Col>\r\n                  <Button\r\n                    onClick={onAirStart}\r\n                    className=\"live-stream-btn\"\r\n                    style={{\r\n                      background: \"transparent\",\r\n                      border: \"2px solid #000\",\r\n                      padding: \"0px 14px\",\r\n                    }}\r\n                  >\r\n                    <Row align={\"middle\"} gutter={[12, 0]}>\r\n                      <Col>\r\n                        <div\r\n                          className=\"live-stream-btn-dot\"\r\n                          style={{\r\n                            background: \"#f00\",\r\n                          }}\r\n                        />\r\n                      </Col>\r\n                      <Col>\r\n                        <Typography.Text className=\"fz-16\">\r\n                          Start\r\n                        </Typography.Text>\r\n                      </Col>\r\n                    </Row>\r\n                  </Button>\r\n                </Col>\r\n                <Col>\r\n                  <Button\r\n                    onClick={onAirFade}\r\n                    style={{\r\n                      background: \"transparent\",\r\n                      border: \"2px solid #000\",\r\n                      padding: \"0px 14px\",\r\n                    }}\r\n                  >\r\n                    <Row align={\"middle\"} gutter={[12, 0]}>\r\n                      <Col>\r\n                        <WifiOutlined />\r\n                      </Col>\r\n                      <Col>\r\n                        <Typography.Text className=\"fz-16\">\r\n                          Fade\r\n                        </Typography.Text>\r\n                      </Col>\r\n                    </Row>\r\n                  </Button>\r\n                </Col>\r\n                <Col>\r\n                  <Button\r\n                    onClick={onAirStop}\r\n                    style={{\r\n                      background: \"transparent\",\r\n                      border: \"2px solid #000\",\r\n                      padding: \"0px 14px\",\r\n                    }}\r\n                  >\r\n                    <Row align={\"middle\"} gutter={[12, 0]}>\r\n                      <Col>\r\n                        <div className=\"live-stream-btn-dot\" />\r\n                      </Col>\r\n                      <Col>\r\n                        <Typography.Text className=\"fz-16\">\r\n                          Stop\r\n                        </Typography.Text>\r\n                      </Col>\r\n                    </Row>\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </>\r\n        )}\r\n      </Row>\r\n    </section>\r\n  );\r\n}\r\n\r\nconst cams = [\r\n  { id: 1, camImage: cam1Img, label: \"Cam 1\", color: null },\r\n  { id: 2, camImage: cam2Img, label: \"Cam 2\", color: \"#f00\" },\r\n  { id: 3, camImage: cam3Img, label: \"Cam 3\", color: \"#0f0\" },\r\n  { id: 4, camImage: cam4Img, label: \"Cam 4\", color: \"#00f\" },\r\n];\r\n","import { MinusCircleOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  Form,\r\n  Image,\r\n  Input,\r\n  Row,\r\n  Tooltip,\r\n  Typography,\r\n  Upload,\r\n  message,\r\n} from \"antd\";\r\nimport { DeleteSVG } from \"assets/jsx-svg\";\r\nimport userContext from \"context/userContext\";\r\nimport { useCallback, useContext, useMemo, useState } from \"react\";\r\nimport CommonService from \"services/common.service\";\r\n\r\nimport png from \"assets/images/png.png\";\r\nimport pdf from \"assets/images/pdf.png\";\r\nimport doc from \"assets/images/doc.png\";\r\nimport xls from \"assets/images/xls.png\";\r\nimport zip from \"assets/images/zip.png\";\r\nimport jpg from \"assets/images/jpg.png\";\r\nimport fileImg from \"assets/images/file.png\";\r\n\r\nexport default function CounterForUser({\r\n  SystemMessage,\r\n  setAskedForCounter,\r\n  setActiveBtn,\r\n  counterFormData,\r\n}) {\r\n  const [sharedFiles, setSharedFiles] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const { user } = useContext(userContext);\r\n\r\n  const onFinish = (values) => {\r\n    console.error(values);\r\n    if (counterFormData.type === 1) {\r\n      SystemMessage.changeCounterUserSharedData({\r\n        user: {\r\n          id: user.id,\r\n          fullName: user.fullName,\r\n          profileImage: user.profileImage,\r\n        },\r\n        fullName: {\r\n          user: values.fullName,\r\n          hisGuests: values.fullNameGuests.map((guest) => guest.guestName),\r\n        },\r\n      });\r\n    } else if (counterFormData.type === 2) {\r\n      sharedFiles.forEach((file) => {\r\n        SystemMessage.changeCounterUserSharedData({\r\n          user: {\r\n            id: user.id,\r\n            fullName: user.fullName,\r\n          },\r\n          signature: file,\r\n        });\r\n      });\r\n    } else if (counterFormData.type === 3) {\r\n      sharedFiles.forEach((file) => {\r\n        SystemMessage.changeCounterUserSharedData({\r\n          user: {\r\n            id: user.id,\r\n            fullName: user.fullName,\r\n            profileImage: user.profileImage,\r\n          },\r\n          file: file,\r\n        });\r\n      });\r\n    } else if (counterFormData.type === 4) {\r\n      SystemMessage.changeCounterUserSharedData({\r\n        user: {\r\n          id: user.id,\r\n          fullName: user.fullName,\r\n          profileImage: user.profileImage,\r\n        },\r\n        customField: {\r\n          user: {\r\n            name: counterFormData.customField,\r\n            value: values.customField,\r\n          },\r\n          hisGuests: values.customFieldGuests.map((guest) => ({\r\n            name: counterFormData.customField,\r\n            value: guest.guestCustomField,\r\n          })),\r\n        },\r\n      });\r\n    }\r\n    setAskedForCounter(false);\r\n    setActiveBtn(\"participant\");\r\n    setSharedFiles([]);\r\n  };\r\n\r\n  const filesDraggerProps = useMemo(\r\n    () => ({\r\n      name: \"file\",\r\n      multiple: true,\r\n      action: false,\r\n      beforeUpload: () => false,\r\n      onChange: async (info) => {\r\n        setLoading(true);\r\n\r\n        try {\r\n          const {\r\n            uploadedFiles: { file: fileUrl },\r\n          } = await CommonService.uploadFile(info.file);\r\n\r\n          const newFile = {\r\n            id: info.file.uid,\r\n            name: info.file.name,\r\n            type: info.file.type,\r\n            url: fileUrl,\r\n            userName: user.fullName,\r\n          };\r\n\r\n          setSharedFiles((prev) => [...prev, newFile]);\r\n\r\n          message.success({\r\n            content: `Uploaded file: ${info.file.name}`,\r\n          });\r\n        } catch (error) {\r\n          console.warn(\"Error uploading file: \", error);\r\n          message.error({\r\n            content: `Failed to upload file: ${info.file.name}`,\r\n          });\r\n        } finally {\r\n          setLoading(false);\r\n        }\r\n      },\r\n      showUploadList: false,\r\n    }),\r\n    [user.fullName],\r\n  );\r\n\r\n  const signatureDraggerProps = useMemo(\r\n    () => ({\r\n      name: \"file\",\r\n      multiple: false,\r\n      action: false,\r\n      beforeUpload: () => false,\r\n      onChange: async (info) => {\r\n        setSharedFiles([]);\r\n        setLoading(true);\r\n\r\n        try {\r\n          const {\r\n            uploadedFiles: { file: fileUrl },\r\n          } = await CommonService.uploadFile(info.file);\r\n\r\n          const newFile = {\r\n            id: info.file.uid,\r\n            name: info.file.name,\r\n            type: info.file.type,\r\n            url: fileUrl,\r\n            userName: user.fullName,\r\n          };\r\n\r\n          setSharedFiles((prev) => [...prev, newFile]);\r\n\r\n          message.success({\r\n            content: `Uploaded file: ${info.file.name}`,\r\n          });\r\n        } catch (error) {\r\n          console.warn(\"Error uploading file: \", error);\r\n          message.error({\r\n            content: `Failed to upload file: ${info.file.name}`,\r\n          });\r\n        } finally {\r\n          setLoading(false);\r\n        }\r\n      },\r\n      showUploadList: false,\r\n    }),\r\n    [user.fullName],\r\n  );\r\n\r\n  const onFileDelete = useCallback(\r\n    (id) => {\r\n      setSharedFiles((prev) => prev.filter((file) => file.id !== id));\r\n    },\r\n    [setSharedFiles],\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Typography.Text className=\"fz-18 fw-500\">Counter</Typography.Text>\r\n\r\n      <section style={{ marginTop: \"24px\", height: \"calc(100% - 80px\" }}>\r\n        <Typography.Text className=\"fw-500\">\r\n          Host asked you for:\r\n        </Typography.Text>\r\n        <Form\r\n          name=\"userCounter\"\r\n          requiredMark={false}\r\n          layout=\"vertical\"\r\n          onFinish={onFinish}\r\n          className=\"h-100\"\r\n        >\r\n          <Row\r\n            className=\"h-100\"\r\n            justify=\"space-between\"\r\n            style={{ flexDirection: \"column\" }}\r\n          >\r\n            <Col>\r\n              {counterFormData.type === 1 && (\r\n                <>\r\n                  <Form.Item\r\n                    rules={[\r\n                      {\r\n                        required: counterFormData.type === 1,\r\n                        message: \"Please Enter Your Full Name\",\r\n                      },\r\n                    ]}\r\n                    name=\"fullName\"\r\n                    label=\"Full Name\"\r\n                    className=\"mt-1\"\r\n                  >\r\n                    <Input placeholder=\"Enter Your Full Name\" />\r\n                  </Form.Item>\r\n\r\n                  <Form.List name=\"fullNameGuests\">\r\n                    {(fields, { add, remove }) => (\r\n                      <>\r\n                        {fields.map(({ key, name, ...restField }) => (\r\n                          <Row\r\n                            key={key}\r\n                            gutter={[8, 0]}\r\n                            wrap={false}\r\n                            align=\"middle\"\r\n                            className=\"mt-1\"\r\n                          >\r\n                            <Col>\r\n                              <Typography.Text className=\"fw-600\">\r\n                                Guest {name + 1}\r\n                              </Typography.Text>\r\n                            </Col>\r\n                            <Col flex={1}>\r\n                              <Form.Item\r\n                                {...restField}\r\n                                name={[name, \"guestName\"]}\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Guest Full Name\",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Input placeholder=\"Guest Full Name\" />\r\n                              </Form.Item>\r\n                            </Col>\r\n\r\n                            <Col>\r\n                              <MinusCircleOutlined\r\n                                onClick={() => remove(name)}\r\n                              />\r\n                            </Col>\r\n                          </Row>\r\n                        ))}\r\n                        <Form.Item>\r\n                          <Button\r\n                            type=\"dashed\"\r\n                            onClick={() => add()}\r\n                            block\r\n                            icon={<PlusOutlined />}\r\n                            style={{\r\n                              background: \"transparent\",\r\n                              height: \"40px\",\r\n                              padding: \"0\",\r\n                            }}\r\n                            className=\"mt-1\"\r\n                          >\r\n                            Add Guest\r\n                          </Button>\r\n                        </Form.Item>\r\n                      </>\r\n                    )}\r\n                  </Form.List>\r\n                </>\r\n              )}\r\n\r\n              {counterFormData.type === 2 && (\r\n                <Form.Item\r\n                  rules={[\r\n                    {\r\n                      required: counterFormData.type === 2,\r\n                      message: \"Please Upload File\",\r\n                    },\r\n                  ]}\r\n                  name=\"signature\"\r\n                  label=\"Signature File\"\r\n                  className=\"mt-1\"\r\n                >\r\n                  <Upload.Dragger\r\n                    style={{\r\n                      background: \"#fff\",\r\n                      borderRadius: \"14px\",\r\n                      minHeight: \"140px\",\r\n                      display: \"flex\",\r\n                      flexDirection: \"column\",\r\n                      justifyContent: \"center\",\r\n                      alignContent: \"center\",\r\n                    }}\r\n                    {...signatureDraggerProps}\r\n                  >\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        justifyContent: \"center\",\r\n                        alignContent: \"center\",\r\n                      }}\r\n                    >\r\n                      <Typography.Text className=\"fw-500\">\r\n                        Upload File\r\n                      </Typography.Text>\r\n                      <Typography.Text className=\"gc\">\r\n                        or drag and drop\r\n                      </Typography.Text>\r\n                    </div>\r\n                  </Upload.Dragger>\r\n                </Form.Item>\r\n              )}\r\n\r\n              {counterFormData.type === 3 && (\r\n                <Form.Item\r\n                  rules={[\r\n                    {\r\n                      required: counterFormData.type === 3,\r\n                      message: \"Please Upload File\",\r\n                    },\r\n                  ]}\r\n                  name=\"file\"\r\n                  label={`${counterFormData.fileName}`}\r\n                  className=\"mt-1\"\r\n                >\r\n                  <Upload.Dragger\r\n                    style={{\r\n                      background: \"#fff\",\r\n                      borderRadius: \"14px\",\r\n                      minHeight: \"140px\",\r\n                      display: \"flex\",\r\n                      flexDirection: \"column\",\r\n                      justifyContent: \"center\",\r\n                      alignContent: \"center\",\r\n                    }}\r\n                    {...filesDraggerProps}\r\n                  >\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        justifyContent: \"center\",\r\n                        alignContent: \"center\",\r\n                      }}\r\n                    >\r\n                      <Typography.Text className=\"fw-500\">\r\n                        Upload File\r\n                      </Typography.Text>\r\n                      <Typography.Text className=\"gc\">\r\n                        or drag and drop\r\n                      </Typography.Text>\r\n                    </div>\r\n                  </Upload.Dragger>\r\n                </Form.Item>\r\n              )}\r\n\r\n              {counterFormData.type === 4 && (\r\n                <>\r\n                  <Form.Item\r\n                    rules={[\r\n                      {\r\n                        required: counterFormData.type === 3,\r\n                        message: `Please Enter ${counterFormData.customField}`,\r\n                      },\r\n                    ]}\r\n                    name=\"customField\"\r\n                    label={`${counterFormData.customField}`}\r\n                    className=\"mt-1\"\r\n                  >\r\n                    <Input\r\n                      placeholder={`Enter ${counterFormData.customField}`}\r\n                    />\r\n                  </Form.Item>\r\n\r\n                  <Form.List name=\"customFieldGuests\">\r\n                    {(fields, { add, remove }) => (\r\n                      <>\r\n                        {fields.map(({ key, name, ...restField }) => (\r\n                          <Row\r\n                            key={key}\r\n                            gutter={[8, 0]}\r\n                            wrap={false}\r\n                            align=\"middle\"\r\n                            className=\"mt-1\"\r\n                          >\r\n                            <Col>\r\n                              <Typography.Text className=\"fw-600\">\r\n                                Guest {name + 1}\r\n                              </Typography.Text>\r\n                            </Col>\r\n                            <Col flex={1}>\r\n                              <Form.Item\r\n                                {...restField}\r\n                                name={[name, \"guestCustomField\"]}\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: `Guest ${counterFormData.customField}`,\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Input\r\n                                  placeholder={`Guest ${counterFormData.customField}`}\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>\r\n\r\n                            <Col>\r\n                              <MinusCircleOutlined\r\n                                onClick={() => remove(name)}\r\n                              />\r\n                            </Col>\r\n                          </Row>\r\n                        ))}\r\n                        <Form.Item>\r\n                          <Button\r\n                            type=\"dashed\"\r\n                            onClick={() => add()}\r\n                            block\r\n                            icon={<PlusOutlined />}\r\n                            style={{\r\n                              background: \"transparent\",\r\n                              height: \"40px\",\r\n                              padding: \"0\",\r\n                            }}\r\n                            className=\"mt-1\"\r\n                          >\r\n                            Add Guest\r\n                          </Button>\r\n                        </Form.Item>\r\n                      </>\r\n                    )}\r\n                  </Form.List>\r\n                </>\r\n              )}\r\n\r\n              {(counterFormData.type === 2 || counterFormData.type === 3) &&\r\n              sharedFiles?.length ? (\r\n                <div style={{ marginTop: \"32px\" }}>\r\n                  <Typography.Text className=\"fz-16 fw-500\">\r\n                    Uploaded Files:\r\n                  </Typography.Text>\r\n\r\n                  <Row\r\n                    gutter={[0, 8]}\r\n                    className=\"mt-1\"\r\n                    style={{\r\n                      maxHeight: \"390px\",\r\n                      overflowY: \"auto\",\r\n                      overflowX: \"hidden\",\r\n                    }}\r\n                  >\r\n                    {sharedFiles.map((file) => (\r\n                      <Col key={file.id} xs={24}>\r\n                        <Row\r\n                          justify=\"space-between\"\r\n                          align=\"middle\"\r\n                          wrap={false}\r\n                          className=\"file-uploaded\"\r\n                        >\r\n                          <Col>\r\n                            <Row align=\"middle\" wrap={false} gutter={[16, 0]}>\r\n                              <Col>\r\n                                <Image\r\n                                  width={32}\r\n                                  height={32}\r\n                                  alt={file.name}\r\n                                  src={filesExtentionsImg(file.type)}\r\n                                  preview={false}\r\n                                />\r\n                              </Col>\r\n                              <Col style={{ maxWidth: \"100px\" }}>\r\n                                <Tooltip title={file.name}>\r\n                                  <Typography.Text ellipsis>\r\n                                    {file.name}\r\n                                  </Typography.Text>\r\n                                </Tooltip>\r\n                              </Col>\r\n                            </Row>\r\n                          </Col>\r\n                          <Col\r\n                            className=\"clickable\"\r\n                            onClick={() => onFileDelete(file.id)}\r\n                          >\r\n                            <Row align=\"middle\" wrap={false} gutter={[8, 0]}>\r\n                              <Col>\r\n                                <Typography.Text>Delete</Typography.Text>\r\n                              </Col>\r\n                              <Col>\r\n                                <Row align=\"middle\">\r\n                                  <DeleteSVG color=\"#000\" />\r\n                                </Row>\r\n                              </Col>\r\n                            </Row>\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n                    ))}\r\n                  </Row>\r\n                </div>\r\n              ) : null}\r\n            </Col>\r\n            <Col>\r\n              <Form.Item style={{ marginTop: \"4rem\" }}>\r\n                <Button\r\n                  loading={loading}\r\n                  className=\"w-100\"\r\n                  type=\"primary\"\r\n                  htmlType=\"submit\"\r\n                >\r\n                  Done\r\n                </Button>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n\r\nconst filesExtentionsImg = (fileType) => {\r\n  const extension = fileType.split(\"/\")[1];\r\n\r\n  let imageSrc;\r\n  switch (extension) {\r\n    case \"png\":\r\n      imageSrc = png;\r\n      break;\r\n    case \"pdf\":\r\n      imageSrc = pdf;\r\n      break;\r\n    case \"doc\":\r\n    case \"docx\":\r\n      imageSrc = doc;\r\n      break;\r\n    case \"xls\":\r\n    case \"xlsx\":\r\n      imageSrc = xls;\r\n      break;\r\n    case \"zip\":\r\n      imageSrc = zip;\r\n      break;\r\n    case \"jpg\":\r\n    case \"jpeg\":\r\n      imageSrc = jpg;\r\n      break;\r\n    default:\r\n      imageSrc = fileImg;\r\n  }\r\n\r\n  return imageSrc;\r\n};\r\n","import { Avatar, Col, Image, Row, Tooltip, Typography } from \"antd\";\r\n\r\nimport { ArrowRightSVG } from \"assets/jsx-svg\";\r\nimport png from \"assets/images/png.png\";\r\nimport pdf from \"assets/images/pdf.png\";\r\nimport doc from \"assets/images/doc.png\";\r\nimport xls from \"assets/images/xls.png\";\r\nimport zip from \"assets/images/zip.png\";\r\nimport jpg from \"assets/images/jpg.png\";\r\nimport fileImg from \"assets/images/file.png\";\r\n\r\nimport \"./styles.css\";\r\n\r\nexport default function CounterSharedData({ setActiveBtn, counterSharedData }) {\r\n  console.warn(counterSharedData);\r\n  let sharedData = [];\r\n  if (Object.keys(counterSharedData).length) {\r\n    for (const [key, data] of Object.entries(counterSharedData)) {\r\n      sharedData.push(\r\n        <Col\r\n          key={key}\r\n          xs={24}\r\n          style={{\r\n            borderBottom: \"2px solid #ccc\",\r\n            paddingTop: \"1rem\",\r\n            paddingBottom: \"1rem\",\r\n          }}\r\n        >\r\n          <Row align=\"middle\" gutter={[8, 8]} style={{ maxWidth: \"100%\" }}>\r\n            {data.userData && (\r\n              <Col>\r\n                <Avatar\r\n                  size={38}\r\n                  style={{ objectFit: \"cover\" }}\r\n                  src={data.userData.profileImage}\r\n                />\r\n              </Col>\r\n            )}\r\n            <Col>\r\n              <Typography.Text\r\n                className=\"fz-16 fw-500\"\r\n                style={{ color: \"#960bcd\" }}\r\n              >\r\n                {data.userData ? data.userData.fullName : data.name}\r\n              </Typography.Text>\r\n            </Col>\r\n          </Row>\r\n\r\n          {data.fullName && (\r\n            <>\r\n              <Row className=\"mt-1\">\r\n                <Typography.Text>\r\n                  <span className=\"fw-600\" style={{ fontStyle: \"italic\" }}>\r\n                    User Full Name:\r\n                  </span>{\" \"}\r\n                  {data.fullName.user ? data.fullName.user : data.fullName}\r\n                </Typography.Text>\r\n              </Row>\r\n\r\n              {data.fullName.hisGuests &&\r\n                data.fullName.hisGuests.map((guest, index) => (\r\n                  <Row className=\"mt-1\" key={index}>\r\n                    <Typography.Text>\r\n                      <span className=\"fw-600\" style={{ fontStyle: \"italic\" }}>\r\n                        Guest {index + 1}:\r\n                      </span>{\" \"}\r\n                      {guest}\r\n                    </Typography.Text>\r\n                  </Row>\r\n                ))}\r\n            </>\r\n          )}\r\n\r\n          {data.files.length > 0 && (\r\n            <>\r\n              <Row className=\"mt-1\">\r\n                <Typography.Text\r\n                  className=\"fw-600\"\r\n                  style={{ fontStyle: \"italic\" }}\r\n                >\r\n                  Fiels Uploaded:{\" \"}\r\n                </Typography.Text>\r\n              </Row>\r\n\r\n              {data.files.map((file) => (\r\n                <Row\r\n                  key={file.id}\r\n                  justify=\"space-between\"\r\n                  align=\"middle\"\r\n                  wrap={false}\r\n                  className=\"file-uploaded\"\r\n                  style={{ userSelect: \"none\", marginTop: \"8px\" }}\r\n                >\r\n                  <Col>\r\n                    <Row align=\"middle\" wrap={false} gutter={[16, 0]}>\r\n                      <Col>\r\n                        <Image\r\n                          width={32}\r\n                          height={32}\r\n                          alt={file.name}\r\n                          src={filesExtentionsImg(file.type)}\r\n                          preview={false}\r\n                        />\r\n                      </Col>\r\n                      <Col style={{ maxWidth: \"100px\" }}>\r\n                        <Tooltip title={file.name}>\r\n                          <Typography.Text ellipsis>\r\n                            {file.name}\r\n                          </Typography.Text>\r\n                        </Tooltip>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col\r\n                    className=\"clickable\"\r\n                    onClick={() => window.open(file.url)}\r\n                  >\r\n                    <Row align=\"middle\" wrap={false} gutter={[8, 0]}>\r\n                      <Col>\r\n                        <Typography.Text>Download</Typography.Text>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                </Row>\r\n              ))}\r\n            </>\r\n          )}\r\n\r\n          {data.signature && (\r\n            <>\r\n              <Row className=\"mt-1\">\r\n                <Typography.Text\r\n                  className=\"fw-600\"\r\n                  style={{ fontStyle: \"italic\" }}\r\n                >\r\n                  Signature :\r\n                </Typography.Text>\r\n              </Row>\r\n\r\n              <Row\r\n                justify=\"space-between\"\r\n                align=\"middle\"\r\n                wrap={false}\r\n                className=\"file-uploaded \"\r\n                style={{ userSelect: \"none\", marginTop: \"8px\" }}\r\n              >\r\n                <Col>\r\n                  <Row align=\"middle\" wrap={false} gutter={[16, 0]}>\r\n                    <Col>\r\n                      <Image\r\n                        width={32}\r\n                        height={32}\r\n                        alt={data.signature.name}\r\n                        src={filesExtentionsImg(data.signature.type)}\r\n                        preview={false}\r\n                      />\r\n                    </Col>\r\n                    <Col style={{ maxWidth: \"100px\" }}>\r\n                      <Tooltip title={data.signature.name}>\r\n                        <Typography.Text ellipsis>\r\n                          {data.signature.name}\r\n                        </Typography.Text>\r\n                      </Tooltip>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <Col\r\n                  className=\"clickable\"\r\n                  onClick={() => window.open(data.signature.url)}\r\n                >\r\n                  <Row align=\"middle\" wrap={false} gutter={[8, 0]}>\r\n                    <Col>\r\n                      <Typography.Text>Download</Typography.Text>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n            </>\r\n          )}\r\n\r\n          {data.customField && data.customField.length > 0 && (\r\n            <>\r\n              <Row className=\"mt-1\">\r\n                <Typography.Text\r\n                  className=\"fw-600\"\r\n                  style={{ fontStyle: \"italic\" }}\r\n                >\r\n                  Custom Field:{\" \"}\r\n                </Typography.Text>\r\n              </Row>\r\n\r\n              {data.customField &&\r\n                data.customField.map((field, index) => {\r\n                  if (field.user) {\r\n                    return (\r\n                      <>\r\n                        <Row key={index}>\r\n                          <Typography.Text>\r\n                            {field.user.name} : {field.user.value}\r\n                          </Typography.Text>\r\n                        </Row>\r\n\r\n                        {field.hisGuests.length > 0 &&\r\n                          field.hisGuests.map((guest, index) => (\r\n                            <Row key={index}>\r\n                              <Typography.Text>\r\n                                {guest.name} : {guest.value} (Guest {index + 1})\r\n                              </Typography.Text>\r\n                            </Row>\r\n                          ))}\r\n                      </>\r\n                    );\r\n                  } else {\r\n                    return null;\r\n                  }\r\n                })}\r\n\r\n              {data.customField.hisGuests &&\r\n                data.customField.hisGuests.map((field, index) => (\r\n                  <Row key={index}>\r\n                    <Typography.Text>\r\n                      {field.name} : {field.value} (Guest {index + 1})\r\n                    </Typography.Text>\r\n                  </Row>\r\n                ))}\r\n            </>\r\n          )}\r\n        </Col>,\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <section className=\"shared-files\">\r\n      <Row\r\n        wrap={false}\r\n        align=\"middle\"\r\n        gutter={[8, 0]}\r\n        style={{ width: \"fit-content\" }}\r\n        className=\"clickable\"\r\n        onClick={() => setActiveBtn(\"counter\")}\r\n      >\r\n        <Col>\r\n          <Row align=\"middle\">\r\n            <ArrowRightSVG color=\"#8E8E93\" style={{ rotate: \"180deg\" }} />\r\n          </Row>\r\n        </Col>\r\n        <Col>\r\n          <Typography.Text className=\"gc\">Back</Typography.Text>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row style={{ marginTop: \"24px\" }} gutter={[0, 24]}>\r\n        <Col xs={24}>\r\n          <Typography.Text className=\"fz-16 fw-500\">\r\n            Files shared by users:\r\n          </Typography.Text>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row gutter={[0, 16]} style={{ maxHeight: \"750px\", overflowY: \"auto\" }}>\r\n        {sharedData}\r\n      </Row>\r\n    </section>\r\n  );\r\n}\r\n\r\nconst filesExtentionsImg = (fileType) => {\r\n  const extension = fileType.split(\"/\")[1];\r\n\r\n  let imageSrc;\r\n  switch (extension) {\r\n    case \"png\":\r\n      imageSrc = png;\r\n      break;\r\n    case \"pdf\":\r\n      imageSrc = pdf;\r\n      break;\r\n    case \"doc\":\r\n    case \"docx\":\r\n      imageSrc = doc;\r\n      break;\r\n    case \"xls\":\r\n    case \"xlsx\":\r\n      imageSrc = xls;\r\n      break;\r\n    case \"zip\":\r\n      imageSrc = zip;\r\n      break;\r\n    case \"jpg\":\r\n    case \"jpeg\":\r\n      imageSrc = jpg;\r\n      break;\r\n    default:\r\n      imageSrc = fileImg;\r\n  }\r\n\r\n  return imageSrc;\r\n};\r\n","import axios from \"axios\";\r\nimport { API_BASE } from \"./config\";\r\n\r\nconst SERVICE_BASE = API_BASE + \"/desk/\";\r\n\r\nconst addDesk = (data) => {\r\n  return axios.post(SERVICE_BASE + \"add\", data);\r\n};\r\n\r\nconst listDesks = (dimensionId) => {\r\n  return axios.get(SERVICE_BASE + `list/${dimensionId}`);\r\n};\r\n\r\nconst getMyDesks = () => {\r\n  return axios.get(SERVICE_BASE + \"get-my-desks\");\r\n};\r\n\r\nconst getDeskInfo = (meetingId) => {\r\n  return axios.get(SERVICE_BASE + `get-desk-info/${meetingId}`);\r\n};\r\n\r\nconst editDesk = (data) => {\r\n  return axios.put(SERVICE_BASE + \"edit\", data);\r\n};\r\n\r\nconst DeskService = {\r\n  addDesk,\r\n  listDesks,\r\n  getMyDesks,\r\n  getDeskInfo,\r\n  editDesk,\r\n};\r\n\r\nexport default DeskService;\r\n","import { useEffect, useState } from \"react\";\r\nimport { Button, Col, Row, Typography } from \"antd\";\r\n\r\nimport DeskService from \"services/desk.service\";\r\nimport { LoadingOutlined } from \"@ant-design/icons\";\r\n\r\nimport \"./styles.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function Desks() {\r\n  const navigate = useNavigate();\r\n  const [desksData, setDesksData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        setLoading(true);\r\n        const res = await DeskService.getMyDesks();\r\n        setDesksData(res.data.data);\r\n      } catch (axiosCatch) {\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Typography.Text className=\"fz-18 fw-500\">My Desks</Typography.Text>\r\n      <section className=\"virtual-support-desks\">\r\n        {loading ? (\r\n          <Row justify=\"center\">\r\n            <LoadingOutlined />\r\n          </Row>\r\n        ) : (\r\n          desksData?.map((dim) => (\r\n            <Row className=\"dim-info\" id={dim.id} justify=\"start\">\r\n              <Typography.Text className=\"fz-18 fw-500\">\r\n                {dim.name} Desks :\r\n              </Typography.Text>\r\n\r\n              {dim.dimensionDesks.map((desk) => (\r\n                <div className=\"desk-info\">\r\n                  <Row align=\"middle\" justify=\"space-between\">\r\n                    <Col>\r\n                      <Row>\r\n                        <Typography.Text className=\"fw-500\">\r\n                          {desk.name}\r\n                        </Typography.Text>\r\n                      </Row>\r\n                      <Row>\r\n                        <Typography.Text>{desk.status}</Typography.Text>\r\n                      </Row>\r\n                    </Col>\r\n                    <Col>\r\n                      <Button\r\n                        type=\"primary\"\r\n                        className=\"fz-14\"\r\n                        style={{ height: \"30px\", padding: \"0 10px\" }}\r\n                        onClick={() => {\r\n                          navigate(`/vindo-desk/${desk.meetingId}?type=desk`);\r\n                          window.location.reload(false);\r\n                        }}\r\n                      >\r\n                        Set\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              ))}\r\n            </Row>\r\n          ))\r\n        )}\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n","import { Button, Col, Form, Input, Row, Typography, message } from \"antd\";\r\nimport { LeftArrowSVG } from \"assets/jsx-svg\";\r\n\r\nexport default function EmbedLink({ setActiveBtn, fastboard }) {\r\n  const [form] = Form.useForm();\r\n\r\n  const onFinish = async (values) => {\r\n    await fastboard?.manager.addApp({\r\n      kind: \"EmbeddedPage\",\r\n      options: { title: \"Embed\" },\r\n      attributes: {\r\n        src: values.link,\r\n      },\r\n    });\r\n    form.resetFields();\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      onFinish={onFinish}\r\n      requiredMark={false}\r\n      form={form}\r\n      layout=\"vertical\"\r\n      name=\"youtune\"\r\n    >\r\n      <div className=\"clickable\" onClick={() => setActiveBtn(\"participant\")}>\r\n        <Row wrap={false} gutter={[6, 0]} align=\"middle\">\r\n          <Col>\r\n            <Row align=\"middle\">\r\n              <LeftArrowSVG\r\n                color=\"#8E8E93\"\r\n                style={{ width: \"14px\", height: \"14px\" }}\r\n              />\r\n            </Row>\r\n          </Col>\r\n          <Col>\r\n            <Typography.Text style={{ color: \"#8E8E93\" }}>Back</Typography.Text>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n\r\n      <Form.Item\r\n        className=\"mt-1\"\r\n        label=\"Add Embed Link\"\r\n        name=\"link\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"Please Add Link\",\r\n          },\r\n        ]}\r\n      >\r\n        <Input placeholder=\"Enter Here\" />\r\n      </Form.Item>\r\n\r\n      <Row justify=\"end\" className=\"mt-1\">\r\n        <Button htmlType=\"submit\" type=\"primary\">\r\n          Open\r\n        </Button>\r\n      </Row>\r\n    </Form>\r\n  );\r\n}\r\n","import { useEffect, useMemo, useState } from \"react\";\r\nimport { Typography, Col, Row, Button, Image, Form } from \"antd\";\r\nimport { EyeInvisibleFilled } from \"@ant-design/icons\";\r\n\r\nimport MeetingCallParticipants from \"../MeetingCallParticipants\";\r\nimport InventorySection from \"../InventorySection\";\r\nimport ProductSection from \"../ProductSection\";\r\nimport MeetChat from \"../MeetChat\";\r\nimport MyCart from \"../MyCart\";\r\nimport ShareTools from \"../ShareTools\";\r\nimport MetaExperience from \"../MetaExperience\";\r\nimport Holomeet from \"../Holomeet\";\r\nimport FilesSharing from \"../FilesSharing\";\r\nimport SharedFiles from \"../SharedFiles\";\r\nimport YoutubeLink from \"../YoutubeLink\";\r\nimport Counter from \"../Counter\";\r\nimport CounterParticipants from \"../Counter/CounterParticipants\";\r\nimport ProductionTools from \"../ProductionTools\";\r\nimport LiveStream from \"../LiveStream\";\r\nimport CounterForUser from \"../Counter/CounterForUser\";\r\n\r\nimport { GroupsSVG } from \"assets/jsx-svg\";\r\nimport AvatarMain from \"assets/images/AvatarMain.png\";\r\n\r\nimport \"./styles.css\";\r\nimport CounterSharedData from \"../Counter/CounterSharedData\";\r\nimport Desks from \"../Desks\";\r\nimport EmbedLink from \"../EmbedLink\";\r\n\r\nexport default function MeetAsaider({\r\n  isHost,\r\n  chatLoading,\r\n  messages,\r\n  sendMessage,\r\n  participants,\r\n  setActiveBtn,\r\n  activeBtn,\r\n  SystemMessage,\r\n  shareWhiteboard,\r\n  permissions,\r\n  sharedDimId,\r\n  sharingDimId,\r\n  sharedFiles,\r\n  setSharedFiles,\r\n  sharingScreen,\r\n  unPublishScreen,\r\n  publishScreen,\r\n  sharingDim,\r\n  sharingFile,\r\n  sharingWhiteboard,\r\n  setHideSide,\r\n  joinedSharedDim,\r\n  setJoinedSharedDim,\r\n  fastboard,\r\n  setAskedForCounter,\r\n  counterFormData,\r\n  counterSharedData,\r\n  sharedHolomeetId,\r\n  dimensionFrames,\r\n  iframeRef,\r\n}) {\r\n  const [productSelected, setProductSelected] = useState(null);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [showParticipants, setShowParticipants] = useState(participants);\r\n  const [selectedCam, setSelectedCam] = useState(null);\r\n  const [counterActiveBtn, setCounterActiveBtn] = useState(3);\r\n  const [counterForm] = Form.useForm();\r\n\r\n  useMemo(() => {\r\n    if (searchValue) {\r\n      setShowParticipants(\r\n        participants?.filter((participant) =>\r\n          participant.name.toLowerCase().includes(searchValue.toLowerCase()),\r\n        ),\r\n      );\r\n    } else {\r\n      setShowParticipants(participants);\r\n    }\r\n  }, [participants, searchValue]);\r\n\r\n  const onSearch = (e) => {\r\n    let value = e.target.value;\r\n    setSearchValue(value.trim());\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!!sharedDimId) {\r\n      setActiveBtn(\"sharingDim\");\r\n    } else {\r\n      setActiveBtn(\"participant\");\r\n    }\r\n  }, [setActiveBtn, sharedDimId]);\r\n\r\n  useEffect(() => {\r\n    if (sharingFile && !isHost) {\r\n      setActiveBtn(\"sharedFiles\");\r\n    }\r\n  }, [setActiveBtn, sharingFile, isHost]);\r\n\r\n  return (\r\n    <aside className=\"h-100\">\r\n      <div className=\"hide-sider clickable\" onClick={() => setHideSide(true)}>\r\n        <EyeInvisibleFilled style={{ color: \"#8E8E93\" }} />\r\n        <Typography.Text className=\"fw-500 gc\">Hide Panel</Typography.Text>\r\n      </div>\r\n      <>\r\n        {activeBtn === \"metaExperience\" && (\r\n          <MetaExperience\r\n            SystemMessage={SystemMessage}\r\n            setActiveBtn={setActiveBtn}\r\n            sharingDimId={sharingDimId}\r\n            sharingScreen={sharingScreen}\r\n            unPublishScreen={unPublishScreen}\r\n            sharingFile={sharingFile}\r\n            sharingWhiteboard={sharingWhiteboard}\r\n          />\r\n        )}\r\n\r\n        {activeBtn === \"myCart\" && <MyCart />}\r\n\r\n        {activeBtn === \"productSection\" && (\r\n          <ProductSection\r\n            setProductSelected={setProductSelected}\r\n            productSelected={productSelected}\r\n            participants={participants}\r\n            setActiveBtn={setActiveBtn}\r\n          />\r\n        )}\r\n\r\n        {activeBtn === \"youtubeLink\" && (\r\n          <YoutubeLink setActiveBtn={setActiveBtn} fastboard={fastboard} />\r\n        )}\r\n\r\n        {activeBtn === \"embedLink\" && (\r\n          <EmbedLink setActiveBtn={setActiveBtn} fastboard={fastboard} />\r\n        )}\r\n\r\n        {activeBtn === \"counter\" && (\r\n          <Counter\r\n            participants={participants}\r\n            setActiveBtn={setActiveBtn}\r\n            SystemMessage={SystemMessage}\r\n            counterForm={counterForm}\r\n            counterActiveBtn={counterActiveBtn}\r\n            setCounterActiveBtn={setCounterActiveBtn}\r\n            setAskedForCounter={setAskedForCounter}\r\n            iframeRef={iframeRef}\r\n          />\r\n        )}\r\n\r\n        {activeBtn === \"userCounter\" && (\r\n          <CounterForUser\r\n            SystemMessage={SystemMessage}\r\n            setActiveBtn={setActiveBtn}\r\n            setAskedForCounter={setAskedForCounter}\r\n            counterFormData={counterFormData}\r\n          />\r\n        )}\r\n\r\n        {activeBtn === \"counterUserSharedData\" && (\r\n          <CounterSharedData\r\n            setActiveBtn={setActiveBtn}\r\n            counterSharedData={counterSharedData}\r\n          />\r\n        )}\r\n\r\n        {activeBtn === \"counterParticipants\" && (\r\n          <CounterParticipants\r\n            setActiveBtn={setActiveBtn}\r\n            participants={participants}\r\n            counterForm={counterForm}\r\n            SystemMessage={SystemMessage}\r\n            counterActiveBtn={counterActiveBtn}\r\n            setAskedForCounter={setAskedForCounter}\r\n          />\r\n        )}\r\n\r\n        {activeBtn === \"productionTools\" && (\r\n          <ProductionTools\r\n            activeBtn={activeBtn}\r\n            setActiveBtn={setActiveBtn}\r\n            dimensionFrames={dimensionFrames}\r\n            iframeRef={iframeRef}\r\n          />\r\n        )}\r\n\r\n        {activeBtn === \"liveStream\" && (\r\n          <LiveStream\r\n            setActiveBtn={setActiveBtn}\r\n            selectedCam={selectedCam}\r\n            setSelectedCam={setSelectedCam}\r\n          />\r\n        )}\r\n\r\n        {activeBtn === \"tools\" && (\r\n          <ShareTools\r\n            setActiveBtn={setActiveBtn}\r\n            shareWhiteboard={shareWhiteboard}\r\n            isHost={isHost}\r\n            permissions={permissions}\r\n            sharingScreen={sharingScreen}\r\n            unPublishScreen={unPublishScreen}\r\n            publishScreen={publishScreen}\r\n            SystemMessage={SystemMessage}\r\n            sharingDim={sharingDim}\r\n            sharingFile={sharingFile}\r\n            sharingWhiteboard={sharingWhiteboard}\r\n          />\r\n        )}\r\n\r\n        {activeBtn === \"participant\" && (\r\n          <MeetingCallParticipants\r\n            participants={showParticipants}\r\n            onSearch={onSearch}\r\n          />\r\n        )}\r\n\r\n        {activeBtn === \"inventory\" && (\r\n          <InventorySection\r\n            setProductSelected={setProductSelected}\r\n            setActiveBtn={setActiveBtn}\r\n          />\r\n        )}\r\n\r\n        {activeBtn === \"chat\" && (\r\n          <Row gutter={[0, 14]} className=\"h-100\">\r\n            <Col xs={24}>\r\n              <MeetChat\r\n                loading={chatLoading}\r\n                messages={messages}\r\n                sendMessage={sendMessage}\r\n                participants={participants}\r\n                isHost={isHost}\r\n                permissions={permissions}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        )}\r\n\r\n        {activeBtn === \"desks\" && <Desks />}\r\n\r\n        {activeBtn === \"holomeet\" && <Holomeet SystemMessage={SystemMessage} />}\r\n\r\n        {activeBtn === \"files\" && (\r\n          <FilesSharing\r\n            setActiveBtn={setActiveBtn}\r\n            sharedFiles={sharedFiles}\r\n            setSharedFiles={setSharedFiles}\r\n          />\r\n        )}\r\n\r\n        {activeBtn === \"sharedFiles\" && (\r\n          <SharedFiles\r\n            setActiveBtn={setActiveBtn}\r\n            sharedFiles={sharedFiles}\r\n            permissions={permissions}\r\n          />\r\n        )}\r\n\r\n        {activeBtn === \"sharingDim\" && (\r\n          <>\r\n            <Row style={{ marginTop: \"24px\" }}>\r\n              <Typography.Text className=\"fz-18 fw-400\">\r\n                You Can Join Metaverse Experience With Other Participants.\r\n              </Typography.Text>\r\n            </Row>\r\n            <Row\r\n              justify=\"center\"\r\n              gutter={[0, 16]}\r\n              style={{ marginTop: \"160px\" }}\r\n            >\r\n              <Col xs={24}>\r\n                <Row justify=\"center\">\r\n                  <Image src={AvatarMain} preview={false} alt=\"Main avatar\" />\r\n                </Row>\r\n              </Col>\r\n              <Col className=\"join-dim-btn\" xs={24}>\r\n                <Row justify=\"center\">\r\n                  <Button\r\n                    onClick={() => setJoinedSharedDim(!joinedSharedDim)}\r\n                    type=\"primary\"\r\n                    style={{ borderRadius: \"14px\" }}\r\n                  >\r\n                    <Row gutter={[6, 0]} wrap={false} align=\"middle\">\r\n                      <Col>\r\n                        <Row align=\"middle\">\r\n                          <GroupsSVG />\r\n                        </Row>\r\n                      </Col>\r\n                      <Col>\r\n                        {joinedSharedDim ? \"Leave Dimension\" : \"Join Dimension\"}\r\n                      </Col>\r\n                    </Row>\r\n                  </Button>\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n          </>\r\n        )}\r\n      </>\r\n    </aside>\r\n  );\r\n}\r\n","import { useContext, useEffect, useState, useCallback, useMemo } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { Avatar, Col, Row, Typography } from \"antd\";\r\nimport { createUI } from \"@netless/fastboard\";\r\nimport FileViewer from \"react-file-viewer\";\r\n\r\nimport userContext from \"context/userContext\";\r\nimport profileImg from \"assets/images/avatar.png\";\r\nimport {\r\n  MuteVoiceSVG,\r\n  VoiceSVG,\r\n  CloseSVG,\r\n  FullScreenImageSVG,\r\n} from \"assets/jsx-svg\";\r\nimport MeetingCallControls from \"../MeetingCallControls\";\r\n\r\nimport DragContext from \"../DragContext\";\r\nimport MeetNavigateSide from \"../MeetNavigateSide\";\r\n\r\nimport \"./style.css\";\r\nimport MeetAsaider from \"../MeetAsaider\";\r\n\r\nconst toAbsoluteUrl = (origin, pathname) =>\r\n  origin + process.env.PUBLIC_URL + pathname;\r\n\r\nconst getFileTypeFromMimeType = (mime) => {\r\n  if (mime.includes(\"pdf\")) {\r\n    return \"pdf\";\r\n  } else if (mime.includes(\"jpg\") || mime.includes(\"jpeg\")) {\r\n    return \"jpeg\";\r\n  } else if (mime.includes(\"png\")) {\r\n    return \"png\";\r\n  } else if (mime.includes(\"gif\")) {\r\n    return \"gif\";\r\n  } else if (mime.includes(\"officedocument.wordprocessingml.document\")) {\r\n    return \"docx\";\r\n  } else if (mime.includes(\"officedocument.spreadsheetml.sheet\")) {\r\n    return \"xlsx\";\r\n  } else if (mime.includes(\"csv\")) {\r\n    return \"csv\";\r\n  } else if (mime.includes(\"mp4\")) {\r\n    return \"mp4\";\r\n  } else if (mime.includes(\"webm\")) {\r\n    return \"webm\";\r\n  } else if (mime.includes(\"audio\") && mime.includes(\"mpeg\")) {\r\n    return \"mp3\";\r\n  } else {\r\n    return mime;\r\n  }\r\n};\r\n\r\nexport default function MeetingScreen({\r\n  screen,\r\n  setMainScreen,\r\n  publishDim,\r\n  isMain = false,\r\n  audioMuted,\r\n  soundMuted,\r\n  cameraEnabled,\r\n  toggleAudioMute,\r\n  toggleVideo,\r\n  toggleSoundMute,\r\n  unPublishScreen,\r\n  sharingScreen,\r\n  SystemMessage,\r\n  unPublishDim,\r\n  sharingDim,\r\n  isHost,\r\n  joinedSharedDim,\r\n  setJoinedSharedDim,\r\n  sharedDimId,\r\n  permissions,\r\n  setPermissions,\r\n  sharingFile,\r\n  setActiveBtn,\r\n  sharingWhiteboard,\r\n  activeBtn,\r\n  askedForCounter,\r\n  setHideSide,\r\n  messages,\r\n  sendMessage,\r\n  participants,\r\n  shareWhiteboard,\r\n  sharedFiles,\r\n  setSharedFiles,\r\n  sharingDimId,\r\n  publishScreen,\r\n  fastboard,\r\n  setAskedForCounter,\r\n  counterFormData,\r\n  counterSharedData,\r\n  localScreenTrack,\r\n  chatRoomId,\r\n  screenSize,\r\n  hideSide,\r\n  setDimensionFrames,\r\n  deskId,\r\n  iframeRef,\r\n  setIframeRef,\r\n  setCounterSharedData,\r\n}) {\r\n  const [unityCanvas, setUnityCanvas] = useState();\r\n  const [whiteboardContainer, setWhiteboardContainer] = useState();\r\n  const [controlSettingsShow, setControlSettingsShow] = useState(false);\r\n  const [mainFullScreen, setMainFullScreen] = useState(false);\r\n\r\n  const { user } = useContext(userContext);\r\n  const { dragData, setDragData } = useContext(DragContext);\r\n\r\n  const toggleFullScreen = () => {\r\n    if (!mainFullScreen) {\r\n      setHideSide(true);\r\n    }\r\n    setMainFullScreen((prev) => !prev);\r\n  };\r\n\r\n  const onDrop = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      const dimId = dragData.dimId;\r\n      const file = dragData.file;\r\n\r\n      if (dimId) {\r\n        if (sharingScreen) {\r\n          unPublishScreen();\r\n        } else if (sharingWhiteboard) {\r\n          SystemMessage.stopWhiteboard();\r\n        } else if (sharingFile) {\r\n          SystemMessage.stopFilePreview();\r\n        }\r\n\r\n        SystemMessage.shareDim(dimId);\r\n      } else if (file) {\r\n        if (sharingScreen) {\r\n          unPublishScreen();\r\n        } else if (sharingWhiteboard) {\r\n          SystemMessage.stopWhiteboard();\r\n        } else if (sharingDim) {\r\n          SystemMessage.stopDim();\r\n        }\r\n\r\n        SystemMessage.shareFile(file);\r\n      }\r\n\r\n      setDragData({\r\n        dragging: false,\r\n        dropText: \"\",\r\n        dimId: null,\r\n        file: null,\r\n      });\r\n    },\r\n    [\r\n      SystemMessage,\r\n      dragData,\r\n      setDragData,\r\n      sharingDim,\r\n      sharingFile,\r\n      sharingScreen,\r\n      sharingWhiteboard,\r\n      unPublishScreen,\r\n    ],\r\n  );\r\n\r\n  const meetingControlsProps = useMemo(\r\n    () => ({\r\n      audioMuted: audioMuted,\r\n      soundMuted: soundMuted,\r\n      cameraEnabled: cameraEnabled,\r\n      toggleAudioMute: toggleAudioMute,\r\n      toggleVideo: toggleVideo,\r\n      toggleSoundMute: toggleSoundMute,\r\n      unPublishScreen: unPublishScreen,\r\n      sharingScreen: sharingScreen,\r\n      SystemMessage: SystemMessage,\r\n      unPublishDim: unPublishDim,\r\n      sharingDim: sharingDim,\r\n      isHost: isHost,\r\n      joinedSharedDim: joinedSharedDim,\r\n      setJoinedSharedDim: setJoinedSharedDim,\r\n      sharedDimId: sharedDimId,\r\n      userFullName: screen.userFullName,\r\n      controlSettingsShow: controlSettingsShow,\r\n      setControlSettingsShow: setControlSettingsShow,\r\n      permissions: permissions,\r\n      setPermissions: setPermissions,\r\n      setActiveBtn: setActiveBtn,\r\n      sharingWhiteboard: sharingWhiteboard,\r\n      sharingFile: sharingFile,\r\n      showArrow:\r\n        sharingDim ||\r\n        joinedSharedDim ||\r\n        sharingWhiteboard ||\r\n        sharingFile ||\r\n        sharingScreen ||\r\n        screen.type === \"desk\",\r\n    }),\r\n    [\r\n      SystemMessage,\r\n      audioMuted,\r\n      cameraEnabled,\r\n      controlSettingsShow,\r\n      isHost,\r\n      joinedSharedDim,\r\n      permissions,\r\n      screen.type,\r\n      screen.userFullName,\r\n      setActiveBtn,\r\n      setJoinedSharedDim,\r\n      setPermissions,\r\n      sharedDimId,\r\n      sharingDim,\r\n      sharingFile,\r\n      sharingScreen,\r\n      sharingWhiteboard,\r\n      soundMuted,\r\n      toggleAudioMute,\r\n      toggleSoundMute,\r\n      toggleVideo,\r\n      unPublishDim,\r\n      unPublishScreen,\r\n    ],\r\n  );\r\n\r\n  const setFrames = (frames) => {\r\n    setDimensionFrames(frames);\r\n  };\r\n\r\n  const setCounterFromUnity = (counter) => {\r\n    console.log(\"/////////// setCounterFromUnity\", counter);\r\n\r\n    setCounterSharedData((prev) => {\r\n      if (prev.hasOwnProperty(counter.user.id)) {\r\n        prev[counter.user.id].userData = counter.user;\r\n\r\n        if (counter.type === 1) {\r\n          prev[counter.user.id].fullName = counter.data;\r\n        }\r\n        if (counter.type === 2) {\r\n          prev[counter.user.id].signature = counter.data;\r\n        }\r\n        if (counter.type === 3) {\r\n          prev[counter.user.id].files = [\r\n            ...prev[counter.user.id].files,\r\n            counter.data,\r\n          ];\r\n        }\r\n\r\n        if (counter.type === 4) {\r\n          prev[counter.user.id].customField = [\r\n            ...prev[counter.user.id].customField,\r\n            {\r\n              user: {\r\n                name: counter.customField,\r\n                value: counter.data,\r\n              },\r\n              hisGuests: null,\r\n            },\r\n          ];\r\n        }\r\n      } else {\r\n        prev[counter.user.id] = {\r\n          userData: counter.user,\r\n          fullName: counter.type === 1 ? counter.data : null,\r\n          signature: counter.type === 2 ? counter.data : null,\r\n          files: counter.type === 3 ? [counter.data] : [],\r\n          customField:\r\n            counter.type === 4\r\n              ? [\r\n                  {\r\n                    user: {\r\n                      name: counter.customField,\r\n                      value: counter.data,\r\n                    },\r\n                    hisGuests: null,\r\n                  },\r\n                ]\r\n              : [],\r\n        };\r\n      }\r\n\r\n      SystemMessage.hostShareCounterData({ ...prev });\r\n\r\n      return { ...prev };\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (iframeRef && screen.dimensionId && user.cGAccessToken) {\r\n      const configScript =\r\n        iframeRef.contentWindow.document.createElement(\"script\");\r\n\r\n      const style = iframeRef.contentWindow.document.createElement(\"link\");\r\n      style.href = \"/new-WebGL/style.css\";\r\n      style.rel = \"stylesheet\";\r\n\r\n      const div = iframeRef.contentWindow.document.createElement(\"div\");\r\n      div.innerHTML =\r\n        \"<div style='width: 100%; height: 100%' class='loading-holder'><video autoPlay muted loop style='width: 100%; height: 100%; object-fit: contain;' class='video-loading'><source src='/new-WebGL/dimension.mp4' type='video/mp4'/></video></div>\";\r\n      div.id = \"loading\";\r\n      div.className = \"loading\";\r\n\r\n      const listScript = [\r\n        \"hls.min.js\",\r\n        \"AgoraWebSDK/libs/agora-extension-virtual-background.js\",\r\n        \"AgoraWebSDK/libs/virtualbackground.js\",\r\n        \"AgoraWebSDK/libs/databuilder.js\",\r\n        \"AgoraWebSDK/libs/clientmanager.js\",\r\n        \"AgoraWebSDK/libs/wglwrapper.js\",\r\n        \"AgoraWebSDK/libs/audioeffects.js\",\r\n        \"AgoraWebSDK/libs/eventmanager.js\",\r\n        \"AgoraWebSDK/libs/engineglobals.js\",\r\n        \"AgoraWebSDK/libs/watermark.js\",\r\n        \"AgoraWebSDK/libs/customvideo.js\",\r\n        \"AgoraWebSDK/libs/agorachannel.js\",\r\n        \"AgoraWebSDK/libs/multichannel.js\",\r\n        \"AgoraWebSDK/libs/audiosystem.js\",\r\n        \"AgoraWebSDK/libs/testing.js\",\r\n        \"AgoraWebSDK/libs/agorautils.js\",\r\n        \"AgoraWebSDK/libs/audiomixing.js\",\r\n        \"AgoraWebSDK/agorartcenginev2.js\",\r\n        \"AgoraWebSDK/vendor/materialize.min.js\",\r\n        \"AgoraRTC_N.js\",\r\n        \"AgoraWebSDK/libs/spatial-audio-main.js\",\r\n        \"AgoraWebSDK/vendor/jquery.min.js\",\r\n        \"ReadyPlayerMeFrame.js\",\r\n      ];\r\n\r\n      listScript.forEach((ele) => {\r\n        const scriptName =\r\n          iframeRef.contentWindow.document.createElement(\"script\");\r\n        scriptName.src = toAbsoluteUrl(\r\n          iframeRef.contentWindow.top.location.origin,\r\n          `/new-WebGL/${ele}`,\r\n        );\r\n        iframeRef.contentWindow.document.head.append(scriptName);\r\n      });\r\n\r\n      configScript.innerHTML = `\r\n      var disableVoice = true;\r\n      var mainCanvas = document.getElementById(\"myCanvas\");\r\n      var mainContext = mainCanvas.getContext('2d');\r\n      var inMemCanvas = document.getElementById(\"inMem_Canvas\");\r\n      var inMemContext = inMemCanvas.getContext('2d');\r\n      var canvasWidth = mainCanvas.width;\r\n      var canvasHeight = mainCanvas.height;\r\n      var angle = 0;\r\n      var isRent = false;\r\n      var dimensionLink = \"https://vverse.co/metaverse?dimensionId={${\r\n        screen.dimensionId\r\n      }}&dimensionType={0}\";\r\n      var linkBase = \"https://vverse.co/\";\r\n      var dimensionId = ${screen.dimensionId};\r\n      var dimensionType = ${screen.dimensionId ? 0 : -1};\r\n      var accessToken = \"${user.cGAccessToken}\";\r\n      var apiBase = \"https://portal.chickchack.net:7005/api/v6/mobile-game/\";\r\n      var production = true;\r\n      var socketBase = \"https://portal.chickchack.net:7005/\";\r\n      var storageBase = \"https://chickchack.s3.eu-west-2.amazonaws.com\"\r\n      var isProduct = false;\r\n      var isDeskHost = ${isHost ? true : false};\r\n      var deskId = \"${deskId}\";\r\n\r\n      var buildUrl = '${toAbsoluteUrl(\r\n        iframeRef.contentWindow.top.location.origin,\r\n        \"/new-WebGL/Build\",\r\n      )}';\r\n      var loaderUrl = buildUrl + '/visit-dimension.loader.js';\r\n      var config = {\r\n        dataUrl: buildUrl + '/visit-dimension.data.br',\r\n        frameworkUrl: buildUrl + '/visit-dimension.framework.js.br',\r\n        codeUrl: buildUrl + '/visit-dimension.wasm.br',\r\n        streamingAssetsUrl: buildUrl + '/StreamingAssets',\r\n        companyName: 'PiPhi Technology',\r\n        productName: 'Visit Dimension',\r\n        productVersion: '1.0',\r\n      };\r\n\r\n      var container = document.querySelector(\"#unity-container\");\r\n      var canvas = document.querySelector(\"#unity-canvas\");\r\n      var loading = document.querySelector(\"#loading\");\r\n      var platform = 2; //1 mobile, 2 windows, 4 mac, 8 linux\r\n      loading.style.display = \"\";\r\n\r\n      if (/iPhone|iPad|iPod|Android/i.test(navigator.userAgent)) {\r\n        config.devicePixelRatio = 1;\r\n        platform = 1;\r\n      }\r\n\r\n      if (navigator.platform.toUpperCase().indexOf('MAC') >= 0) {\r\n        platform = 4;\r\n      }\r\n\r\n      window.onmessage = function(e) {\r\n        try {\r\n          if (e.data === \"SetFullscreen\") {\r\n            window.unityInstance.SetFullscreen(true);\r\n          }\r\n        } catch(ignored) {}\r\n      };\r\n      `;\r\n\r\n      const createUnityInstance = () => {\r\n        iframeRef.contentWindow\r\n          .createUnityInstance(\r\n            iframeRef.contentWindow.canvas,\r\n            iframeRef.contentWindow.config,\r\n            (progress) => {\r\n              console.log(\"progress\", progress);\r\n            },\r\n          )\r\n          .then((unityInstance) => {\r\n            unityInstance.SendMessage(\r\n              \"BG_Scripts/Constatnts\",\r\n              \"SetPlatform\",\r\n              iframeRef.contentWindow.platform,\r\n            );\r\n\r\n            iframeRef.contentWindow.onResponseInputRecived = (counter) => {\r\n              console.log(\r\n                \"/////////////////////////////// call from unity counter\",\r\n                counter,\r\n              );\r\n              setCounterFromUnity(counter);\r\n            };\r\n\r\n            iframeRef.contentWindow.updateDimensionFrames = (frames) => {\r\n              setFrames(frames);\r\n            };\r\n\r\n            // iframeRef.contentWindow.loading.style.display = \"none\";\r\n            iframeRef.contentWindow.unityInstance = unityInstance;\r\n            iframeRef.contentWindow.web3 = window.web3;\r\n            iframeRef.contentWindow.ethereum = window.ethereum;\r\n          })\r\n          .catch((message) => {\r\n            alert(message);\r\n          });\r\n      };\r\n\r\n      const loaderScript =\r\n        iframeRef.contentWindow.document.createElement(\"script\");\r\n      loaderScript.src =\r\n        toAbsoluteUrl(window.location.origin, \"/new-WebGL/Build\") +\r\n        \"/visit-dimension.loader.js\";\r\n\r\n      iframeRef.contentWindow.onload = () => {\r\n        iframeRef.contentWindow.lat = 25.0418278;\r\n        iframeRef.contentWindow.lon = 55.2513757;\r\n\r\n        createUnityInstance();\r\n      };\r\n\r\n      iframeRef.contentWindow.document.body.append(div);\r\n      // iframeRef.contentWindow.document.body.append(hls);\r\n      iframeRef.contentWindow.document.body.append(configScript);\r\n      iframeRef.contentWindow.document.head.append(loaderScript);\r\n      iframeRef.contentWindow.document.body.append(style);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [screen, iframeRef, user.cGAccessToken]);\r\n\r\n  useEffect(() => {\r\n    if (screen.hasVideo) {\r\n      screen.playTrack();\r\n    } else if (sharingWhiteboard && screen.room && whiteboardContainer) {\r\n      createUI(screen.room, whiteboardContainer);\r\n    }\r\n  }, [sharingWhiteboard, screen, whiteboardContainer]);\r\n\r\n  useEffect(() => {\r\n    if (sharingDim && unityCanvas && typeof publishDim === \"function\") {\r\n      publishDim(unityCanvas);\r\n    }\r\n  }, [unityCanvas, publishDim, sharingDim]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      sharingDim ||\r\n      joinedSharedDim ||\r\n      sharingWhiteboard ||\r\n      sharingFile ||\r\n      sharingScreen ||\r\n      screen.type === \"desk\"\r\n    ) {\r\n      setControlSettingsShow(true);\r\n    }\r\n  }, [\r\n    joinedSharedDim,\r\n    sharingDim,\r\n    sharingWhiteboard,\r\n    sharingFile,\r\n    sharingScreen,\r\n    screen.type,\r\n  ]);\r\n\r\n  if (!screen) {\r\n    return null;\r\n  }\r\n\r\n  if (screen.type === \"dim\") {\r\n    return (\r\n      <section className={mainFullScreen ? \"main-screen-full\" : \"main-screen\"}>\r\n        {mainFullScreen ? (\r\n          <Row wrap={false} className=\"h-100\">\r\n            <Col {...(hideSide ? null : { xs: 24, xl: hideSide ? 2 : 8 })}>\r\n              <Row wrap={false} className=\"h-100\">\r\n                <Col>\r\n                  <div className=\"full-screen-asider-navigate\">\r\n                    <MeetNavigateSide\r\n                      isHost={isHost}\r\n                      activeBtn={activeBtn}\r\n                      setActiveBtn={setActiveBtn}\r\n                      setHideSide={setHideSide}\r\n                      sharedDimId={sharedDimId}\r\n                      askedForCounter={askedForCounter}\r\n                    />\r\n                  </div>\r\n                </Col>\r\n\r\n                {!hideSide && (screenSize.xl || screenSize.xxl) && (\r\n                  <Col flex={1} className=\"virtual-support-aside-hide h-100\">\r\n                    <div\r\n                      style={{ padding: \"24px 1rem\", background: \"#f2f2f7e6\" }}\r\n                      className=\"h-100\"\r\n                    >\r\n                      <MeetAsaider\r\n                        isHost={isHost}\r\n                        chatLoading={!chatRoomId}\r\n                        messages={messages}\r\n                        sendMessage={sendMessage}\r\n                        participants={participants}\r\n                        activeBtn={activeBtn}\r\n                        setActiveBtn={setActiveBtn}\r\n                        SystemMessage={SystemMessage}\r\n                        shareWhiteboard={shareWhiteboard}\r\n                        permissions={permissions}\r\n                        sharedFiles={sharedFiles}\r\n                        setSharedFiles={setSharedFiles}\r\n                        sharedDimId={sharedDimId}\r\n                        sharingDimId={sharingDimId}\r\n                        unPublishScreen={unPublishScreen}\r\n                        publishScreen={publishScreen}\r\n                        sharingScreen={localScreenTrack?.enabled}\r\n                        sharingDim={!!sharingDimId}\r\n                        sharingFile={!!sharingFile}\r\n                        sharingWhiteboard={!!fastboard}\r\n                        setHideSide={setHideSide}\r\n                        fastboard={fastboard}\r\n                        joinedSharedDim={joinedSharedDim}\r\n                        setJoinedSharedDim={setJoinedSharedDim}\r\n                        setAskedForCounter={setAskedForCounter}\r\n                        counterFormData={counterFormData}\r\n                        counterSharedData={counterSharedData}\r\n                        iframeRef={iframeRef}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                )}\r\n              </Row>\r\n            </Col>\r\n            <Col flex={1}>\r\n              <iframe\r\n                style={{\r\n                  width: \"100%\",\r\n                  height: \"100%\",\r\n                  border: \"none\",\r\n                }}\r\n                title=\"Explore Metaverse\"\r\n                ref={setIframeRef}\r\n              >\r\n                {iframeRef?.contentWindow?.document?.body &&\r\n                  createPortal(\r\n                    <>\r\n                      <div id=\"unity-container\">\r\n                        <div id=\"canvas-wrap\">\r\n                          <div id=\"rpm-container\">\r\n                            <iframe\r\n                              title=\"rpm-frame\"\r\n                              id=\"rpm-frame\"\r\n                              className=\"rpm-frame\"\r\n                              allow=\"camera *; microphone *\"\r\n                            ></iframe>\r\n                            <button id=\"rpm-hide-button\" onClick=\"hideRpm()\">\r\n                              Hide\r\n                            </button>\r\n                          </div>\r\n                          <canvas\r\n                            ref={setUnityCanvas}\r\n                            id=\"unity-canvas\"\r\n                            style={{\r\n                              width: \"100%\",\r\n                              height: \"100%\",\r\n                            }}\r\n                          ></canvas>\r\n                        </div>\r\n                      </div>\r\n                      <canvas\r\n                        id=\"inMem_Canvas\"\r\n                        height=\"450\"\r\n                        width=\"450\"\r\n                        style={{ display: \"none\" }}\r\n                      ></canvas>\r\n                      <canvas\r\n                        id=\"myCanvas\"\r\n                        height=\"450\"\r\n                        width=\"450\"\r\n                        style={{ display: \"none\" }}\r\n                      ></canvas>\r\n                    </>,\r\n                    iframeRef?.contentWindow?.document?.body,\r\n                  )}\r\n              </iframe>\r\n            </Col>\r\n          </Row>\r\n        ) : (\r\n          <iframe\r\n            style={{\r\n              width: \"100%\",\r\n              height: \"100%\",\r\n              border: \"none\",\r\n            }}\r\n            title=\"Explore Metaverse\"\r\n            ref={setIframeRef}\r\n          >\r\n            {iframeRef?.contentWindow?.document?.body &&\r\n              createPortal(\r\n                <>\r\n                  <div id=\"unity-container\">\r\n                    <div id=\"canvas-wrap\">\r\n                      <div id=\"rpm-container\">\r\n                        <iframe\r\n                          title=\"rpm-frame\"\r\n                          id=\"rpm-frame\"\r\n                          className=\"rpm-frame\"\r\n                          allow=\"camera *; microphone *\"\r\n                        ></iframe>\r\n                        <button id=\"rpm-hide-button\" onClick=\"hideRpm()\">\r\n                          Hide\r\n                        </button>\r\n                      </div>\r\n                      <canvas\r\n                        ref={setUnityCanvas}\r\n                        id=\"unity-canvas\"\r\n                        style={{\r\n                          width: \"100%\",\r\n                          height: \"100%\",\r\n                        }}\r\n                      ></canvas>\r\n                    </div>\r\n                  </div>\r\n                  <canvas\r\n                    id=\"inMem_Canvas\"\r\n                    height=\"450\"\r\n                    width=\"450\"\r\n                    style={{ display: \"none\" }}\r\n                  ></canvas>\r\n                  <canvas\r\n                    id=\"myCanvas\"\r\n                    height=\"450\"\r\n                    width=\"450\"\r\n                    style={{ display: \"none\" }}\r\n                  ></canvas>\r\n                </>,\r\n                iframeRef?.contentWindow?.document?.body,\r\n              )}\r\n          </iframe>\r\n        )}\r\n\r\n        {dragData.dragging && (\r\n          <div\r\n            onDragOver={(e) => e.preventDefault()}\r\n            onDrop={onDrop}\r\n            className=\"dragover-overlay\"\r\n          >\r\n            {dragData.dropText}\r\n          </div>\r\n        )}\r\n\r\n        <div\r\n          className=\"whiteboard-fullscreen clickable\"\r\n          onClick={toggleFullScreen}\r\n        >\r\n          <FullScreenImageSVG\r\n            color=\"#fff\"\r\n            style={{ width: \"12px\", height: \"12px\" }}\r\n            className=\"close-whiteboard\"\r\n          />\r\n        </div>\r\n\r\n        <div\r\n          className=\"whiteboard-close clickable\"\r\n          onClick={() =>\r\n            isHost\r\n              ? SystemMessage.stopDim()\r\n              : setJoinedSharedDim(!joinedSharedDim)\r\n          }\r\n        >\r\n          <CloseSVG\r\n            color=\"#fff\"\r\n            style={{ width: \"12px\", height: \"12px\" }}\r\n            className=\"close-whiteboard\"\r\n          />\r\n        </div>\r\n\r\n        <div\r\n          className={`main-screen-controls ${\r\n            controlSettingsShow && \"main-screen-controls-hide\"\r\n          }`}\r\n        >\r\n          <MeetingCallControls {...meetingControlsProps} />\r\n        </div>\r\n      </section>\r\n    );\r\n  } else if (screen.type === \"desk\") {\r\n    return (\r\n      <section\r\n        className={mainFullScreen ? \"main-screen-full\" : \"main-screen\"}\r\n        style={{ minHeight: \"100%\" }}\r\n      >\r\n        {mainFullScreen ? (\r\n          <Row wrap={false} className=\"h-100\">\r\n            <Col {...(hideSide ? null : { xs: 24, xl: hideSide ? 2 : 8 })}>\r\n              <Row wrap={false} className=\"h-100\">\r\n                <Col>\r\n                  <div className=\"full-screen-asider-navigate\">\r\n                    <MeetNavigateSide\r\n                      isHost={isHost}\r\n                      activeBtn={activeBtn}\r\n                      setActiveBtn={setActiveBtn}\r\n                      setHideSide={setHideSide}\r\n                      sharedDimId={sharedDimId}\r\n                      askedForCounter={askedForCounter}\r\n                    />\r\n                  </div>\r\n                </Col>\r\n\r\n                {!hideSide && (screenSize.xl || screenSize.xxl) && (\r\n                  <Col flex={1} className=\"virtual-support-aside-hide h-100\">\r\n                    <div\r\n                      style={{ padding: \"24px 1rem\", background: \"#f2f2f7e6\" }}\r\n                      className=\"h-100\"\r\n                    >\r\n                      <MeetAsaider\r\n                        isHost={isHost}\r\n                        chatLoading={!chatRoomId}\r\n                        messages={messages}\r\n                        sendMessage={sendMessage}\r\n                        participants={participants}\r\n                        activeBtn={activeBtn}\r\n                        setActiveBtn={setActiveBtn}\r\n                        SystemMessage={SystemMessage}\r\n                        shareWhiteboard={shareWhiteboard}\r\n                        permissions={permissions}\r\n                        sharedFiles={sharedFiles}\r\n                        setSharedFiles={setSharedFiles}\r\n                        sharedDimId={sharedDimId}\r\n                        sharingDimId={sharingDimId}\r\n                        unPublishScreen={unPublishScreen}\r\n                        publishScreen={publishScreen}\r\n                        sharingScreen={localScreenTrack?.enabled}\r\n                        sharingDim={!!sharingDimId}\r\n                        sharingFile={!!sharingFile}\r\n                        sharingWhiteboard={!!fastboard}\r\n                        setHideSide={setHideSide}\r\n                        fastboard={fastboard}\r\n                        joinedSharedDim={joinedSharedDim}\r\n                        setJoinedSharedDim={setJoinedSharedDim}\r\n                        setAskedForCounter={setAskedForCounter}\r\n                        counterFormData={counterFormData}\r\n                        counterSharedData={counterSharedData}\r\n                        iframeRef={iframeRef}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                )}\r\n              </Row>\r\n            </Col>\r\n            <Col flex={1}>\r\n              <iframe\r\n                style={{\r\n                  width: \"100%\",\r\n                  height: \"100%\",\r\n                  border: \"none\",\r\n                }}\r\n                title=\"Explore Desk\"\r\n                ref={setIframeRef}\r\n              >\r\n                {iframeRef?.contentWindow?.document?.body &&\r\n                  createPortal(\r\n                    <>\r\n                      <div id=\"unity-container\">\r\n                        <div id=\"canvas-wrap\">\r\n                          <div id=\"rpm-container\">\r\n                            <iframe\r\n                              title=\"desk\"\r\n                              id=\"rpm-frame\"\r\n                              class=\"rpm-frame\"\r\n                              allow=\"camera *; microphone *\"\r\n                            ></iframe>\r\n                            <button id=\"rpm-hide-button\" onclick=\"hideRpm()\">\r\n                              Hide\r\n                            </button>\r\n                          </div>\r\n                          <canvas\r\n                            id=\"unity-canvas\"\r\n                            style={{\r\n                              width: \"100%\",\r\n                              height: \"100%\",\r\n                            }}\r\n                          ></canvas>\r\n                        </div>\r\n                      </div>\r\n                      <canvas\r\n                        id=\"inMem_Canvas\"\r\n                        height=\"450\"\r\n                        width=\"450\"\r\n                        style={{ display: \"none\" }}\r\n                      ></canvas>\r\n                      <canvas\r\n                        id=\"myCanvas\"\r\n                        height=\"450\"\r\n                        width=\"450\"\r\n                        style={{ display: \"none\" }}\r\n                      ></canvas>\r\n                    </>,\r\n                    iframeRef?.contentWindow?.document?.body,\r\n                  )}\r\n              </iframe>\r\n            </Col>\r\n          </Row>\r\n        ) : (\r\n          <iframe\r\n            style={{\r\n              width: \"100%\",\r\n              height: \"100%\",\r\n              border: \"none\",\r\n            }}\r\n            title=\"Explore Desk\"\r\n            ref={setIframeRef}\r\n          >\r\n            {iframeRef?.contentWindow?.document?.body &&\r\n              createPortal(\r\n                <>\r\n                  <div id=\"unity-container\">\r\n                    <div id=\"canvas-wrap\">\r\n                      <div id=\"rpm-container\">\r\n                        <iframe\r\n                          title=\"desk\"\r\n                          id=\"rpm-frame\"\r\n                          class=\"rpm-frame\"\r\n                          allow=\"camera *; microphone *\"\r\n                        ></iframe>\r\n                        <button id=\"rpm-hide-button\" onclick=\"hideRpm()\">\r\n                          Hide\r\n                        </button>\r\n                      </div>\r\n                      <canvas\r\n                        id=\"unity-canvas\"\r\n                        style={{\r\n                          width: \"100%\",\r\n                          height: \"100%\",\r\n                        }}\r\n                      ></canvas>\r\n                    </div>\r\n                  </div>\r\n                  <canvas\r\n                    id=\"inMem_Canvas\"\r\n                    height=\"450\"\r\n                    width=\"450\"\r\n                    style={{ display: \"none\" }}\r\n                  ></canvas>\r\n                  <canvas\r\n                    id=\"myCanvas\"\r\n                    height=\"450\"\r\n                    width=\"450\"\r\n                    style={{ display: \"none\" }}\r\n                  ></canvas>\r\n                </>,\r\n                iframeRef?.contentWindow?.document?.body,\r\n              )}\r\n          </iframe>\r\n        )}\r\n\r\n        <div\r\n          className=\"whiteboard-fullscreen clickable\"\r\n          onClick={toggleFullScreen}\r\n        >\r\n          <FullScreenImageSVG\r\n            color=\"#fff\"\r\n            style={{ width: \"12px\", height: \"12px\" }}\r\n            className=\"close-whiteboard\"\r\n          />\r\n        </div>\r\n\r\n        {/* <div\r\n          className=\"whiteboard-close clickable\"\r\n          onClick={() =>\r\n            isHost\r\n              ? SystemMessage.stopDim()\r\n              : setJoinedSharedDim(!joinedSharedDim)\r\n          }\r\n        >\r\n          <CloseSVG\r\n            color=\"#fff\"\r\n            style={{ width: \"12px\", height: \"12px\" }}\r\n            className=\"close-whiteboard\"\r\n          />\r\n        </div> */}\r\n\r\n        <div\r\n          className={`main-screen-controls ${\r\n            controlSettingsShow && \"main-screen-controls-hide\"\r\n          }`}\r\n        >\r\n          <MeetingCallControls {...meetingControlsProps} />\r\n        </div>\r\n      </section>\r\n    );\r\n  } else if (screen.type === \"file\") {\r\n    return (\r\n      <Row\r\n        className={\r\n          mainFullScreen ? \"main-screen-full\" : \"main-screen file-screen\"\r\n        }\r\n      >\r\n        {dragData.dragging && (\r\n          <div\r\n            onDragOver={(e) => e.preventDefault()}\r\n            onDrop={onDrop}\r\n            className=\"dragover-overlay\"\r\n          >\r\n            {dragData.dropText}\r\n          </div>\r\n        )}\r\n\r\n        <div\r\n          className=\"whiteboard-fullscreen clickable\"\r\n          onClick={toggleFullScreen}\r\n        >\r\n          <FullScreenImageSVG\r\n            color=\"#fff\"\r\n            style={{ width: \"12px\", height: \"12px\" }}\r\n            className=\"close-whiteboard\"\r\n          />\r\n        </div>\r\n\r\n        {isHost && (\r\n          <div\r\n            className=\"whiteboard-close clickable\"\r\n            onClick={SystemMessage.stopFilePreview}\r\n          >\r\n            <CloseSVG\r\n              color=\"#fff\"\r\n              style={{ width: \"12px\", height: \"12px\" }}\r\n              className=\"close-whiteboard\"\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {mainFullScreen ? (\r\n          <Row wrap={false} className=\"w-100 h-100\">\r\n            <Col {...(hideSide ? null : { xs: 24, xl: hideSide ? 2 : 8 })}>\r\n              <Row wrap={false} className=\"h-100\">\r\n                <Col>\r\n                  <div className=\"full-screen-asider-navigate\">\r\n                    <MeetNavigateSide\r\n                      isHost={isHost}\r\n                      activeBtn={activeBtn}\r\n                      setActiveBtn={setActiveBtn}\r\n                      setHideSide={setHideSide}\r\n                      sharedDimId={sharedDimId}\r\n                      askedForCounter={askedForCounter}\r\n                    />\r\n                  </div>\r\n                </Col>\r\n\r\n                {!hideSide && (screenSize.xl || screenSize.xxl) && (\r\n                  <Col flex={1} className=\"virtual-support-aside-hide h-100\">\r\n                    <div\r\n                      style={{ padding: \"24px 1rem\", background: \"#f2f2f7e6\" }}\r\n                      className=\"h-100\"\r\n                    >\r\n                      <MeetAsaider\r\n                        isHost={isHost}\r\n                        chatLoading={!chatRoomId}\r\n                        messages={messages}\r\n                        sendMessage={sendMessage}\r\n                        participants={participants}\r\n                        activeBtn={activeBtn}\r\n                        setActiveBtn={setActiveBtn}\r\n                        SystemMessage={SystemMessage}\r\n                        shareWhiteboard={shareWhiteboard}\r\n                        permissions={permissions}\r\n                        sharedFiles={sharedFiles}\r\n                        setSharedFiles={setSharedFiles}\r\n                        sharedDimId={sharedDimId}\r\n                        sharingDimId={sharingDimId}\r\n                        unPublishScreen={unPublishScreen}\r\n                        publishScreen={publishScreen}\r\n                        sharingScreen={localScreenTrack?.enabled}\r\n                        sharingDim={!!sharingDimId}\r\n                        sharingFile={!!sharingFile}\r\n                        sharingWhiteboard={!!fastboard}\r\n                        setHideSide={setHideSide}\r\n                        fastboard={fastboard}\r\n                        joinedSharedDim={joinedSharedDim}\r\n                        setJoinedSharedDim={setJoinedSharedDim}\r\n                        setAskedForCounter={setAskedForCounter}\r\n                        counterFormData={counterFormData}\r\n                        counterSharedData={counterSharedData}\r\n                        iframeRef={iframeRef}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                )}\r\n              </Row>\r\n            </Col>\r\n            <Col flex={1}>\r\n              <div className=\"file-canvas\" style={{ background: \"#fff\" }}>\r\n                {screen.file.isGoogleDrive ? (\r\n                  <iframe\r\n                    title=\"Google Drive Embed\"\r\n                    style={{ width: \"100%\", height: \"100%\" }}\r\n                    src={screen.file.embedUrl}\r\n                  />\r\n                ) : (\r\n                  <FileViewer\r\n                    fileType={getFileTypeFromMimeType(screen.file.type)}\r\n                    filePath={screen.file.url}\r\n                    errorComponent={<h1>Error previewing the file</h1>}\r\n                    onError={(err) => console.log(\"FileViewer error:\", err)}\r\n                  />\r\n                )}\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        ) : (\r\n          <div className=\"file-canvas\">\r\n            {screen.file.isGoogleDrive ? (\r\n              <iframe\r\n                title=\"Google Drive Embed\"\r\n                style={{ width: \"100%\", height: \"100%\" }}\r\n                src={screen.file.embedUrl}\r\n              />\r\n            ) : (\r\n              <FileViewer\r\n                fileType={getFileTypeFromMimeType(screen.file.type)}\r\n                filePath={screen.file.url}\r\n                errorComponent={<h1>Error previewing the file</h1>}\r\n                onError={(err) => console.log(\"FileViewer error:\", err)}\r\n              />\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        <div\r\n          className={`main-screen-controls ${\r\n            controlSettingsShow && \"main-screen-controls-hide\"\r\n          }`}\r\n        >\r\n          <MeetingCallControls {...meetingControlsProps} />\r\n        </div>\r\n      </Row>\r\n    );\r\n  } else if (screen.type === \"whiteboard\") {\r\n    return (\r\n      <Row\r\n        className={\r\n          mainFullScreen ? \"main-screen-full\" : \"main-screen whiteboard-screen\"\r\n        }\r\n      >\r\n        {mainFullScreen ? (\r\n          <Row wrap={false} className=\"w-100 h-100\">\r\n            <Col {...(hideSide ? null : { xs: 24, xl: hideSide ? 2 : 8 })}>\r\n              <Row wrap={false} className=\"h-100\">\r\n                <Col>\r\n                  <div className=\"full-screen-asider-navigate\">\r\n                    <MeetNavigateSide\r\n                      isHost={isHost}\r\n                      activeBtn={activeBtn}\r\n                      setActiveBtn={setActiveBtn}\r\n                      setHideSide={setHideSide}\r\n                      sharedDimId={sharedDimId}\r\n                      askedForCounter={askedForCounter}\r\n                    />\r\n                  </div>\r\n                </Col>\r\n\r\n                {!hideSide && (screenSize.xl || screenSize.xxl) && (\r\n                  <Col flex={1} className=\"virtual-support-aside-hide h-100\">\r\n                    <div\r\n                      style={{ padding: \"24px 1rem\", background: \"#f2f2f7e6\" }}\r\n                      className=\"h-100\"\r\n                    >\r\n                      <MeetAsaider\r\n                        isHost={isHost}\r\n                        chatLoading={!chatRoomId}\r\n                        messages={messages}\r\n                        sendMessage={sendMessage}\r\n                        participants={participants}\r\n                        activeBtn={activeBtn}\r\n                        setActiveBtn={setActiveBtn}\r\n                        SystemMessage={SystemMessage}\r\n                        shareWhiteboard={shareWhiteboard}\r\n                        permissions={permissions}\r\n                        sharedFiles={sharedFiles}\r\n                        setSharedFiles={setSharedFiles}\r\n                        sharedDimId={sharedDimId}\r\n                        sharingDimId={sharingDimId}\r\n                        unPublishScreen={unPublishScreen}\r\n                        publishScreen={publishScreen}\r\n                        sharingScreen={localScreenTrack?.enabled}\r\n                        sharingDim={!!sharingDimId}\r\n                        sharingFile={!!sharingFile}\r\n                        sharingWhiteboard={!!fastboard}\r\n                        setHideSide={setHideSide}\r\n                        fastboard={fastboard}\r\n                        joinedSharedDim={joinedSharedDim}\r\n                        setJoinedSharedDim={setJoinedSharedDim}\r\n                        setAskedForCounter={setAskedForCounter}\r\n                        counterFormData={counterFormData}\r\n                        counterSharedData={counterSharedData}\r\n                        iframeRef={iframeRef}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                )}\r\n              </Row>\r\n            </Col>\r\n            <Col flex={1}>\r\n              <div\r\n                ref={setWhiteboardContainer}\r\n                className=\"whiteboard-canvas\"\r\n              ></div>\r\n            </Col>\r\n          </Row>\r\n        ) : (\r\n          <div ref={setWhiteboardContainer} className=\"whiteboard-canvas\"></div>\r\n        )}\r\n\r\n        {dragData.dragging && (\r\n          <div\r\n            onDragOver={(e) => e.preventDefault()}\r\n            onDrop={onDrop}\r\n            className=\"dragover-overlay\"\r\n          >\r\n            {dragData.dropText}\r\n          </div>\r\n        )}\r\n\r\n        <div\r\n          className=\"whiteboard-fullscreen clickable\"\r\n          onClick={toggleFullScreen}\r\n        >\r\n          <FullScreenImageSVG\r\n            color=\"#fff\"\r\n            style={{ width: \"12px\", height: \"12px\" }}\r\n            className=\"close-whiteboard\"\r\n          />\r\n        </div>\r\n\r\n        {isHost && (\r\n          <div\r\n            className=\"whiteboard-close clickable\"\r\n            onClick={SystemMessage.stopWhiteboard}\r\n          >\r\n            <CloseSVG\r\n              color=\"#fff\"\r\n              style={{ width: \"12px\", height: \"12px\" }}\r\n              className=\"close-whiteboard\"\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        <div\r\n          className={`main-screen-controls ${\r\n            controlSettingsShow && \"main-screen-controls-hide\"\r\n          }`}\r\n        >\r\n          <MeetingCallControls {...meetingControlsProps} />\r\n        </div>\r\n      </Row>\r\n    );\r\n  } else if (isMain) {\r\n    return (\r\n      <Row className={\"main-screen\"}>\r\n        {screen.hasVideo && (\r\n          <div id={screen.screenId} className=\"video-player\"></div>\r\n        )}\r\n\r\n        {sharingScreen && isHost && (\r\n          <div\r\n            className=\"whiteboard-close clickable\"\r\n            onClick={() => unPublishScreen()}\r\n          >\r\n            <CloseSVG\r\n              color=\"#fff\"\r\n              style={{ width: \"12px\", height: \"12px\" }}\r\n              className=\"close-whiteboard\"\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {dragData.dragging && (\r\n          <div\r\n            onDragOver={(e) => e.preventDefault()}\r\n            onDrop={onDrop}\r\n            className=\"dragover-overlay\"\r\n          >\r\n            {dragData.dropText}\r\n          </div>\r\n        )}\r\n\r\n        <div\r\n          className={`main-screen-controls ${\r\n            controlSettingsShow && \"main-screen-controls-hide\"\r\n          }`}\r\n          style={{\r\n            bottom: sharingScreen && controlSettingsShow ? \"-55px\" : \"0px\",\r\n            background: sharingScreen ? \"inital\" : \"none\",\r\n            boxShadow: sharingScreen ? \"inital\" : \"none\",\r\n            backdropFilter: sharingScreen ? \"inital\" : \"none\",\r\n          }}\r\n        >\r\n          <MeetingCallControls {...meetingControlsProps} />\r\n        </div>\r\n\r\n        {screen.type === \"rtc\" && (\r\n          <span className=\"friend-screen-sound\">\r\n            {!screen.hasAudio ? (\r\n              <MuteVoiceSVG\r\n                color=\"#fff\"\r\n                style={{ width: \"12px\", height: \"12px\" }}\r\n              />\r\n            ) : (\r\n              <VoiceSVG\r\n                color=\"#fff\"\r\n                style={{ width: \"12px\", height: \"12px\" }}\r\n              />\r\n            )}\r\n          </span>\r\n        )}\r\n\r\n        {!screen.hasVideo && (\r\n          <div className=\"main-screen-img\">\r\n            <Avatar\r\n              size={140}\r\n              src={screen.userProfileImage || profileImg}\r\n              style={{ objectFit: \"cover\" }}\r\n            />\r\n          </div>\r\n        )}\r\n      </Row>\r\n    );\r\n  } else {\r\n    return (\r\n      <Row\r\n        className=\"friend-screen\"\r\n        onClick={() => setMainScreen(screen.screenId)}\r\n      >\r\n        {screen.hasVideo && (\r\n          <div id={screen.screenId} className=\"video-player\"></div>\r\n        )}\r\n\r\n        <Row className=\"friend-screen-status\" align=\"middle\">\r\n          <Typography.Text className=\"fz-12 wc\" ellipsis>\r\n            {screen.userFullName}\r\n          </Typography.Text>\r\n        </Row>\r\n\r\n        {screen.type === \"rtc\" && (\r\n          <span className=\"friend-screen-sound\">\r\n            {!screen.hasAudio ? (\r\n              <MuteVoiceSVG\r\n                color=\"#fff\"\r\n                style={{ width: \"12px\", height: \"12px\" }}\r\n              />\r\n            ) : (\r\n              <VoiceSVG\r\n                color=\"#fff\"\r\n                style={{ width: \"12px\", height: \"12px\" }}\r\n              />\r\n            )}\r\n          </span>\r\n        )}\r\n\r\n        {!screen.hasVideo && (\r\n          <div className=\"friend-screen-img\">\r\n            <Avatar\r\n              size={50}\r\n              src={screen.userProfileImage || profileImg}\r\n              style={{ objectFit: \"cover\" }}\r\n            />\r\n          </div>\r\n        )}\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n","import axios from \"axios\";\r\nimport { API_BASE } from \"./config\";\r\n\r\nconst SERVICE_BASE = API_BASE + \"/common/\";\r\n\r\nconst SearchUser = (query) => axios.get(SERVICE_BASE + \"search-user?\" + query);\r\n\r\nconst ParticipantsService = { SearchUser };\r\n\r\nexport default ParticipantsService;\r\n","import { useEffect, useState } from \"react\";\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  Checkbox,\r\n  Col,\r\n  ConfigProvider,\r\n  Form,\r\n  Input,\r\n  notification,\r\n  Row,\r\n  Typography,\r\n} from \"antd\";\r\nimport { LoadingOutlined } from \"@ant-design/icons\";\r\nimport { axiosCatch } from \"utils/axiosUtils\";\r\nimport ParticipantsService from \"services/participants.service\";\r\n\r\nimport \"./styles.css\";\r\n\r\nexport default function InviteFriends({ setInviteParticipantsPopup }) {\r\n  const [form] = Form.useForm();\r\n  const [nameSearch, setNameSearch] = useState(\"\");\r\n  const [users, setUsers] = useState([]);\r\n  const [selectedUsers, setSelectedUsers] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleSearch = async (name) => {\r\n    try {\r\n      setLoading(true);\r\n      if (name.length) {\r\n        const res = await ParticipantsService.SearchUser(\r\n          new URLSearchParams({\r\n            name,\r\n            limit: 20,\r\n            offset: 0,\r\n          }),\r\n        );\r\n        setUsers(res.data.data);\r\n      } else {\r\n        setUsers([]);\r\n      }\r\n    } catch (err) {\r\n      axiosCatch(err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const timeOutId = setTimeout(() => handleSearch(nameSearch), 500);\r\n    return () => clearTimeout(timeOutId);\r\n  }, [nameSearch]);\r\n\r\n  const onFinish = (values) => {\r\n    if (values.users.length) {\r\n      console.log(values.users);\r\n      notification.success({ message: \"Invitation send Succesfully ✔\" });\r\n      form.setFieldValue(\"users\", undefined);\r\n      setInviteParticipantsPopup(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form form={form} onFinish={onFinish} className=\"invite-friends\">\r\n      <Form.Item name=\"users\" noStyle>\r\n        <Checkbox.Group onChange={(e) => setSelectedUsers(e)}>\r\n          <ConfigProvider\r\n            theme={{\r\n              token: {\r\n                colorPrimaryText: \"#fff\",\r\n                borderRadius: \"14px\",\r\n                colorBorder: \"#fff\",\r\n                colorText: \"#fff\",\r\n                colorTextPlaceholder: \"#fff\",\r\n              },\r\n              components: {\r\n                Checkbox: {\r\n                  borderRadiusSM: \"4px\",\r\n                  colorBgContainer: \"transparent\",\r\n                  colorPrimary: \"#fff\",\r\n                  colorWhite: \"#000\",\r\n                  colorPrimaryHover: \"#fff\",\r\n                  colorPrimaryBorder: \"#eee\",\r\n                },\r\n                Input: {\r\n                  colorPrimaryHover: \"#fff\",\r\n                },\r\n              },\r\n            }}\r\n          >\r\n            <Row gutter={[0, 10]}>\r\n              <Col xs={24}>\r\n                <Row justify=\"center\">\r\n                  <Typography.Text className=\"fz-16 fw-600\">\r\n                    Invite Friends\r\n                  </Typography.Text>\r\n                </Row>\r\n              </Col>\r\n              <Col xs={24} style={{ padding: \"0rem 1rem\" }}>\r\n                <Input\r\n                  onChange={(e) => setNameSearch(e.target.value)}\r\n                  placeholder=\"Search\"\r\n                  style={{ height: \"40px\" }}\r\n                />\r\n              </Col>\r\n              {loading ? (\r\n                <Col xs={24}>\r\n                  <Row justify=\"center\">\r\n                    <LoadingOutlined />\r\n                  </Row>\r\n                </Col>\r\n              ) : (\r\n                <>\r\n                  <Col\r\n                    xs={24}\r\n                    style={{\r\n                      maxHeight: \"300px\",\r\n                      overflowY: \"auto\",\r\n                      padding: \"0rem 1rem\",\r\n                    }}\r\n                  >\r\n                    <Row gutter={[0, 12]} className=\"custome-checkbox-reversed\">\r\n                      {users?.map((user) => (\r\n                        <Checkbox value={user.id}>\r\n                          <Col xs={24} key={user.id}>\r\n                            <Row align=\"middle\" gutter={[12, 0]} wrap={false}>\r\n                              <Col>\r\n                                <Avatar\r\n                                  src={user.profileImage}\r\n                                  alt={user.firstName}\r\n                                  size={40}\r\n                                />\r\n                              </Col>\r\n                              <Col>\r\n                                <Typography.Text className=\"fw-500\">\r\n                                  {user.firstName + \" \" + user.lastName}\r\n                                </Typography.Text>\r\n                              </Col>\r\n                            </Row>\r\n                          </Col>\r\n                        </Checkbox>\r\n                      ))}\r\n                    </Row>\r\n                  </Col>\r\n                  <Col xs={24} style={{ padding: \"0 1rem\" }}>\r\n                    <Row justify=\"end\">\r\n                      <Button\r\n                        type=\"primary\"\r\n                        htmlType=\"submit\"\r\n                        style={{\r\n                          borderRadius: \"32px\",\r\n                          height: \"36px\",\r\n                          padding: \"0px 16px\",\r\n                          fontWeight: \"500\",\r\n                          fontSize: \"14px\",\r\n                        }}\r\n                        disabled={!selectedUsers.length}\r\n                      >\r\n                        Send Invitation\r\n                      </Button>\r\n                    </Row>\r\n                  </Col>\r\n                </>\r\n              )}\r\n            </Row>\r\n          </ConfigProvider>\r\n        </Checkbox.Group>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n}\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { Col, Row } from \"antd\";\r\n\r\nimport userContext from \"context/userContext\";\r\nimport { CloseSVG } from \"assets/jsx-svg\";\r\n\r\nimport \"./styles.css\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst toAbsoluteUrl = (origin, pathname) =>\r\n  origin + process.env.PUBLIC_URL + pathname;\r\n\r\nexport default function HolomeetDim({\r\n  SystemMessage,\r\n  sharedHolomeetId,\r\n  isHost,\r\n}) {\r\n  const { user } = useContext(userContext);\r\n  const [iframeRef, setIframeRef] = useState(null);\r\n  const { meetingId } = useParams();\r\n\r\n  useEffect(() => {\r\n    if (iframeRef && sharedHolomeetId && user.cGAccessToken) {\r\n      const configScript =\r\n        iframeRef.contentWindow.document.createElement(\"script\");\r\n\r\n      const style = iframeRef.contentWindow.document.createElement(\"link\");\r\n      style.href = \"/new-WebGL/style.css\";\r\n      style.rel = \"stylesheet\";\r\n\r\n      const div = iframeRef.contentWindow.document.createElement(\"div\");\r\n      div.innerHTML =\r\n        \"<div style='width: 100%; height: 100%' class='loading-holder'><video autoPlay muted loop style='width: 100%; height: 100%; object-fit: contain;' class='video-loading'><source src='/new-WebGL/dimension.mp4' type='video/mp4'/></video></div>\";\r\n      div.id = \"loading\";\r\n      div.className = \"loading\";\r\n\r\n      const listScript = [\r\n        \"hls.min.js\",\r\n        \"AgoraWebSDK/libs/agora-extension-virtual-background.js\",\r\n        \"AgoraWebSDK/libs/virtualbackground.js\",\r\n        \"AgoraWebSDK/libs/databuilder.js\",\r\n        \"AgoraWebSDK/libs/clientmanager.js\",\r\n        \"AgoraWebSDK/libs/wglwrapper.js\",\r\n        \"AgoraWebSDK/libs/audioeffects.js\",\r\n        \"AgoraWebSDK/libs/eventmanager.js\",\r\n        \"AgoraWebSDK/libs/engineglobals.js\",\r\n        \"AgoraWebSDK/libs/watermark.js\",\r\n        \"AgoraWebSDK/libs/customvideo.js\",\r\n        \"AgoraWebSDK/libs/agorachannel.js\",\r\n        \"AgoraWebSDK/libs/multichannel.js\",\r\n        \"AgoraWebSDK/libs/audiosystem.js\",\r\n        \"AgoraWebSDK/libs/testing.js\",\r\n        \"AgoraWebSDK/libs/agorautils.js\",\r\n        \"AgoraWebSDK/libs/audiomixing.js\",\r\n        \"AgoraWebSDK/agorartcenginev2.js\",\r\n        \"AgoraWebSDK/vendor/materialize.min.js\",\r\n        \"AgoraRTC_N.js\",\r\n        \"AgoraWebSDK/libs/spatial-audio-main.js\",\r\n        \"AgoraWebSDK/vendor/jquery.min.js\",\r\n        \"ReadyPlayerMeFrame.js\",\r\n      ];\r\n\r\n      listScript.forEach((ele) => {\r\n        const scriptName =\r\n          iframeRef.contentWindow.document.createElement(\"script\");\r\n        scriptName.src = toAbsoluteUrl(\r\n          iframeRef.contentWindow.top.location.origin,\r\n          `/new-WebGL/${ele}`,\r\n        );\r\n        iframeRef.contentWindow.document.head.append(scriptName);\r\n      });\r\n\r\n      configScript.innerHTML = `\r\n          var disableVoice = true;\r\n          var mainCanvas = document.getElementById(\"myCanvas\");\r\n          var mainContext = mainCanvas.getContext('2d');\r\n          var inMemCanvas = document.getElementById(\"inMem_Canvas\");\r\n          var inMemContext = inMemCanvas.getContext('2d');\r\n          var canvasWidth = mainCanvas.width;\r\n          var canvasHeight = mainCanvas.height;\r\n          var angle = 0;\r\n          var isRent = false;\r\n          var dimensionLink = \"https://vverse.co/metaverse?dimensionId={${sharedHolomeetId}}&dimensionType={0}\";\r\n          var linkBase = \"https://vverse.co/\";\r\n          var dimensionId = ${sharedHolomeetId};\r\n          var dimensionType = ${sharedHolomeetId ? 0 : -1};\r\n          var accessToken = \"${user.cGAccessToken}\";\r\n          var apiBase = \"https://portal.chickchack.net:7005/api/v6/mobile-game/\";\r\n          var production = true;\r\n          var socketBase = \"https://portal.chickchack.net:7005/\";\r\n          var storageBase = \"https://chickchack.s3.eu-west-2.amazonaws.com\"\r\n          var isProduct = false;\r\n          var isVirtualCall = true;\r\n          var meetingId = ${Number(meetingId)}\r\n    \r\n          var buildUrl = '${toAbsoluteUrl(\r\n            iframeRef.contentWindow.top.location.origin,\r\n            \"/new-WebGL/Build\",\r\n          )}';\r\n          var loaderUrl = buildUrl + '/visit-dimension.loader.js';\r\n          var config = {\r\n            dataUrl: buildUrl + '/visit-dimension.data.br',\r\n            frameworkUrl: buildUrl + '/visit-dimension.framework.js.br',\r\n            codeUrl: buildUrl + '/visit-dimension.wasm.br',\r\n            streamingAssetsUrl: buildUrl + '/StreamingAssets',\r\n            companyName: 'PiPhi Technology',\r\n            productName: 'Visit Dimension',\r\n            productVersion: '1.0',\r\n          };\r\n    \r\n          var container = document.querySelector(\"#unity-container\");\r\n          var canvas = document.querySelector(\"#unity-canvas\");\r\n          var loading = document.querySelector(\"#loading\");\r\n          var platform = 2; //1 mobile, 2 windows, 4 mac, 8 linux\r\n          loading.style.display = \"\";\r\n    \r\n          if (/iPhone|iPad|iPod|Android/i.test(navigator.userAgent)) {\r\n            config.devicePixelRatio = 1;\r\n            platform = 1;\r\n          }\r\n    \r\n          if (navigator.platform.toUpperCase().indexOf('MAC') >= 0) {\r\n            platform = 4;\r\n          }\r\n    \r\n          window.onmessage = function(e) {\r\n            try {\r\n              if (e.data === \"SetFullscreen\") {\r\n                window.unityInstance.SetFullscreen(true);\r\n              }\r\n            } catch(ignored) {}\r\n          };\r\n          `;\r\n\r\n      const createUnityInstance = () => {\r\n        iframeRef.contentWindow\r\n          .createUnityInstance(\r\n            iframeRef.contentWindow.canvas,\r\n            iframeRef.contentWindow.config,\r\n            (progress) => {\r\n              console.log(\"progress\", progress);\r\n            },\r\n          )\r\n          .then((unityInstance) => {\r\n            unityInstance.SendMessage(\r\n              \"BG_Scripts/Constatnts\",\r\n              \"SetPlatform\",\r\n              iframeRef.contentWindow.platform,\r\n            );\r\n\r\n            // iframeRef.contentWindow.loading.style.display = \"none\";\r\n            iframeRef.contentWindow.unityInstance = unityInstance;\r\n            iframeRef.contentWindow.web3 = window.web3;\r\n            iframeRef.contentWindow.ethereum = window.ethereum;\r\n          })\r\n          .catch((message) => {\r\n            alert(message);\r\n          });\r\n      };\r\n\r\n      const loaderScript =\r\n        iframeRef.contentWindow.document.createElement(\"script\");\r\n      loaderScript.src =\r\n        toAbsoluteUrl(window.location.origin, \"/new-WebGL/Build\") +\r\n        \"/visit-dimension.loader.js\";\r\n\r\n      loaderScript.onload = () => {\r\n        // if (window.navigator.geolocation) {\r\n        //   window.navigator.geolocation.getCurrentPosition((pos) => {\r\n        //     iframeRef.contentWindow.lat = pos.coords.latitude;\r\n        //     iframeRef.contentWindow.lon = pos.coords.longitude;\r\n\r\n        //     createUnityInstance();\r\n        //   });\r\n        // } else {\r\n        iframeRef.contentWindow.lat = 25.0418278;\r\n        iframeRef.contentWindow.lon = 55.2513757;\r\n\r\n        createUnityInstance();\r\n        // }\r\n      };\r\n\r\n      iframeRef.contentWindow.document.body.append(div);\r\n      // iframeRef.contentWindow.document.body.append(hls);\r\n      iframeRef.contentWindow.document.body.append(configScript);\r\n      iframeRef.contentWindow.document.head.append(loaderScript);\r\n      iframeRef.contentWindow.document.body.append(style);\r\n    }\r\n  }, [iframeRef, sharedHolomeetId, user.cGAccessToken]);\r\n\r\n  return (\r\n    <div className=\"holo-meet\">\r\n      <section className=\"main-screen-full\">\r\n        {isHost && (\r\n          <div className=\"holomeet-top\">\r\n            <Row justify=\"space-between\" align=\"middle\">\r\n              <Col></Col>\r\n              <Col>\r\n                <div\r\n                  className=\"holomeet-close clickable\"\r\n                  onClick={() => SystemMessage.setHolomeet(null)}\r\n                >\r\n                  <CloseSVG\r\n                    color=\"#fff\"\r\n                    style={{ width: \"12px\", height: \"12px\" }}\r\n                    className=\"close-whiteboard\"\r\n                  />\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        )}\r\n\r\n        <iframe\r\n          style={{\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            border: \"none\",\r\n          }}\r\n          title=\"Explore Metaverse\"\r\n          ref={setIframeRef}\r\n        >\r\n          {iframeRef?.contentWindow?.document?.body &&\r\n            createPortal(\r\n              <>\r\n                <div id=\"unity-container\">\r\n                  <div id=\"canvas-wrap\">\r\n                    <div id=\"rpm-container\">\r\n                      <iframe\r\n                        title=\"rpm-frame\"\r\n                        id=\"rpm-frame\"\r\n                        className=\"rpm-frame\"\r\n                        allow=\"camera *; microphone *\"\r\n                      ></iframe>\r\n                      <button id=\"rpm-hide-button\" onClick=\"hideRpm()\">\r\n                        Hide\r\n                      </button>\r\n                    </div>\r\n                    <canvas\r\n                      // ref={setUnityCanvas}\r\n                      id=\"unity-canvas\"\r\n                      style={{\r\n                        width: \"100%\",\r\n                        height: \"100%\",\r\n                      }}\r\n                    ></canvas>\r\n                  </div>\r\n                </div>\r\n                <canvas\r\n                  id=\"inMem_Canvas\"\r\n                  height=\"450\"\r\n                  width=\"450\"\r\n                  style={{ display: \"none\" }}\r\n                ></canvas>\r\n                <canvas\r\n                  id=\"myCanvas\"\r\n                  height=\"450\"\r\n                  width=\"450\"\r\n                  style={{ display: \"none\" }}\r\n                ></canvas>\r\n              </>,\r\n              iframeRef?.contentWindow?.document?.body,\r\n            )}\r\n        </iframe>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport {\r\n  useLocation,\r\n  useNavigate,\r\n  useParams,\r\n  useSearchParams,\r\n} from \"react-router-dom\";\r\nimport {\r\n  Col,\r\n  Dropdown,\r\n  Grid,\r\n  Image,\r\n  Menu,\r\n  message,\r\n  notification,\r\n  Row,\r\n  Typography,\r\n} from \"antd\";\r\nimport AgoraRTC from \"agora-rtc-sdk-ng\";\r\nimport AgoraChat from \"agora-chat\";\r\nimport { createFastboard, apps } from \"@netless/fastboard\";\r\n\r\nimport userContext from \"context/userContext\";\r\nimport SocialEventService from \"services/social-event.service\";\r\nimport CommonService from \"services/common.service\";\r\nimport CustomSlider from \"components/CustomSlider\";\r\nimport logo from \"assets/images/logo.png\";\r\nimport { ParticipantsSVG, LinkSVG, AddUserSVG } from \"assets/jsx-svg\";\r\n\r\nimport MeetingScreen from \"./MeetingScreen\";\r\nimport MeetAsaider from \"./MeetAsaider\";\r\nimport InviteFriends from \"./InviteFriends\";\r\nimport HolomeetDim from \"./HolomeetDim\";\r\nimport MeetNavigateSide from \"./MeetNavigateSide\";\r\n\r\nimport { LoadingOutlined } from \"@ant-design/icons\";\r\n\r\nimport \"./styles.css\";\r\n\r\nconst slideResponsive = [\r\n  {\r\n    breakpoint: 3000,\r\n    settings: {\r\n      slidesToShow: 4,\r\n      slidesToScroll: 4,\r\n    },\r\n  },\r\n  {\r\n    breakpoint: 1480,\r\n    settings: {\r\n      slidesToShow: 3,\r\n      slidesToScroll: 3,\r\n    },\r\n  },\r\n  {\r\n    breakpoint: 1120,\r\n    settings: {\r\n      slidesToShow: 3,\r\n      slidesToScroll: 3,\r\n    },\r\n  },\r\n];\r\n\r\nconst formatSystemMsg = (msg) => `SYSTEM%%%${msg}`;\r\nconst isSystemMsg = (msg) => /^SYSTEM%%%[\\s\\S]*/.test(msg);\r\n\r\nexport default function VirtualSupportView({\r\n  micId,\r\n  camId,\r\n  playbackDeviceId,\r\n  startMicMuted,\r\n  startCamActive,\r\n}) {\r\n  const location = useLocation();\r\n  const [meeting, setMeeting] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [activeBtn, setActiveBtn] = useState(\"participant\");\r\n  const [chatRoomId, setChatRoomId] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [localAudioTrack, setLocalAudioTrack] = useState(null);\r\n  const [localVideoTrack, setLocalVideoTrack] = useState(null);\r\n  const [localScreenTrack, setLocalScreenTrack] = useState(null);\r\n  const [soundMuted, setSoundMuted] = useState(false);\r\n  const [remoteUsers, setRemoteUsers] = useState([]);\r\n  const [mainScreenId, setMainScreenId] = useState(null);\r\n  const [sharingDimId, setSharingDimId] = useState(null);\r\n  const [sharingFile, setSharingFile] = useState(null);\r\n  const [sharedDimId, setSharedDimId] = useState(null);\r\n  const [fastboard, setFastboard] = useState(null);\r\n  const [joinedSharedDim, setJoinedSharedDim] = useState(false);\r\n  const [talking, setTalking] = useState(false);\r\n  const [sharedFiles, setSharedFiles] = useState([]);\r\n  const [permissions, setPermissions] = useState({\r\n    screen: false,\r\n    chat: true,\r\n    mic: true,\r\n    cam: true,\r\n    whiteboard: true,\r\n    canDownload: true,\r\n  });\r\n  const [hideSide, setHideSide] = useState(false);\r\n  const [inviteParticipantsPopup, setInviteParticipantsPopup] = useState(false);\r\n  const [askedForCounter, setAskedForCounter] = useState(false);\r\n  const [counterFormData, setCounterFormData] = useState(null);\r\n  const [counterSharedData, setCounterSharedData] = useState({});\r\n  const [sharedHolomeetId, setSharedHolomeetId] = useState(null);\r\n  const [dimensionFrames, setDimensionFrames] = useState(null);\r\n  const [deskType, setDeskType] = useState(\"\");\r\n  const [iframeRef, setIframeRef] = useState(null);\r\n\r\n  const { user } = useContext(userContext);\r\n  const joinTriesRef = useRef(1);\r\n  const soundMutedRef = useRef();\r\n  const { meetingId } = useParams();\r\n  const [searchParams] = useSearchParams();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const userRef = useRef(user);\r\n  const micIdRef = useRef(micId);\r\n  const camIdRef = useRef(camId);\r\n  const playbackDeviceIdRef = useRef(playbackDeviceId);\r\n  const startMicMutedRef = useRef(startMicMuted);\r\n  const startCamActiveRef = useRef(startCamActive);\r\n  const chatRoomIdRef = useRef(chatRoomId);\r\n  const meetingRef = useRef(meeting);\r\n\r\n  const agoraClient = useRef(\r\n    AgoraRTC.createClient({ mode: \"rtc\", codec: \"vp8\" }),\r\n  );\r\n  const agoraScreenClient = useRef(\r\n    AgoraRTC.createClient({ mode: \"rtc\", codec: \"vp8\" }),\r\n  );\r\n  const agoraDimClient = useRef(\r\n    AgoraRTC.createClient({ mode: \"rtc\", codec: \"vp8\" }),\r\n  );\r\n  const agoraChatClient = useRef(\r\n    new AgoraChat.connection({\r\n      appKey: process.env.REACT_APP_AGORA_APP_KEY,\r\n    }),\r\n  );\r\n\r\n  const screenSize = Grid.useBreakpoint();\r\n\r\n  const isHost = useMemo(\r\n    () => meeting?.customerId === user.id,\r\n    [meeting, user],\r\n  );\r\n  const isHostRef = useRef(isHost);\r\n\r\n  const audioMuted = useMemo(\r\n    () => (localAudioTrack ? localAudioTrack.muted : true),\r\n    [localAudioTrack],\r\n  );\r\n\r\n  const screens = useMemo(() => {\r\n    const arr = [\r\n      {\r\n        screenId: `${user.id}_rtc`,\r\n        userId: user.id,\r\n        userFullName: user.fullName,\r\n        userProfileImage: user.profileImage,\r\n        hasAudio: localAudioTrack\r\n          ? !localAudioTrack.muted && localAudioTrack.enabled\r\n          : false,\r\n        hasVideo: localVideoTrack\r\n          ? !localVideoTrack.muted && localVideoTrack.enabled\r\n          : false,\r\n        type: \"rtc\",\r\n        playTrack: () => {\r\n          const track = agoraClient.current.localTracks.find(\r\n            (track) => track.trackMediaType === \"video\",\r\n          );\r\n\r\n          if (track) {\r\n            track.play(`${user.id}_rtc`);\r\n          }\r\n        },\r\n      },\r\n    ];\r\n\r\n    if (localScreenTrack) {\r\n      arr.push({\r\n        screenId: `${user.id}_screen`,\r\n        userId: user.id,\r\n        userFullName: user.fullName,\r\n        userProfileImage: user.profileImage,\r\n        hasAudio: false,\r\n        hasVideo: true,\r\n        type: \"video\",\r\n        playTrack: () => {\r\n          const track = agoraScreenClient.current.localTracks.find(\r\n            (track) => track.trackMediaType === \"video\",\r\n          );\r\n\r\n          if (track) {\r\n            track.play(`${user.id}_screen`);\r\n          }\r\n        },\r\n      });\r\n    }\r\n\r\n    remoteUsers.forEach((remoteUser) => {\r\n      arr.push({\r\n        screenId: `${remoteUser.uid}_rtc`,\r\n        userId: remoteUser.uid,\r\n        userFullName: remoteUser.fullName,\r\n        userProfileImage: remoteUser.profileImage,\r\n        hasAudio: remoteUser.hasAudio,\r\n        hasVideo: remoteUser.hasVideo,\r\n        type: \"rtc\",\r\n        playTrack: () => {\r\n          if (remoteUser.hasVideo && remoteUser.videoTrack) {\r\n            remoteUser.videoTrack.play(`${remoteUser.uid}_rtc`);\r\n          }\r\n        },\r\n      });\r\n\r\n      if (remoteUser.hasScreen && remoteUser.screenTrack) {\r\n        arr.push({\r\n          screenId: `${remoteUser.uid}_screen`,\r\n          userId: remoteUser.uid,\r\n          userFullName: remoteUser.fullName,\r\n          userProfileImage: remoteUser.profileImage,\r\n          hasAudio: false,\r\n          hasVideo: true,\r\n          type: \"video\",\r\n          playTrack: () => {\r\n            remoteUser.screenTrack.play(`${remoteUser.uid}_screen`);\r\n          },\r\n        });\r\n      }\r\n\r\n      if (remoteUser.hasDim && remoteUser.dimTrack) {\r\n        arr.push({\r\n          screenId: `${remoteUser.uid}_dim`,\r\n          userId: remoteUser.uid,\r\n          userFullName: remoteUser.fullName,\r\n          userProfileImage: remoteUser.profileImage,\r\n          hasAudio: false,\r\n          hasVideo: true,\r\n          type: \"video\",\r\n          playTrack: () => {\r\n            remoteUser.dimTrack.play(`${remoteUser.uid}_dim`);\r\n          },\r\n        });\r\n      }\r\n    });\r\n\r\n    return arr;\r\n  }, [localAudioTrack, localScreenTrack, localVideoTrack, remoteUsers, user]);\r\n\r\n  const mainScreen = useMemo(() => {\r\n    if (\r\n      sharingDimId ||\r\n      sharingFile ||\r\n      fastboard ||\r\n      (sharedDimId && joinedSharedDim)\r\n    ) {\r\n      return null;\r\n    }\r\n\r\n    if (mainScreenId) {\r\n      const screen = screens.find((screen) => screen.screenId === mainScreenId);\r\n      if (screen) return screen;\r\n    }\r\n\r\n    const myRtcScreen = screens.find(\r\n      (screen) => screen.type === \"rtc\" && screen.userId === user.id,\r\n    );\r\n\r\n    const randomVideoScreen = screens.find((screen) => screen.hasVideo);\r\n\r\n    if (!myRtcScreen.hasVideo && randomVideoScreen) {\r\n      return randomVideoScreen;\r\n    }\r\n\r\n    return myRtcScreen;\r\n  }, [\r\n    sharingDimId,\r\n    sharingFile,\r\n    fastboard,\r\n    sharedDimId,\r\n    joinedSharedDim,\r\n    mainScreenId,\r\n    screens,\r\n    user.id,\r\n  ]);\r\n\r\n  const otherScreens = useMemo(\r\n    () => screens.filter((screen) => screen.screenId !== mainScreen?.screenId),\r\n    [mainScreen, screens],\r\n  );\r\n\r\n  const participants = useMemo(() => {\r\n    const me = {\r\n      uid: user.id,\r\n      name: user.fullName,\r\n      profileImage: user.profileImage,\r\n      hasAudio: localAudioTrack\r\n        ? !localAudioTrack.muted && localAudioTrack.enabled\r\n        : false,\r\n      hasVideo: localVideoTrack\r\n        ? !localVideoTrack.muted && localVideoTrack.enabled\r\n        : false,\r\n      talking: talking,\r\n      isHost,\r\n    };\r\n\r\n    const remote = remoteUsers.map((remoteUser) => {\r\n      return {\r\n        uid: remoteUser.uid,\r\n        name: remoteUser.fullName,\r\n        profileImage: remoteUser.profileImage,\r\n        hasAudio: remoteUser.hasAudio,\r\n        hasVideo: remoteUser.hasVideo,\r\n        talking: remoteUser.talking,\r\n        isHost: meeting?.customerId === remoteUser.uid,\r\n      };\r\n    });\r\n\r\n    return [me, ...remote];\r\n  }, [\r\n    localAudioTrack,\r\n    localVideoTrack,\r\n    remoteUsers,\r\n    user,\r\n    talking,\r\n    isHost,\r\n    meeting,\r\n  ]);\r\n  const participantsRef = useRef(participants);\r\n\r\n  const sharingFileScreenObj = useMemo(\r\n    () => ({ type: \"file\", file: sharingFile }),\r\n    [sharingFile],\r\n  );\r\n\r\n  const sharingDimScreenObj = useMemo(\r\n    () => ({ type: \"dim\", dimensionId: sharingDimId }),\r\n    [sharingDimId],\r\n  );\r\n\r\n  const sharedDimScreenObj = useMemo(\r\n    () => ({ type: \"dim\", dimensionId: sharedDimId }),\r\n    [sharedDimId],\r\n  );\r\n\r\n  const deskScreenObj = useMemo(() => {\r\n    return { type: \"desk\", dimensionId: meeting?.dimensionId };\r\n  }, [meeting?.dimensionId]);\r\n\r\n  const whiteboardScreenObj = useMemo(\r\n    () => ({ type: \"whiteboard\", room: fastboard }),\r\n    [fastboard],\r\n  );\r\n\r\n  const sendMessage = useCallback(async (_text) => {\r\n    try {\r\n      if (agoraChatClient.current.isOpened() && chatRoomIdRef.current) {\r\n        if (isSystemMsg(_text)) {\r\n          await agoraChatClient.current.send(\r\n            AgoraChat.message.create({\r\n              chatType: \"chatRoom\",\r\n              type: \"txt\",\r\n              to: chatRoomIdRef.current,\r\n              msg: _text,\r\n            }),\r\n          );\r\n        } else {\r\n          const text = `${userRef.current.fullName}%%%${userRef.current.profileImage}%%%${_text}`;\r\n\r\n          await agoraChatClient.current.send(\r\n            AgoraChat.message.create({\r\n              chatType: \"chatRoom\",\r\n              type: \"txt\",\r\n              to: chatRoomIdRef.current,\r\n              msg: text,\r\n            }),\r\n          );\r\n\r\n          setMessages((prev) => [\r\n            ...prev,\r\n            {\r\n              from: userRef.current.id,\r\n              msg: _text,\r\n              profileImage: userRef.current.profileImage,\r\n              name: userRef.current.fullName,\r\n              owner: true,\r\n            },\r\n          ]);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(`Error sending message: ${error.message}`);\r\n    }\r\n  }, []);\r\n\r\n  const publishAudio = useCallback(async () => {\r\n    try {\r\n      const audioTrack = await AgoraRTC.createMicrophoneAudioTrack({\r\n        AEC: true,\r\n        microphoneId: micIdRef.current || undefined,\r\n      });\r\n\r\n      await audioTrack.setMuted(startMicMutedRef.current);\r\n      await agoraClient.current.publish(audioTrack);\r\n\r\n      setLocalAudioTrack({\r\n        muted: audioTrack.muted,\r\n        enabled: audioTrack.enabled,\r\n      });\r\n    } catch (error) {\r\n      console.error(`Error publishing audio track: ${error.message}`);\r\n    }\r\n  }, []);\r\n\r\n  const publishCamera = useCallback(async () => {\r\n    try {\r\n      const videoTrack = await AgoraRTC.createCameraVideoTrack({\r\n        cameraId: camIdRef.current || undefined,\r\n      });\r\n\r\n      await agoraClient.current.publish(videoTrack);\r\n\r\n      setLocalVideoTrack({ enabled: videoTrack.enabled });\r\n    } catch (error) {\r\n      console.error(`Error publishing video track: ${error.message}`);\r\n    }\r\n  }, []);\r\n\r\n  const unPublishCamera = useCallback(async () => {\r\n    try {\r\n      const localVideoTrack = agoraClient.current.localTracks.find(\r\n        (track) => track.trackMediaType === \"video\",\r\n      );\r\n\r\n      if (localVideoTrack) {\r\n        localVideoTrack.close();\r\n        await agoraClient.current.unpublish(localVideoTrack);\r\n        setLocalVideoTrack(null);\r\n      }\r\n    } catch (error) {\r\n      console.error(`Error publishing video track: ${error.message}`);\r\n    }\r\n  }, []);\r\n\r\n  const publishScreen = useCallback(async () => {\r\n    try {\r\n      const screenTrack = await AgoraRTC.createScreenVideoTrack();\r\n\r\n      await screenTrack.setMuted(false);\r\n      await agoraScreenClient.current.publish(screenTrack);\r\n\r\n      setLocalScreenTrack({ enabled: screenTrack.enabled });\r\n    } catch (error) {\r\n      console.error(`Error publishing screen track: ${error.message}`);\r\n    }\r\n  }, []);\r\n\r\n  const unPublishScreen = useCallback(async () => {\r\n    try {\r\n      const localScreenTrack = agoraScreenClient.current.localTracks.find(\r\n        (track) => track.trackMediaType === \"video\",\r\n      );\r\n\r\n      if (localScreenTrack) {\r\n        localScreenTrack.close();\r\n        await agoraScreenClient.current.unpublish(localScreenTrack);\r\n        setLocalScreenTrack(null);\r\n      }\r\n    } catch (error) {\r\n      console.error(`Error publishing video track: ${error.message}`);\r\n    }\r\n  }, []);\r\n\r\n  const publishDim = useCallback(async (canvas) => {\r\n    try {\r\n      const stream = canvas.captureStream(30);\r\n      const videoTrack = stream.getVideoTracks()[0];\r\n\r\n      if (videoTrack) {\r\n        const track = AgoraRTC.createCustomVideoTrack({\r\n          mediaStreamTrack: videoTrack,\r\n          optimizationMode: \"motion\",\r\n        });\r\n\r\n        await track.setMuted(false);\r\n        await agoraDimClient.current.publish(track);\r\n      }\r\n    } catch (error) {\r\n      console.error(`Error publishing dim track: ${error.message}`);\r\n    }\r\n  }, []);\r\n\r\n  const unPublishDim = useCallback(async () => {\r\n    try {\r\n      const localDimTrack = agoraDimClient.current.localTracks.find(\r\n        (track) => track.trackMediaType === \"video\",\r\n      );\r\n\r\n      if (localDimTrack) {\r\n        localDimTrack.close();\r\n        await agoraDimClient.current.unpublish(localDimTrack);\r\n      }\r\n    } catch (error) {\r\n      console.error(`Error un publishing dim track: ${error.message}`);\r\n    }\r\n  }, []);\r\n\r\n  const SystemMessage = useMemo(() => {\r\n    return {\r\n      shareFile: (file) => {\r\n        setSharingFile(file);\r\n        sendMessage(\r\n          formatSystemMsg(\r\n            `PREVIEWFILE%%%${userRef.current.id}%%%${JSON.stringify(\r\n              file,\r\n            )}%%%${meetingId}`,\r\n          ),\r\n        );\r\n      },\r\n\r\n      shareDim: (dimId) => {\r\n        setSharingDimId(dimId);\r\n        sendMessage(\r\n          formatSystemMsg(\r\n            `SHAREDIM%%%${userRef.current.id}%%%${dimId}%%%${meetingId}`,\r\n          ),\r\n        );\r\n      },\r\n\r\n      shareWhiteboard: (whiteboardRoomId) =>\r\n        sendMessage(\r\n          formatSystemMsg(\r\n            `SHAREWHITEBOARD%%%${userRef.current.id}%%%${whiteboardRoomId}%%%${meetingId}`,\r\n          ),\r\n        ),\r\n\r\n      changePermissions: (permissions) =>\r\n        sendMessage(\r\n          formatSystemMsg(\r\n            `PERMISSIONS%%%${JSON.stringify(permissions)}%%%${meetingId}`,\r\n          ),\r\n        ),\r\n\r\n      changeSharedFiles: (files) =>\r\n        sendMessage(\r\n          formatSystemMsg(\r\n            `SHAREDFILES%%%${JSON.stringify(files)}%%%${meetingId}`,\r\n          ),\r\n        ),\r\n\r\n      hostShareCounterData: (data) => {\r\n        sendMessage(\r\n          formatSystemMsg(\r\n            `COUNTERHOSTSENDDATA%%%${JSON.stringify(data)}%%%${meetingId}`,\r\n          ),\r\n        );\r\n      },\r\n\r\n      changeCounterUserSharedData: ({\r\n        user,\r\n        fullName = \"\",\r\n        signature = null,\r\n        file = null,\r\n        customField = null,\r\n      }) =>\r\n        sendMessage(\r\n          formatSystemMsg(\r\n            `COUNTERUSERSENDDATA%%%${JSON.stringify(user)}%%%${JSON.stringify(\r\n              fullName,\r\n            )}%%%${JSON.stringify(signature)}%%%${JSON.stringify(\r\n              file,\r\n            )}%%%${JSON.stringify(customField)}%%%${meetingId}`,\r\n          ),\r\n        ),\r\n\r\n      stopFilePreview: () => {\r\n        setSharingFile(null);\r\n        sendMessage(\r\n          formatSystemMsg(`ENDFILEPREVIEW%%%${meetingId}%%%${meetingId}`),\r\n        );\r\n      },\r\n\r\n      stopWhiteboard: () => {\r\n        setFastboard((prev) => {\r\n          if (prev) {\r\n            try {\r\n              prev.destroy();\r\n            } catch (error) {\r\n              console.log(\"Error destroying fastboard\", error.message);\r\n            }\r\n          }\r\n\r\n          return null;\r\n        });\r\n        sendMessage(\r\n          formatSystemMsg(`ENDWHITEBOARD%%%${meetingId}%%%${meetingId}`),\r\n        );\r\n      },\r\n\r\n      stopDim: () => {\r\n        unPublishDim();\r\n        setSharingDimId(null);\r\n        sendMessage(formatSystemMsg(`ENDDIM%%%${meetingId}%%%${meetingId}`));\r\n      },\r\n\r\n      endMeeting: () =>\r\n        sendMessage(formatSystemMsg(`ENDMEETING%%%${meetingId}`)),\r\n\r\n      askAllUserForCounter: (dataAskedFor) => {\r\n        sendMessage(\r\n          formatSystemMsg(\r\n            `ASKALLUSERFORCOUNTER%%%${JSON.stringify(\r\n              dataAskedFor,\r\n            )}%%%${meetingId}`,\r\n          ),\r\n        );\r\n      },\r\n\r\n      askSelectedUserForCounter: (usersAndDataAskedFor) => {\r\n        sendMessage(\r\n          formatSystemMsg(\r\n            `ASKELECTEDUSERSFORCOUNTER%%%${JSON.stringify(\r\n              usersAndDataAskedFor,\r\n            )}%%%${meetingId}`,\r\n          ),\r\n        );\r\n      },\r\n\r\n      setHolomeet: (holomeetId = null) => {\r\n        const defualtValueForPer = {\r\n          screen: false,\r\n          chat: true,\r\n          mic: true,\r\n          cam: true,\r\n          whiteboard: true,\r\n          canDownload: true,\r\n        };\r\n        const closeAllPer = {\r\n          screen: false,\r\n          chat: false,\r\n          mic: false,\r\n          cam: false,\r\n          whiteboard: false,\r\n          canDownload: false,\r\n        };\r\n        setSharedHolomeetId(holomeetId);\r\n        sendMessage(\r\n          formatSystemMsg(\r\n            `SETHOLOMEET%%%${JSON.stringify(holomeetId)}%%%${meetingId}`,\r\n          ),\r\n        );\r\n        if (holomeetId) {\r\n          forceMuteMic();\r\n          unPublishCamera();\r\n          forceSoundMute();\r\n          SystemMessage.changePermissions(closeAllPer);\r\n          setPermissions(closeAllPer);\r\n        } else {\r\n          SystemMessage.changePermissions(defualtValueForPer);\r\n          setPermissions(defualtValueForPer);\r\n\r\n          toggleSoundMute();\r\n        }\r\n      },\r\n    };\r\n  }, [sendMessage, unPublishDim]);\r\n\r\n  const joinWhiteboardRoom = useCallback(async (whiteboardRoomId) => {\r\n    try {\r\n      const {\r\n        data: { whiteboardRoomToken },\r\n      } = await SocialEventService.genWhiteboardRoomToken(whiteboardRoomId);\r\n\r\n      const fastboard = await createFastboard({\r\n        sdkConfig: {\r\n          appIdentifier: process.env.REACT_APP_AGORA_WHITEBOARD_APP_ID,\r\n          region: \"gb-lon\",\r\n        },\r\n        joinRoom: {\r\n          uid: `${userRef.current.id}`,\r\n          uuid: whiteboardRoomId,\r\n          roomToken: whiteboardRoomToken,\r\n          userPayload: {\r\n            nickName: userRef.current.fullName,\r\n          },\r\n        },\r\n        managerConfig: {\r\n          cursor: true,\r\n        },\r\n      });\r\n\r\n      apps.push(\r\n        {\r\n          icon: \"https://api.iconify.design/logos:youtube-icon.svg?color=currentColor\",\r\n          kind: \"Plyr\",\r\n          label: \"YouTube\",\r\n          onClick() {\r\n            setHideSide(false);\r\n            setActiveBtn(\"youtubeLink\");\r\n          },\r\n        },\r\n        {\r\n          icon: \"https://png.pngtree.com/png-vector/20190514/ourmid/pngtree-emb--file-format-icon-design-png-image_1040671.jpg\",\r\n          kind: \"EmbeddedPage\",\r\n          label: \"Embed\",\r\n          onClick() {\r\n            setHideSide(false);\r\n            setActiveBtn(\"embedLink\");\r\n          },\r\n        },\r\n      );\r\n\r\n      setFastboard(fastboard);\r\n      return true;\r\n    } catch (error) {\r\n      console.log(`Error joining whiteboard: ${error.message}`);\r\n      console.log(error);\r\n      return false;\r\n    }\r\n  }, []);\r\n\r\n  const shareWhiteboard = useCallback(async () => {\r\n    try {\r\n      const {\r\n        data: { whiteboardRoomId },\r\n      } = await SocialEventService.createWhiteboardRoom();\r\n\r\n      const createdAndJoined = await joinWhiteboardRoom(whiteboardRoomId);\r\n\r\n      if (createdAndJoined) {\r\n        SystemMessage.shareWhiteboard(whiteboardRoomId);\r\n      }\r\n    } catch (error) {\r\n      console.log(`Error sharing whiteboard: ${error.message}`);\r\n      console.log(error);\r\n    }\r\n  }, [SystemMessage, joinWhiteboardRoom]);\r\n\r\n  const initMeeting = useCallback(\r\n    async (meeting) => {\r\n      if (joinTriesRef.current > 20) {\r\n        navigate(\"/meetings\");\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const appId = process.env.REACT_APP_AGORA_APP_ID;\r\n\r\n        const agoraRte = await SocialEventService.getAgoraRteTokens(\r\n          meetingId,\r\n          meeting.customerId === user?.id ? \"PUBLISHER\" : \"SUBSCRIBER\",\r\n          user.id,\r\n          8 * 60 * 60,\r\n        );\r\n\r\n        await agoraClient.current.join(\r\n          appId,\r\n          meetingId,\r\n          agoraRte.rtcToken,\r\n          user.id,\r\n        );\r\n\r\n        await agoraScreenClient.current.join(\r\n          appId,\r\n          meetingId,\r\n          agoraRte.rtcScreenToken,\r\n          user.id + 1e9,\r\n        );\r\n\r\n        await agoraDimClient.current.join(\r\n          appId,\r\n          meetingId,\r\n          agoraRte.rtcDimToken,\r\n          user.id + 1e6,\r\n        );\r\n\r\n        await agoraChatClient.current.open({\r\n          user: user.id.toString(),\r\n          agoraToken: agoraRte.chatToken,\r\n        });\r\n\r\n        const { data: rooms } = await agoraChatClient.current.getChatRooms({\r\n          pagenum: 1,\r\n          pagesize: 1000,\r\n        });\r\n\r\n        const roomId = rooms.find((room) => room.name === meetingId)?.id;\r\n        if (!roomId) {\r\n          throw new Error(`Could not find roomId for meetingId: ${meetingId}`);\r\n        }\r\n\r\n        await agoraChatClient.current.joinChatRoom({ roomId });\r\n\r\n        try {\r\n          await publishAudio();\r\n        } catch (ignored) {}\r\n\r\n        if (startCamActiveRef.current) {\r\n          try {\r\n            await publishCamera();\r\n          } catch (ignored) {}\r\n        }\r\n\r\n        if (isHostRef.current) {\r\n          await agoraChatClient.current.send(\r\n            AgoraChat.message.create({\r\n              chatType: \"chatRoom\",\r\n              type: \"txt\",\r\n              to: roomId,\r\n              msg: formatSystemMsg(\"HOSTJOINED\"),\r\n            }),\r\n          );\r\n        }\r\n        setChatRoomId(roomId);\r\n      } catch (error) {\r\n        console.error(`Error joining meeting: ${error.message}`);\r\n\r\n        setTimeout(() => {\r\n          joinTriesRef.current = joinTriesRef.current + 1;\r\n          initMeeting(meeting);\r\n        }, 250);\r\n      }\r\n    },\r\n    [navigate, meetingId, user, publishAudio, publishCamera],\r\n  );\r\n\r\n  const handleSystemMsg = useCallback(\r\n    (msg) => {\r\n      if (msg.includes(\"ENDMEETING\")) {\r\n        const currentMeetId = msg.split(\"%%%\")[2];\r\n\r\n        if (currentMeetId === meetingId) {\r\n          notification.info({\r\n            message: \"Host has ended this meeting.\",\r\n          });\r\n          navigate(\"/meetings\");\r\n        }\r\n      } else if (msg.includes(\"ENDFILEPREVIEW\")) {\r\n        const currentMeetId = msg.split(\"%%%\")[2];\r\n\r\n        if (currentMeetId === meetingId) {\r\n          setSharingFile(null);\r\n        }\r\n      } else if (msg.includes(\"ENDWHITEBOARD\")) {\r\n        const currentMeetId = msg.split(\"%%%\")[2];\r\n\r\n        if (currentMeetId === meetingId) {\r\n          setFastboard(null);\r\n        }\r\n      } else if (msg.includes(\"ENDDIM\")) {\r\n        const currentMeetId = msg.split(\"%%%\")[2];\r\n\r\n        if (currentMeetId === meetingId) {\r\n          setSharedDimId(null);\r\n          setJoinedSharedDim(false);\r\n        }\r\n      } else if (msg.includes(\"SHAREWHITEBOARD\")) {\r\n        const whiteboardRoomId = msg.split(\"%%%\")[3];\r\n        const currentMeetId = msg.split(\"%%%\")[4];\r\n\r\n        if (currentMeetId === meetingId) {\r\n          joinWhiteboardRoom(whiteboardRoomId);\r\n          notification.info({\r\n            message: \"Host is sharing a whiteboard.\",\r\n          });\r\n        }\r\n      } else if (msg.includes(\"SHAREDIM\")) {\r\n        const dimId = msg.split(\"%%%\")[3];\r\n        const currentMeetId = msg.split(\"%%%\")[4];\r\n\r\n        if (currentMeetId === meetingId) {\r\n          setSharedDimId(Number(dimId));\r\n          notification.info({\r\n            message:\r\n              'Host is sharing a dimension. Click \"Join Dimension\" to join the shared dimension.',\r\n          });\r\n        }\r\n      } else if (msg.includes(\"PERMISSIONS\")) {\r\n        try {\r\n          const perms = JSON.parse(msg.split(\"%%%\")[2]);\r\n          const currentMeetId = msg.split(\"%%%\")[3];\r\n\r\n          if (currentMeetId === meetingId) {\r\n            setPermissions(perms);\r\n          }\r\n        } catch (ignored) {}\r\n      } else if (msg.includes(\"PREVIEWFILE\")) {\r\n        try {\r\n          const file = JSON.parse(msg.split(\"%%%\")[3]);\r\n          const currentMeetId = msg.split(\"%%%\")[4];\r\n\r\n          if (currentMeetId === meetingId) {\r\n            setSharingFile(file);\r\n            notification.info({\r\n              message: \"Host is sharing a file.\",\r\n            });\r\n          }\r\n        } catch (ignored) {}\r\n      } else if (msg.includes(\"ASKALLUSERFORCOUNTER\")) {\r\n        try {\r\n          if (!isHost) {\r\n            const dataAskedFor = JSON.parse(msg.split(\"%%%\")[2]);\r\n            const currentMeetId = msg.split(\"%%%\")[3];\r\n\r\n            if (currentMeetId === meetingId) {\r\n              setCounterFormData(dataAskedFor.formData);\r\n\r\n              participants.forEach((participant) => {\r\n                if (participant.uid === user.id) {\r\n                  notification.info({\r\n                    message: `Host is asked you to submit ${dataAskedFor.formData.message}.`,\r\n                  });\r\n                  setAskedForCounter(true);\r\n                  setActiveBtn(\"userCounter\");\r\n                }\r\n              });\r\n            }\r\n          }\r\n        } catch (ignored) {}\r\n      } else if (msg.includes(\"ASKELECTEDUSERSFORCOUNTER\")) {\r\n        try {\r\n          if (!isHost) {\r\n            const usersAndDataAskedFor = JSON.parse(msg.split(\"%%%\")[2]);\r\n            const currentMeetId = msg.split(\"%%%\")[3];\r\n\r\n            if (currentMeetId === meetingId) {\r\n              setCounterFormData(usersAndDataAskedFor.formData);\r\n              if (usersAndDataAskedFor.users.includes(user.id)) {\r\n                notification.info({\r\n                  message: `Host is asked you to submit ${usersAndDataAskedFor.formData.message}.`,\r\n                });\r\n                setAskedForCounter(true);\r\n                setActiveBtn(\"userCounter\");\r\n              }\r\n            }\r\n          }\r\n        } catch (ignored) {}\r\n      } else if (msg.includes(\"COUNTERUSERSENDDATA\")) {\r\n        try {\r\n          const senderUser = JSON.parse(msg.split(\"%%%\")[2]);\r\n          const sharedFullName = JSON.parse(msg.split(\"%%%\")[3]);\r\n          const sharedSignature = JSON.parse(msg.split(\"%%%\")[4]);\r\n          const sharedfile = JSON.parse(msg.split(\"%%%\")[5]);\r\n          const sharedCustomField = JSON.parse(msg.split(\"%%%\")[6]);\r\n          const currentMeetId = msg.split(\"%%%\")[7];\r\n\r\n          if (currentMeetId === meetingId) {\r\n            setCounterSharedData((prev) => {\r\n              if (prev.hasOwnProperty(senderUser.id)) {\r\n                prev[senderUser.id].userData = senderUser;\r\n\r\n                if (sharedFullName) {\r\n                  prev[senderUser.id].fullName = sharedFullName;\r\n                }\r\n                if (sharedSignature) {\r\n                  prev[senderUser.id].signature = sharedSignature;\r\n                }\r\n                if (sharedfile) {\r\n                  prev[senderUser.id].files = [\r\n                    ...prev[senderUser.id].files,\r\n                    sharedfile,\r\n                  ];\r\n                }\r\n\r\n                if (sharedCustomField) {\r\n                  prev[senderUser.id].customField = [\r\n                    ...prev[senderUser.id].customField,\r\n                    sharedCustomField,\r\n                  ];\r\n                }\r\n              } else {\r\n                prev[senderUser.id] = {\r\n                  userData: senderUser,\r\n                  fullName: sharedFullName,\r\n                  signature: sharedSignature,\r\n                  files: sharedfile ? [sharedfile] : [],\r\n                  customField: sharedCustomField ? [sharedCustomField] : [],\r\n                };\r\n              }\r\n\r\n              SystemMessage.hostShareCounterData({ ...prev });\r\n\r\n              return { ...prev };\r\n            });\r\n          }\r\n        } catch (ignored) {}\r\n      } else if (msg.includes(\"SHAREDFILES\")) {\r\n        try {\r\n          const files = JSON.parse(msg.split(\"%%%\")[2]);\r\n          const currentMeetId = msg.split(\"%%%\")[3];\r\n\r\n          if (currentMeetId === meetingId) {\r\n            setSharedFiles(files);\r\n          }\r\n        } catch (ignored) {}\r\n      } else if (msg.includes(\"SETHOLOMEET\")) {\r\n        try {\r\n          const holomeetId = JSON.parse(msg.split(\"%%%\")[2]);\r\n          const currentMeetId = msg.split(\"%%%\")[3];\r\n\r\n          if (currentMeetId === meetingId) {\r\n            setSharedHolomeetId(Number(holomeetId));\r\n\r\n            if (holomeetId) {\r\n              notification.info({\r\n                message: \"Host is sharing holomeet\",\r\n              });\r\n              forceSoundMute();\r\n              toggleSoundMute();\r\n            }\r\n          }\r\n        } catch (ignored) {}\r\n      }\r\n    },\r\n    [joinWhiteboardRoom, navigate],\r\n  );\r\n\r\n  const setMainScreen = useCallback(\r\n    (id) => {\r\n      if (!sharingFile && !sharingDimId && !joinedSharedDim) {\r\n        setMainScreenId(id);\r\n      }\r\n    },\r\n    [sharingFile, sharingDimId, joinedSharedDim],\r\n  );\r\n\r\n  const toggleAudioMute = useCallback(async () => {\r\n    try {\r\n      const localAudioTrack = agoraClient.current.localTracks.find(\r\n        (track) => track.trackMediaType === \"audio\",\r\n      );\r\n\r\n      if (localAudioTrack) {\r\n        await localAudioTrack.setMuted(!localAudioTrack.muted);\r\n\r\n        setLocalAudioTrack({\r\n          muted: localAudioTrack.muted,\r\n          enabled: localAudioTrack.enabled,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(`Error muting audio track: ${error.message}`);\r\n    }\r\n  }, []);\r\n\r\n  const forceMuteMic = useCallback(async () => {\r\n    try {\r\n      const localAudioTrack = agoraClient.current.localTracks.find(\r\n        (track) => track.trackMediaType === \"audio\",\r\n      );\r\n\r\n      if (localAudioTrack && !localAudioTrack.muted) {\r\n        await localAudioTrack.setMuted(true);\r\n\r\n        setLocalAudioTrack({\r\n          muted: localAudioTrack.muted,\r\n          enabled: localAudioTrack.enabled,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(`Error muting audio track: ${error.message}`);\r\n    }\r\n  }, []);\r\n\r\n  const toggleVideo = useCallback(async () => {\r\n    try {\r\n      if (localVideoTrack?.enabled) unPublishCamera();\r\n      else publishCamera();\r\n    } catch (error) {\r\n      console.error(`Error muting video track: ${error.message}`);\r\n    }\r\n  }, [localVideoTrack, publishCamera, unPublishCamera]);\r\n\r\n  const toggleSoundMute = useCallback(async () => {\r\n    try {\r\n      if (soundMutedRef.current) {\r\n        remoteUsers.forEach((remoteUser) => {\r\n          if (remoteUser.hasAudio) {\r\n            remoteUser.audioTrack.play();\r\n          }\r\n        });\r\n\r\n        setSoundMuted(false);\r\n      } else {\r\n        remoteUsers.forEach((remoteUser) => {\r\n          if (remoteUser.hasAudio) {\r\n            remoteUser.audioTrack.stop();\r\n          }\r\n        });\r\n\r\n        setSoundMuted(true);\r\n      }\r\n    } catch (error) {\r\n      console.error(`Error muting video track: ${error.message}`);\r\n    }\r\n  }, [remoteUsers]);\r\n\r\n  const forceSoundMute = useCallback(async () => {\r\n    try {\r\n      remoteUsers.forEach((remoteUser) => {\r\n        if (remoteUser.hasAudio) {\r\n          remoteUser.audioTrack.stop();\r\n        }\r\n      });\r\n\r\n      setSoundMuted(true);\r\n    } catch (error) {\r\n      console.error(`Error muting video track: ${error.message}`);\r\n    }\r\n  }, [remoteUsers]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (user) {\r\n        try {\r\n          const { data: _meeting } = await SocialEventService.getMeetingInfo(\r\n            meetingId,\r\n            location.pathname.includes(\"vindo-desk\") && \"desk\",\r\n          );\r\n          if (_meeting) {\r\n            agoraClient.current.removeAllListeners();\r\n            agoraChatClient.current.removeEventHandler(\"connection&message\");\r\n            agoraClient.current.enableAudioVolumeIndicator();\r\n\r\n            agoraChatClient.current.addEventHandler(\"connection&message\", {\r\n              onConnected: async () => {\r\n                console.info(\"Chat Connected\");\r\n              },\r\n              onDisconnected: () => {\r\n                console.info(\"Chat Disconnedted\");\r\n                setLoading(true);\r\n              },\r\n              onTextMessage: (message) => {\r\n                if (isSystemMsg(message.msg)) {\r\n                  handleSystemMsg(message.msg);\r\n                } else {\r\n                  const name = message.msg.split(\"%%%\")[0];\r\n                  const profileImage = message.msg.split(\"%%%\")[1];\r\n                  const text = message.msg.split(\"%%%\")[2];\r\n\r\n                  setMessages((prev) => [\r\n                    ...prev,\r\n                    {\r\n                      from: message.from,\r\n                      msg: text,\r\n                      profileImage,\r\n                      name,\r\n                      owner: false,\r\n                    },\r\n                  ]);\r\n                }\r\n              },\r\n              onError: (error) => {\r\n                console.log(\"on error\\n\", error);\r\n              },\r\n            });\r\n\r\n            agoraClient.current.on(\"user-joined\", async (joinedUser) => {\r\n              if (joinedUser.uid > 1e6) return;\r\n\r\n              try {\r\n                const { data: userData } =\r\n                  await CommonService.getPublicUserData(joinedUser.uid);\r\n\r\n                if (userData) {\r\n                  setRemoteUsers((prev) => {\r\n                    const remoteUsers = [...prev];\r\n\r\n                    remoteUsers.push({\r\n                      uid: userData.id,\r\n                      fullName: userData.fullName,\r\n                      profileImage: userData.profileImage,\r\n                      audioTrack: joinedUser.audioTrack,\r\n                      hasAudio: joinedUser.hasAudio,\r\n                      videoTrack: joinedUser.videoTrack,\r\n                      hasVideo: joinedUser.hasVideo,\r\n                      hasScreen: false,\r\n                      screenTrack: undefined,\r\n                      hasDim: false,\r\n                      dimTrack: undefined,\r\n                    });\r\n\r\n                    return remoteUsers;\r\n                  });\r\n                }\r\n              } catch (error) {\r\n                console.error(`Error fetching user data ${error.message}`);\r\n              }\r\n            });\r\n\r\n            agoraClient.current.on(\"user-left\", async (leavingUser) => {\r\n              if (leavingUser.uid > 1e6) return;\r\n\r\n              if (leavingUser.uid === meetingRef.current.customerId) {\r\n                SystemMessage.stopWhiteboard();\r\n              }\r\n\r\n              setRemoteUsers((prev) => {\r\n                let remoteUsers = [...prev];\r\n\r\n                remoteUsers = remoteUsers.filter(\r\n                  (user) => user.uid !== leavingUser.uid,\r\n                );\r\n\r\n                return remoteUsers;\r\n              });\r\n            });\r\n\r\n            agoraClient.current.on(\r\n              \"user-published\",\r\n              async (publishingUser, mediaType) => {\r\n                try {\r\n                  await agoraClient.current.subscribe(\r\n                    publishingUser,\r\n                    mediaType,\r\n                  );\r\n\r\n                  if (publishingUser.uid > 1e9) {\r\n                    setRemoteUsers((prev) => {\r\n                      const remoteUsers = [...prev];\r\n                      const idx = remoteUsers.findIndex(\r\n                        (user) => user.uid === publishingUser.uid - 1e9,\r\n                      );\r\n\r\n                      if (idx > -1) {\r\n                        remoteUsers[idx].screenTrack =\r\n                          publishingUser.videoTrack;\r\n                        remoteUsers[idx].hasScreen = publishingUser.hasVideo;\r\n                      }\r\n\r\n                      return remoteUsers;\r\n                    });\r\n                  } else if (publishingUser.uid > 1e6) {\r\n                    setRemoteUsers((prev) => {\r\n                      const remoteUsers = [...prev];\r\n                      const idx = remoteUsers.findIndex(\r\n                        (user) => user.uid === publishingUser.uid - 1e6,\r\n                      );\r\n\r\n                      if (idx > -1) {\r\n                        remoteUsers[idx].dimTrack = publishingUser.videoTrack;\r\n                        remoteUsers[idx].hasDim = publishingUser.hasVideo;\r\n                      }\r\n\r\n                      return remoteUsers;\r\n                    });\r\n                  } else {\r\n                    if (mediaType === \"audio\" && !soundMutedRef.current) {\r\n                      publishingUser.audioTrack.play();\r\n\r\n                      if (playbackDeviceIdRef.current) {\r\n                        try {\r\n                          await publishingUser.audioTrack.setPlaybackDevice(\r\n                            playbackDeviceIdRef.current,\r\n                          );\r\n                        } catch (ignored) {}\r\n                      }\r\n                    }\r\n\r\n                    setRemoteUsers((prev) => {\r\n                      const remoteUsers = [...prev];\r\n                      const idx = remoteUsers.findIndex(\r\n                        (user) => user.uid === publishingUser.uid,\r\n                      );\r\n\r\n                      if (idx > -1) {\r\n                        remoteUsers[idx].audioTrack = publishingUser.audioTrack;\r\n                        remoteUsers[idx].hasAudio = publishingUser.hasAudio;\r\n                        remoteUsers[idx].videoTrack = publishingUser.videoTrack;\r\n                        remoteUsers[idx].hasVideo = publishingUser.hasVideo;\r\n                      }\r\n\r\n                      return remoteUsers;\r\n                    });\r\n                  }\r\n                } catch (error) {\r\n                  console.error(`Error subscribing track: ${error.message}`);\r\n                }\r\n              },\r\n            );\r\n\r\n            agoraClient.current.on(\r\n              \"user-unpublished\",\r\n              async (unPublishingUser, mediaType) => {\r\n                try {\r\n                  await agoraClient.current.unsubscribe(\r\n                    unPublishingUser,\r\n                    mediaType,\r\n                  );\r\n\r\n                  if (unPublishingUser.uid > 1e9) {\r\n                    setRemoteUsers((prev) => {\r\n                      const remoteUsers = [...prev];\r\n                      const idx = remoteUsers.findIndex(\r\n                        (user) => user.uid === unPublishingUser.uid - 1e9,\r\n                      );\r\n\r\n                      if (idx > -1) {\r\n                        remoteUsers[idx].screenTrack =\r\n                          unPublishingUser.videoTrack;\r\n                        remoteUsers[idx].hasScreen = unPublishingUser.hasVideo;\r\n                      }\r\n\r\n                      return remoteUsers;\r\n                    });\r\n\r\n                    if (unPublishingUser.uid - 1e9 === userRef.current.id) {\r\n                      await unPublishScreen();\r\n                    }\r\n                  } else if (unPublishingUser.uid > 1e6) {\r\n                    setRemoteUsers((prev) => {\r\n                      const remoteUsers = [...prev];\r\n                      const idx = remoteUsers.findIndex(\r\n                        (user) => user.uid === unPublishingUser.uid - 1e6,\r\n                      );\r\n\r\n                      if (idx > -1) {\r\n                        remoteUsers[idx].dimTrack = unPublishingUser.videoTrack;\r\n                        remoteUsers[idx].hasDim = unPublishingUser.hasVideo;\r\n                      }\r\n\r\n                      return remoteUsers;\r\n                    });\r\n\r\n                    if (unPublishingUser.uid - 1e6 === userRef.current.id) {\r\n                      await unPublishDim();\r\n                    }\r\n                  } else {\r\n                    setRemoteUsers((prev) => {\r\n                      const remoteUsers = [...prev];\r\n                      const idx = remoteUsers.findIndex(\r\n                        (user) => user.uid === unPublishingUser.uid,\r\n                      );\r\n\r\n                      if (idx > -1) {\r\n                        remoteUsers[idx].audioTrack =\r\n                          unPublishingUser.audioTrack;\r\n                        remoteUsers[idx].hasAudio = unPublishingUser.hasAudio;\r\n                        remoteUsers[idx].videoTrack =\r\n                          unPublishingUser.videoTrack;\r\n                        remoteUsers[idx].hasVideo = unPublishingUser.hasVideo;\r\n                      }\r\n\r\n                      return remoteUsers;\r\n                    });\r\n                  }\r\n                } catch (error) {\r\n                  console.error(`Error un-subscribing track: ${error.message}`);\r\n                }\r\n              },\r\n            );\r\n\r\n            agoraClient.current.on(\"user-info-updated\", (uid) => {\r\n              const remoteUser = agoraClient.current.remoteUsers.find(\r\n                (remoteUser) => remoteUser.uid === uid,\r\n              );\r\n\r\n              if (remoteUser !== null) {\r\n                setRemoteUsers((prev) => {\r\n                  const remoteUsers = [...prev];\r\n                  const idx = remoteUsers.findIndex(\r\n                    (user) => user.uid === remoteUser.uid,\r\n                  );\r\n\r\n                  if (idx > -1) {\r\n                    remoteUsers[idx].audioTrack = remoteUser.audioTrack;\r\n                    remoteUsers[idx].hasAudio = remoteUser.hasAudio;\r\n                    remoteUsers[idx].videoTrack = remoteUser.videoTrack;\r\n                    remoteUsers[idx].hasVideo = remoteUser.hasVideo;\r\n                  }\r\n\r\n                  return remoteUsers;\r\n                });\r\n              }\r\n            });\r\n\r\n            agoraClient.current.on(\"volume-indicator\", (arr) => {\r\n              if (!arr?.length) return;\r\n\r\n              const myVol =\r\n                arr.find((vol) => vol.uid === userRef.current.id)?.level || 0;\r\n\r\n              setTalking(myVol >= 30);\r\n\r\n              setRemoteUsers((prev) => {\r\n                const remoteUsers = [...prev];\r\n\r\n                arr.forEach((vol) => {\r\n                  const idx = remoteUsers.findIndex(\r\n                    (user) => user.uid === vol.uid,\r\n                  );\r\n\r\n                  if (idx > -1) {\r\n                    remoteUsers[idx].talking = vol.level >= 30;\r\n                  }\r\n                });\r\n\r\n                return remoteUsers;\r\n              });\r\n            });\r\n\r\n            setMeeting(_meeting);\r\n            initMeeting(_meeting);\r\n            if (searchParams.get(\"type\") === \"desk\") {\r\n              setDeskType(\"desk\");\r\n            }\r\n          } else {\r\n            navigate(\"/meetings\");\r\n          }\r\n        } catch (error) {\r\n          console.error(`Error fetching meeting details ${error.message}`);\r\n          navigate(\"/meetings\");\r\n        }\r\n      }\r\n    })();\r\n  }, [\r\n    initMeeting,\r\n    navigate,\r\n    meetingId,\r\n    user,\r\n    handleSystemMsg,\r\n    unPublishScreen,\r\n    unPublishDim,\r\n    SystemMessage,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (chatRoomId) {\r\n      (async () => {\r\n        try {\r\n          let cursor = -1;\r\n          let systemMessages = [];\r\n\r\n          while (true) {\r\n            const { messages } =\r\n              await agoraChatClient.current.getHistoryMessages({\r\n                chatType: \"chatRoom\",\r\n                targetId: chatRoomId,\r\n                searchDirection: \"down\",\r\n                pageSize: 50,\r\n                cursor,\r\n              });\r\n\r\n            if (messages.length === 0) break;\r\n\r\n            const normalMsgs = messages.filter((message) => {\r\n              if (isSystemMsg(message.msg)) {\r\n                systemMessages.push(message);\r\n                return false;\r\n              } else {\r\n                return true;\r\n              }\r\n            });\r\n\r\n            setMessages((prev) => [\r\n              ...prev,\r\n              ...normalMsgs.map((message) => {\r\n                const name = message.msg.split(\"%%%\")[0];\r\n                const profileImage = message.msg.split(\"%%%\")[1];\r\n                const text = message.msg.split(\"%%%\")[2];\r\n\r\n                return {\r\n                  from: message.from,\r\n                  msg: text,\r\n                  profileImage,\r\n                  name,\r\n                  owner: Number(message.from) === userRef.current.id,\r\n                };\r\n              }),\r\n            ]);\r\n\r\n            cursor = messages[messages.length - 1].id;\r\n          }\r\n\r\n          let shareFile = null;\r\n          let whiteboardRoomId = null;\r\n          let shareDim = null;\r\n          let permissions = {};\r\n          let sharedFiles = [];\r\n          let counterSharedData = {};\r\n          let sharedHolomeetId = null;\r\n\r\n          systemMessages.forEach(async (message) => {\r\n            console.warn(message);\r\n            if (message.msg.includes(\"HOSTJOINED\")) {\r\n              shareFile = null;\r\n              whiteboardRoomId = null;\r\n              shareDim = null;\r\n              sharedHolomeetId = null;\r\n            } else if (message.msg.includes(\"ENDFILEPREVIEW\")) {\r\n              shareFile = null;\r\n            } else if (message.msg.includes(\"ENDWHITEBOARD\")) {\r\n              whiteboardRoomId = null;\r\n            } else if (message.msg.includes(\"ENDDIM\")) {\r\n              shareDim = null;\r\n            } else if (message.msg.includes(\"SHAREWHITEBOARD\")) {\r\n              const roomId = message.msg.split(\"%%%\")[3];\r\n              whiteboardRoomId = roomId;\r\n            } else if (message.msg.includes(\"SHAREDIM\")) {\r\n              const dimId = message.msg.split(\"%%%\")[3];\r\n              shareDim = dimId;\r\n            } else if (message.msg.includes(\"PERMISSIONS\")) {\r\n              try {\r\n                const perms = JSON.parse(message.msg.split(\"%%%\")[2]);\r\n                permissions = perms;\r\n              } catch (ignored) {}\r\n            } else if (message.msg.includes(\"COUNTERHOSTSENDDATA\")) {\r\n              try {\r\n                const sharedData = JSON.parse(message.msg.split(\"%%%\")[2]);\r\n                counterSharedData = sharedData;\r\n              } catch (ignored) {}\r\n            } else if (message.msg.includes(\"SHAREDFILES\")) {\r\n              try {\r\n                const files = JSON.parse(message.msg.split(\"%%%\")[2]);\r\n                sharedFiles = files;\r\n              } catch (ignored) {}\r\n            } else if (message.msg.includes(\"PREVIEWFILE\")) {\r\n              try {\r\n                const file = JSON.parse(message.msg.split(\"%%%\")[3]);\r\n                shareFile = file;\r\n              } catch (ignored) {}\r\n            } else if (message.msg.includes(\"SETHOLOMEET\")) {\r\n              try {\r\n                const holomeetId = JSON.parse(message.msg.split(\"%%%\")[2]);\r\n                sharedHolomeetId = holomeetId;\r\n              } catch (ignored) {}\r\n            }\r\n          });\r\n\r\n          if (isHost && sharedHolomeetId) {\r\n            SystemMessage.setHolomeet(null);\r\n            forceMuteMic();\r\n            unPublishCamera();\r\n            forceSoundMute();\r\n          }\r\n\r\n          setPermissions(permissions);\r\n          setSharedFiles(sharedFiles);\r\n          setCounterSharedData(counterSharedData);\r\n          setSharedHolomeetId(Number(sharedHolomeetId));\r\n\r\n          const isHostPresent = participantsRef.current?.some(\r\n            (p) => p.uid === meetingRef.current?.customerId,\r\n          );\r\n\r\n          if (!isHostRef.current && isHostPresent) {\r\n            if (shareFile) {\r\n              notification.info({\r\n                message: \"Host is sharing a file.\",\r\n              });\r\n              setSharingFile(shareFile);\r\n            }\r\n\r\n            if (whiteboardRoomId) {\r\n              notification.info({\r\n                message: \"Host is sharing a whiteboard.\",\r\n              });\r\n              joinWhiteboardRoom(whiteboardRoomId);\r\n            }\r\n\r\n            if (shareDim) {\r\n              notification.info({\r\n                message:\r\n                  'Host is sharing a dimension. Click \"Join Dimension\" to join the shared dimension.',\r\n              });\r\n              setSharedDimId(Number(shareDim));\r\n            }\r\n          }\r\n\r\n          setLoading(false);\r\n        } catch (error) {\r\n          console.error(\"Failed to fetch chat history\", error);\r\n        }\r\n      })();\r\n    }\r\n  }, [joinWhiteboardRoom, chatRoomId]);\r\n\r\n  useEffect(() => {\r\n    if (isHost) {\r\n      SystemMessage.changePermissions(permissions);\r\n    }\r\n  }, [isHost, SystemMessage, permissions]);\r\n\r\n  useEffect(() => {\r\n    if (isHost) {\r\n      SystemMessage.changeSharedFiles(sharedFiles);\r\n    }\r\n  }, [isHost, SystemMessage, sharedFiles]);\r\n\r\n  useEffect(() => {\r\n    if (!isHost) {\r\n      SystemMessage.changeCounterUserSharedData(counterSharedData);\r\n    }\r\n  }, [isHost, SystemMessage, counterSharedData]);\r\n\r\n  useEffect(() => {\r\n    if (!isHost && !permissions.screen) unPublishScreen();\r\n\r\n    if (!isHost && !permissions.mic) forceMuteMic();\r\n\r\n    if (!isHost && !permissions.cam) unPublishCamera();\r\n\r\n    if (fastboard) {\r\n      if (isHost || permissions.whiteboard) fastboard.room.setWritable(true);\r\n      else fastboard.room.setWritable(false);\r\n    }\r\n  }, [\r\n    isHost,\r\n    fastboard,\r\n    permissions,\r\n    unPublishScreen,\r\n    forceMuteMic,\r\n    unPublishCamera,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    userRef.current = user;\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    soundMutedRef.current = soundMuted;\r\n  }, [soundMuted]);\r\n\r\n  useEffect(() => {\r\n    chatRoomIdRef.current = chatRoomId;\r\n  }, [chatRoomId]);\r\n\r\n  useEffect(() => {\r\n    isHostRef.current = isHost;\r\n  }, [isHost]);\r\n\r\n  useEffect(() => {\r\n    meetingRef.current = meeting;\r\n  }, [meeting]);\r\n\r\n  useEffect(() => {\r\n    participantsRef.current = participants;\r\n  }, [participants]);\r\n\r\n  if (!meetingId) {\r\n    notification.error({ message: \"Invalid meet link\" });\r\n    navigate(\"/new-meet\", { replace: true });\r\n    return null;\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <div\r\n        style={{ width: \"100vw\", height: \"100vh\", background: \"#fff\" }}\r\n        className=\"center-items\"\r\n      >\r\n        <Row gutter={[0, 30]}>\r\n          <Col xs={24}>\r\n            <Row justify={\"center\"}>\r\n              <Image preview={false} src={logo} alt=\"vbooling Logo\" />\r\n            </Row>\r\n          </Col>\r\n          <Col xs={24}>\r\n            <Row justify={\"center\"}>\r\n              <LoadingOutlined />\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const inviteMenu = (\r\n    <Menu\r\n      items={[\r\n        {\r\n          key: \"1\",\r\n          label: (\r\n            <Row align=\"middle\" gutter={[6, 0]}>\r\n              <Col>\r\n                <Row align=\"middle\">\r\n                  <LinkSVG\r\n                    color=\"#fff\"\r\n                    style={{ width: \"11px\", height: \"11px\" }}\r\n                  />\r\n                </Row>\r\n              </Col>\r\n              <Col>\r\n                <Typography.Text className=\"fz-14 fw-400 wc\">\r\n                  Copy Meeting URL\r\n                </Typography.Text>\r\n              </Col>\r\n            </Row>\r\n          ),\r\n          onClick: () => {\r\n            message.info(\"Meeting URL Copied\");\r\n            navigator.clipboard.writeText(window.location.href);\r\n          },\r\n        },\r\n        {\r\n          key: \"2\",\r\n          label: (\r\n            <Dropdown\r\n              placement=\"bottomRight\"\r\n              trigger={[\"click\"]}\r\n              open={inviteParticipantsPopup}\r\n              dropdownRender={() => (\r\n                <InviteFriends\r\n                  setInviteParticipantsPopup={setInviteParticipantsPopup}\r\n                />\r\n              )}\r\n              destroyPopupOnHide\r\n              getPopupContainer={() =>\r\n                document.getElementById(\"inviteParticipants\")\r\n              }\r\n              onOpenChange={(e) => {\r\n                setInviteParticipantsPopup(e);\r\n              }}\r\n            >\r\n              <Row align=\"middle\" gutter={[6, 0]}>\r\n                <Col>\r\n                  <Row align=\"middle\">\r\n                    <AddUserSVG style={{ width: \"14px\", height: \"14px\" }} />\r\n                  </Row>\r\n                </Col>\r\n                <Col>\r\n                  <Typography.Text className=\"fz-14 fw-400 wc\">\r\n                    Invite Friend\r\n                  </Typography.Text>\r\n                </Col>\r\n              </Row>\r\n            </Dropdown>\r\n          ),\r\n          className: \"fz-14 fw-400 wc\",\r\n          onClick: () => setInviteParticipantsPopup(true),\r\n        },\r\n      ]}\r\n      style={{\r\n        background: \"rgba(0, 0, 0, 0.4)\",\r\n        boxShadow: \"0 4px 30px rgba(0, 0, 0, 0.1)\",\r\n        backdropFilter: \"blur(10px)\",\r\n        color: \"#fff\",\r\n      }}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"virtual-support\" gutter={[32, 32]} justify=\"center\">\r\n        <Col {...(hideSide ? null : { xs: 24, xl: hideSide ? 2 : 8 })}>\r\n          <Row wrap={false} className=\"h-100\">\r\n            <Col\r\n              flex={hideSide && 1}\r\n              className=\"virtual-support-nav-sider-holder\"\r\n            >\r\n              <div\r\n                className=\"virtual-support-nav-sider\"\r\n                style={{ borderRadius: hideSide && \"30px\" }}\r\n              >\r\n                <MeetNavigateSide\r\n                  isHost={isHost}\r\n                  activeBtn={activeBtn}\r\n                  setActiveBtn={setActiveBtn}\r\n                  setHideSide={setHideSide}\r\n                  sharedDimId={sharedDimId}\r\n                  askedForCounter={askedForCounter}\r\n                />\r\n              </div>\r\n            </Col>\r\n            {!hideSide && (screenSize.xl || screenSize.xxl) && (\r\n              <Col flex={1} className=\"virtual-support-aside-hide\">\r\n                <div className=\"virtual-support-aside\">\r\n                  <MeetAsaider\r\n                    isHost={isHost}\r\n                    chatLoading={!chatRoomId}\r\n                    messages={messages}\r\n                    sendMessage={sendMessage}\r\n                    participants={participants}\r\n                    activeBtn={activeBtn}\r\n                    setActiveBtn={setActiveBtn}\r\n                    SystemMessage={SystemMessage}\r\n                    shareWhiteboard={shareWhiteboard}\r\n                    permissions={permissions}\r\n                    sharedFiles={sharedFiles}\r\n                    setSharedFiles={setSharedFiles}\r\n                    sharedDimId={sharedDimId}\r\n                    sharingDimId={sharingDimId}\r\n                    unPublishScreen={unPublishScreen}\r\n                    publishScreen={publishScreen}\r\n                    sharingScreen={localScreenTrack?.enabled}\r\n                    sharingDim={!!sharingDimId}\r\n                    sharingFile={!!sharingFile}\r\n                    sharingWhiteboard={!!fastboard}\r\n                    setHideSide={setHideSide}\r\n                    fastboard={fastboard}\r\n                    joinedSharedDim={joinedSharedDim}\r\n                    setJoinedSharedDim={setJoinedSharedDim}\r\n                    setAskedForCounter={setAskedForCounter}\r\n                    counterFormData={counterFormData}\r\n                    counterSharedData={counterSharedData}\r\n                    dimensionFrames={dimensionFrames}\r\n                    iframeRef={iframeRef}\r\n                  />\r\n                </div>\r\n              </Col>\r\n            )}\r\n          </Row>\r\n        </Col>\r\n\r\n        <Col\r\n          {...(hideSide\r\n            ? { flex: 1 }\r\n            : {\r\n                xs: 24,\r\n                md: 24,\r\n                xl: hideSide ? 22 : 16,\r\n                xxl: hideSide ? 22 : 16,\r\n              })}\r\n        >\r\n          <Row justify=\"center\" gutter={[0, 20]} style={{ height: \"100%\" }}>\r\n            <Col\r\n              xs={24}\r\n              className=\"virtual-support-main\"\r\n              style={{ padding: deskType === \"desk\" && \"0px\" }}\r\n            >\r\n              {deskType !== \"desk\" && (\r\n                <>\r\n                  <Row\r\n                    align=\"middle\"\r\n                    justify=\"space-between\"\r\n                    style={{\r\n                      marginBottom: \"1rem\",\r\n                      borderBottom: \"1px solid #E5E5EAD9\",\r\n                      padding: \"24px 0\",\r\n                    }}\r\n                  >\r\n                    <Typography.Text className=\"fz-18 fw-600\">\r\n                      Vindo\r\n                    </Typography.Text>\r\n                    <Dropdown trigger={[\"click\"]} overlay={inviteMenu}>\r\n                      <Row\r\n                        align=\"middle\"\r\n                        className=\"clickable\"\r\n                        gutter={[8, 0]}\r\n                        id=\"inviteParticipants\"\r\n                      >\r\n                        <Col>\r\n                          <Row align=\"middle\">\r\n                            <ParticipantsSVG\r\n                              style={{ width: \"16px\", height: \"16px\" }}\r\n                              color=\"#0129B7\"\r\n                            />\r\n                          </Row>\r\n                        </Col>\r\n\r\n                        <Col>\r\n                          <Typography.Text className=\"fw-400 invite-gradiant-text\">\r\n                            Invite Participant\r\n                          </Typography.Text>\r\n                        </Col>\r\n                      </Row>\r\n                    </Dropdown>\r\n                  </Row>\r\n\r\n                  <Row>\r\n                    {otherScreens.length > 4 ? (\r\n                      <Col xs={0} md={0} lg={24}>\r\n                        <CustomSlider responsive={slideResponsive}>\r\n                          {otherScreens.map((screen) => (\r\n                            <MeetingScreen\r\n                              key={screen.screenId}\r\n                              screen={screen}\r\n                              setMainScreen={setMainScreen}\r\n                              iframeRef={iframeRef}\r\n                              setIframeRef={setIframeRef}\r\n                              setCounterSharedData={setCounterSharedData}\r\n                            />\r\n                          ))}\r\n                        </CustomSlider>\r\n                      </Col>\r\n                    ) : (\r\n                      <Col xs={24} md={24} lg={24}>\r\n                        <div className=\"friend-screen-container\">\r\n                          {otherScreens.map((screen) => (\r\n                            <MeetingScreen\r\n                              key={screen.screenId}\r\n                              screen={screen}\r\n                              setMainScreen={setMainScreen}\r\n                              iframeRef={iframeRef}\r\n                              setIframeRef={setIframeRef}\r\n                              setCounterSharedData={setCounterSharedData}\r\n                            />\r\n                          ))}\r\n                        </div>\r\n                      </Col>\r\n                    )}\r\n                  </Row>\r\n                </>\r\n              )}\r\n\r\n              {sharedDimId && joinedSharedDim ? (\r\n                <MeetingScreen\r\n                  isMain\r\n                  key={`${sharedDimId}_dim`}\r\n                  screen={sharedDimScreenObj}\r\n                  setMainScreen={setMainScreen}\r\n                  publishDim={publishDim}\r\n                  audioMuted={audioMuted}\r\n                  soundMuted={soundMuted}\r\n                  cameraEnabled={localVideoTrack?.enabled}\r\n                  toggleAudioMute={toggleAudioMute}\r\n                  toggleVideo={toggleVideo}\r\n                  toggleSoundMute={toggleSoundMute}\r\n                  publishScreen={publishScreen}\r\n                  unPublishScreen={unPublishScreen}\r\n                  sharingScreen={localScreenTrack?.enabled}\r\n                  SystemMessage={SystemMessage}\r\n                  unPublishDim={unPublishDim}\r\n                  sharingDim={!!sharingDimId}\r\n                  sharingFile={!!sharingFile}\r\n                  sharingWhiteboard={!!fastboard}\r\n                  isHost={isHost}\r\n                  joinedSharedDim={joinedSharedDim}\r\n                  setJoinedSharedDim={setJoinedSharedDim}\r\n                  sharedDimId={sharedDimId}\r\n                  permissions={permissions}\r\n                  setPermissions={setPermissions}\r\n                  setActiveBtn={setActiveBtn}\r\n                  activeBtn={activeBtn}\r\n                  askedForCounter={askedForCounter}\r\n                  setHideSide={setHideSide}\r\n                  messages={messages}\r\n                  sendMessage={sendMessage}\r\n                  participants={participants}\r\n                  shareWhiteboard={shareWhiteboard}\r\n                  sharedFiles={sharedFiles}\r\n                  setSharedFiles={setSharedFiles}\r\n                  sharingDimId={sharingDimId}\r\n                  fastboard={fastboard}\r\n                  setAskedForCounter={setAskedForCounter}\r\n                  counterFormData={counterFormData}\r\n                  counterSharedData={counterSharedData}\r\n                  localScreenTrack={localScreenTrack}\r\n                  chatRoomId={chatRoomId}\r\n                  screenSize={screenSize}\r\n                  hideSide={hideSide}\r\n                  setDimensionFrames={setDimensionFrames}\r\n                  iframeRef={iframeRef}\r\n                  setIframeRef={setIframeRef}\r\n                  setCounterSharedData={setCounterSharedData}\r\n                />\r\n              ) : !!sharingDimId ? (\r\n                <MeetingScreen\r\n                  isMain\r\n                  key={`${sharingDimId}_dim`}\r\n                  screen={sharingDimScreenObj}\r\n                  setMainScreen={setMainScreen}\r\n                  publishDim={publishDim}\r\n                  audioMuted={audioMuted}\r\n                  soundMuted={soundMuted}\r\n                  cameraEnabled={localVideoTrack?.enabled}\r\n                  toggleAudioMute={toggleAudioMute}\r\n                  toggleVideo={toggleVideo}\r\n                  toggleSoundMute={toggleSoundMute}\r\n                  publishScreen={publishScreen}\r\n                  unPublishScreen={unPublishScreen}\r\n                  sharingScreen={localScreenTrack?.enabled}\r\n                  SystemMessage={SystemMessage}\r\n                  unPublishDim={unPublishDim}\r\n                  sharingDim={!!sharingDimId}\r\n                  sharingFile={!!sharingFile}\r\n                  sharingWhiteboard={!!fastboard}\r\n                  isHost={isHost}\r\n                  joinedSharedDim={joinedSharedDim}\r\n                  setJoinedSharedDim={setJoinedSharedDim}\r\n                  sharedDimId={sharedDimId}\r\n                  permissions={permissions}\r\n                  setPermissions={setPermissions}\r\n                  activeBtn={activeBtn}\r\n                  askedForCounter={askedForCounter}\r\n                  setHideSide={setHideSide}\r\n                  setActiveBtn={setActiveBtn}\r\n                  messages={messages}\r\n                  sendMessage={sendMessage}\r\n                  participants={participants}\r\n                  shareWhiteboard={shareWhiteboard}\r\n                  sharedFiles={sharedFiles}\r\n                  setSharedFiles={setSharedFiles}\r\n                  sharingDimId={sharingDimId}\r\n                  fastboard={fastboard}\r\n                  setAskedForCounter={setAskedForCounter}\r\n                  counterFormData={counterFormData}\r\n                  counterSharedData={counterSharedData}\r\n                  localScreenTrack={localScreenTrack}\r\n                  chatRoomId={chatRoomId}\r\n                  screenSize={screenSize}\r\n                  hideSide={hideSide}\r\n                  setDimensionFrames={setDimensionFrames}\r\n                  iframeRef={iframeRef}\r\n                  setIframeRef={setIframeRef}\r\n                  setCounterSharedData={setCounterSharedData}\r\n                />\r\n              ) : !!sharingFile ? (\r\n                <MeetingScreen\r\n                  isMain\r\n                  key={`${sharingFile.id}_file`}\r\n                  screen={sharingFileScreenObj}\r\n                  setMainScreen={setMainScreen}\r\n                  publishDim={publishDim}\r\n                  audioMuted={audioMuted}\r\n                  soundMuted={soundMuted}\r\n                  cameraEnabled={localVideoTrack?.enabled}\r\n                  toggleAudioMute={toggleAudioMute}\r\n                  toggleVideo={toggleVideo}\r\n                  toggleSoundMute={toggleSoundMute}\r\n                  publishScreen={publishScreen}\r\n                  unPublishScreen={unPublishScreen}\r\n                  sharingScreen={localScreenTrack?.enabled}\r\n                  SystemMessage={SystemMessage}\r\n                  unPublishDim={unPublishDim}\r\n                  sharingDim={!!sharingDimId}\r\n                  sharingFile={!!sharingFile}\r\n                  sharingWhiteboard={!!fastboard}\r\n                  isHost={isHost}\r\n                  joinedSharedDim={joinedSharedDim}\r\n                  setJoinedSharedDim={setJoinedSharedDim}\r\n                  sharedDimId={sharedDimId}\r\n                  permissions={permissions}\r\n                  setPermissions={setPermissions}\r\n                  setActiveBtn={setActiveBtn}\r\n                  activeBtn={activeBtn}\r\n                  askedForCounter={askedForCounter}\r\n                  setHideSide={setHideSide}\r\n                  messages={messages}\r\n                  sendMessage={sendMessage}\r\n                  participants={participants}\r\n                  shareWhiteboard={shareWhiteboard}\r\n                  sharedFiles={sharedFiles}\r\n                  setSharedFiles={setSharedFiles}\r\n                  sharingDimId={sharingDimId}\r\n                  fastboard={fastboard}\r\n                  setAskedForCounter={setAskedForCounter}\r\n                  counterFormData={counterFormData}\r\n                  counterSharedData={counterSharedData}\r\n                  localScreenTrack={localScreenTrack}\r\n                  chatRoomId={chatRoomId}\r\n                  screenSize={screenSize}\r\n                  hideSide={hideSide}\r\n                  setDimensionFrames={setDimensionFrames}\r\n                  iframeRef={iframeRef}\r\n                  setIframeRef={setIframeRef}\r\n                  setCounterSharedData={setCounterSharedData}\r\n                />\r\n              ) : !!fastboard ? (\r\n                <MeetingScreen\r\n                  isMain\r\n                  key={`${sharedDimId}_whiteboard`}\r\n                  screen={whiteboardScreenObj}\r\n                  setMainScreen={setMainScreen}\r\n                  publishDim={publishDim}\r\n                  audioMuted={audioMuted}\r\n                  soundMuted={soundMuted}\r\n                  cameraEnabled={localVideoTrack?.enabled}\r\n                  toggleAudioMute={toggleAudioMute}\r\n                  toggleVideo={toggleVideo}\r\n                  toggleSoundMute={toggleSoundMute}\r\n                  publishScreen={publishScreen}\r\n                  unPublishScreen={unPublishScreen}\r\n                  sharingScreen={localScreenTrack?.enabled}\r\n                  SystemMessage={SystemMessage}\r\n                  unPublishDim={unPublishDim}\r\n                  sharingDim={!!sharingDimId}\r\n                  sharingFile={!!sharingFile}\r\n                  sharingWhiteboard={!!fastboard}\r\n                  isHost={isHost}\r\n                  joinedSharedDim={joinedSharedDim}\r\n                  setJoinedSharedDim={setJoinedSharedDim}\r\n                  sharedDimId={sharedDimId}\r\n                  permissions={permissions}\r\n                  setPermissions={setPermissions}\r\n                  setActiveBtn={setActiveBtn}\r\n                  activeBtn={activeBtn}\r\n                  askedForCounter={askedForCounter}\r\n                  setHideSide={setHideSide}\r\n                  messages={messages}\r\n                  sendMessage={sendMessage}\r\n                  participants={participants}\r\n                  shareWhiteboard={shareWhiteboard}\r\n                  sharedFiles={sharedFiles}\r\n                  setSharedFiles={setSharedFiles}\r\n                  sharingDimId={sharingDimId}\r\n                  fastboard={fastboard}\r\n                  setAskedForCounter={setAskedForCounter}\r\n                  counterFormData={counterFormData}\r\n                  counterSharedData={counterSharedData}\r\n                  localScreenTrack={localScreenTrack}\r\n                  chatRoomId={chatRoomId}\r\n                  screenSize={screenSize}\r\n                  hideSide={hideSide}\r\n                  setDimensionFrames={setDimensionFrames}\r\n                  iframeRef={iframeRef}\r\n                  setIframeRef={setIframeRef}\r\n                  setCounterSharedData={setCounterSharedData}\r\n                />\r\n              ) : deskType === \"desk\" ? (\r\n                <MeetingScreen\r\n                  isMain\r\n                  key={mainScreen?.screenId}\r\n                  screen={deskScreenObj}\r\n                  setMainScreen={setMainScreen}\r\n                  publishDim={publishDim}\r\n                  audioMuted={audioMuted}\r\n                  soundMuted={soundMuted}\r\n                  cameraEnabled={localVideoTrack?.enabled}\r\n                  toggleAudioMute={toggleAudioMute}\r\n                  toggleVideo={toggleVideo}\r\n                  toggleSoundMute={toggleSoundMute}\r\n                  publishScreen={publishScreen}\r\n                  unPublishScreen={unPublishScreen}\r\n                  sharingScreen={localScreenTrack?.enabled}\r\n                  SystemMessage={SystemMessage}\r\n                  unPublishDim={unPublishDim}\r\n                  sharingDim={!!sharingDimId}\r\n                  sharingFile={!!sharingFile}\r\n                  sharingWhiteboard={!!fastboard}\r\n                  isHost={isHost}\r\n                  joinedSharedDim={joinedSharedDim}\r\n                  setJoinedSharedDim={setJoinedSharedDim}\r\n                  sharedDimId={sharedDimId}\r\n                  permissions={permissions}\r\n                  setPermissions={setPermissions}\r\n                  setActiveBtn={setActiveBtn}\r\n                  activeBtn={activeBtn}\r\n                  askedForCounter={askedForCounter}\r\n                  setHideSide={setHideSide}\r\n                  messages={messages}\r\n                  sendMessage={sendMessage}\r\n                  participants={participants}\r\n                  shareWhiteboard={shareWhiteboard}\r\n                  sharedFiles={sharedFiles}\r\n                  setSharedFiles={setSharedFiles}\r\n                  sharingDimId={sharingDimId}\r\n                  fastboard={fastboard}\r\n                  setAskedForCounter={setAskedForCounter}\r\n                  counterFormData={counterFormData}\r\n                  counterSharedData={counterSharedData}\r\n                  localScreenTrack={localScreenTrack}\r\n                  chatRoomId={chatRoomId}\r\n                  screenSize={screenSize}\r\n                  hideSide={hideSide}\r\n                  setDimensionFrames={setDimensionFrames}\r\n                  deskId={meetingId}\r\n                  iframeRef={iframeRef}\r\n                  setIframeRef={setIframeRef}\r\n                  setCounterSharedData={setCounterSharedData}\r\n                />\r\n              ) : (\r\n                <MeetingScreen\r\n                  isMain\r\n                  key={mainScreen?.screenId}\r\n                  screen={mainScreen}\r\n                  setMainScreen={setMainScreen}\r\n                  publishDim={publishDim}\r\n                  audioMuted={audioMuted}\r\n                  soundMuted={soundMuted}\r\n                  cameraEnabled={localVideoTrack?.enabled}\r\n                  toggleAudioMute={toggleAudioMute}\r\n                  toggleVideo={toggleVideo}\r\n                  toggleSoundMute={toggleSoundMute}\r\n                  publishScreen={publishScreen}\r\n                  unPublishScreen={unPublishScreen}\r\n                  sharingScreen={localScreenTrack?.enabled}\r\n                  SystemMessage={SystemMessage}\r\n                  unPublishDim={unPublishDim}\r\n                  sharingDim={!!sharingDimId}\r\n                  sharingFile={!!sharingFile}\r\n                  sharingWhiteboard={!!fastboard}\r\n                  isHost={isHost}\r\n                  joinedSharedDim={joinedSharedDim}\r\n                  setJoinedSharedDim={setJoinedSharedDim}\r\n                  sharedDimId={sharedDimId}\r\n                  permissions={permissions}\r\n                  setPermissions={setPermissions}\r\n                  setActiveBtn={setActiveBtn}\r\n                  activeBtn={activeBtn}\r\n                  askedForCounter={askedForCounter}\r\n                  setHideSide={setHideSide}\r\n                  messages={messages}\r\n                  sendMessage={sendMessage}\r\n                  participants={participants}\r\n                  shareWhiteboard={shareWhiteboard}\r\n                  sharedFiles={sharedFiles}\r\n                  setSharedFiles={setSharedFiles}\r\n                  sharingDimId={sharingDimId}\r\n                  fastboard={fastboard}\r\n                  setAskedForCounter={setAskedForCounter}\r\n                  counterFormData={counterFormData}\r\n                  counterSharedData={counterSharedData}\r\n                  localScreenTrack={localScreenTrack}\r\n                  chatRoomId={chatRoomId}\r\n                  screenSize={screenSize}\r\n                  hideSide={hideSide}\r\n                  setDimensionFrames={setDimensionFrames}\r\n                  iframeRef={iframeRef}\r\n                  setIframeRef={setIframeRef}\r\n                  setCounterSharedData={setCounterSharedData}\r\n                />\r\n              )}\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n\r\n        {!screenSize.xl && (\r\n          <Col xs={24} xl={0}>\r\n            <div className=\"virtual-support-aside\">\r\n              <MeetAsaider\r\n                isHost={isHost}\r\n                chatLoading={!chatRoomId}\r\n                messages={messages}\r\n                sendMessage={sendMessage}\r\n                participants={participants}\r\n                activeBtn={activeBtn}\r\n                setActiveBtn={setActiveBtn}\r\n                SystemMessage={SystemMessage}\r\n                shareWhiteboard={shareWhiteboard}\r\n                permissions={permissions}\r\n                sharedFiles={sharedFiles}\r\n                setSharedFiles={setSharedFiles}\r\n                sharedDimId={sharedDimId}\r\n                sharingDimId={sharingDimId}\r\n                unPublishScreen={unPublishScreen}\r\n                publishScreen={publishScreen}\r\n                sharingScreen={localScreenTrack?.enabled}\r\n                sharingDim={!!sharingDimId}\r\n                sharingFile={!!sharingFile}\r\n                sharingWhiteboard={!!fastboard}\r\n                joinedSharedDim={joinedSharedDim}\r\n                setJoinedSharedDim={setJoinedSharedDim}\r\n                fastboard={fastboard}\r\n                setAskedForCounter={setAskedForCounter}\r\n                counterFormData={counterFormData}\r\n                counterSharedData={counterSharedData}\r\n                dimensionFrames={dimensionFrames}\r\n                iframeRef={iframeRef}\r\n              />\r\n            </div>\r\n          </Col>\r\n        )}\r\n      </Row>\r\n      {!!sharedHolomeetId && (\r\n        <HolomeetDim\r\n          SystemMessage={SystemMessage}\r\n          sharedHolomeetId={sharedHolomeetId}\r\n          isHost={isHost}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { useCallback, useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  Col,\r\n  ConfigProvider,\r\n  Form,\r\n  Input,\r\n  Row,\r\n  Select,\r\n  Tooltip,\r\n  Typography,\r\n  notification,\r\n} from \"antd\";\r\nimport AgoraRTC from \"agora-rtc-sdk-ng\";\r\n\r\nimport userContext from \"context/userContext\";\r\nimport {\r\n  VoiceSVG,\r\n  MuteVoiceSVG,\r\n  VideoSVG,\r\n  NoVideoSVG,\r\n  ArrowDownSVG,\r\n} from \"assets/jsx-svg\";\r\nimport joinBg from \"assets/images/startMeetBg.png\";\r\nimport defualtAvatar from \"assets/images/defualtAvatar.png\";\r\nimport DragContext from \"./DragContext\";\r\nimport VirtualSupportView from \"./VirtualSupportView\";\r\nimport \"./styles.css\";\r\nimport AuthService from \"services/auth.service\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function UserInteractionHOC() {\r\n  const navigate = useNavigate();\r\n  const { user, setUser } = useContext(userContext);\r\n  const [interacted, setInteracted] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [mics, setMics] = useState([]);\r\n  const [cams, setCams] = useState([]);\r\n  const [playbackDevices, setPlaybackDevices] = useState([]);\r\n  const [selectedMic, setSelectedMic] = useState(undefined);\r\n  const [selectedCam, setSelectedCam] = useState(undefined);\r\n  const [selectedPlaybackDevice, setSelectedPlaybackDevice] =\r\n    useState(undefined);\r\n  const [micMuted, setMicMuted] = useState(false);\r\n  const [camActive, setCamActive] = useState(false);\r\n  const [settingsActive, setSettingsActive] = useState(false);\r\n  const [dragData, setDragData] = useState({\r\n    dragging: false,\r\n    dropText: \"\",\r\n    dimId: null,\r\n    file: null,\r\n  });\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  const onSignAsGuestFinish = useCallback(\r\n    async (values) => {\r\n      try {\r\n        setInteracted(true);\r\n\r\n        const {\r\n          data: { data: user },\r\n        } = await AuthService.loginAsGuest({\r\n          firstName: values.userEmail.split(\"@\")[0],\r\n          lastName: \"( Guest )\",\r\n          email: values.userEmail,\r\n        });\r\n        localStorage.setItem(\r\n          \"vverse-token\",\r\n          user.customerWebDashboardAccessToken,\r\n        );\r\n        setUser(user);\r\n        axios.defaults.headers.authorization =\r\n          user.customerWebDashboardAccessToken;\r\n      } catch (err) {\r\n        setUser(null);\r\n        if (err.response.status === 409) {\r\n          notification.info({\r\n            message: \"User already exist, login to enter the meet\",\r\n          });\r\n          navigate(\"/login\");\r\n        }\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n      setSelectedMic(values.audioInput);\r\n      setSelectedCam(values.cameraInput);\r\n      setSelectedPlaybackDevice(values.soundOutput);\r\n    },\r\n    [navigate, setUser],\r\n  );\r\n\r\n  const onFinish = useCallback(async (values) => {\r\n    setSelectedMic(values.audioInput);\r\n    setSelectedCam(values.cameraInput);\r\n    setSelectedPlaybackDevice(values.soundOutput);\r\n    setInteracted(true);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      let mics = [],\r\n        cams = [],\r\n        playbackDevices = [];\r\n\r\n      try {\r\n        mics = await AgoraRTC.getMicrophones(false);\r\n      } catch (ignored) {}\r\n\r\n      try {\r\n        cams = await AgoraRTC.getCameras(false);\r\n      } catch (ignored) {}\r\n\r\n      try {\r\n        playbackDevices = await AgoraRTC.getPlaybackDevices(false);\r\n      } catch (ignored) {}\r\n\r\n      setMics(mics);\r\n      setCams(cams);\r\n      setPlaybackDevices(playbackDevices);\r\n      form.setFieldsValue({\r\n        audioInput: mics[0]?.deviceId,\r\n        cameraInput: cams[0]?.deviceId,\r\n        soundOutput: playbackDevices[0]?.deviceId,\r\n      });\r\n    })();\r\n  }, [form]);\r\n\r\n  if (!interacted && !user) {\r\n    return (\r\n      <main className=\"join-meet\" style={{ background: `url(${joinBg})` }}>\r\n        <div className=\"blur\">\r\n          <div className=\"join-meet-main\">\r\n            <Row gutter={[0, 16]}>\r\n              <Col xs={24}>\r\n                <Row justify=\"center\">\r\n                  <Avatar src={defualtAvatar} className=\"join-meet-img\" />\r\n                </Row>\r\n              </Col>\r\n\r\n              <Col xs={24}>\r\n                <Row align=\"middle\" justify=\"center\" gutter={[16, 16]}>\r\n                  <Col>\r\n                    <Tooltip title={micMuted ? \"Unmute\" : \"Mute\"}>\r\n                      <div\r\n                        className=\"icon-wrapper\"\r\n                        onClick={\r\n                          mics.length ? () => setMicMuted(!micMuted) : (_) => _\r\n                        }\r\n                      >\r\n                        {micMuted || !mics.length ? (\r\n                          <MuteVoiceSVG\r\n                            color=\"#fff\"\r\n                            style={{ width: \"20px\", height: \"20px\" }}\r\n                          />\r\n                        ) : (\r\n                          <VoiceSVG\r\n                            color=\"#fff\"\r\n                            style={{ width: \"20px\", height: \"20px\" }}\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    </Tooltip>\r\n                  </Col>\r\n                  <Col>\r\n                    <Tooltip\r\n                      title={!camActive ? \"Enable Camera\" : \"Disable Camera\"}\r\n                    >\r\n                      <div\r\n                        className=\"icon-wrapper\"\r\n                        onClick={\r\n                          cams.length\r\n                            ? () => setCamActive(!camActive)\r\n                            : (_) => _\r\n                        }\r\n                      >\r\n                        {!camActive || !cams.length ? (\r\n                          <NoVideoSVG\r\n                            color=\"#fff\"\r\n                            style={{ width: \"20px\", height: \"20px\" }}\r\n                          />\r\n                        ) : (\r\n                          <VideoSVG\r\n                            color=\"#fff\"\r\n                            style={{ width: \"20px\", height: \"20px\" }}\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    </Tooltip>\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n\r\n              <Col xs={24}>\r\n                <ConfigProvider\r\n                  theme={{\r\n                    token: {\r\n                      colorPrimary: \"#fff\",\r\n                      colorPrimaryText: \"#fff\",\r\n                      borderRadius: \"14px\",\r\n                      colorBorder: \"#fff\",\r\n                      colorText: \"#fff\",\r\n                      colorTextPlaceholder: \"#fff\",\r\n                    },\r\n                    components: {\r\n                      Select: {\r\n                        colorBgBase: \"black\",\r\n                        colorBgContainer: \"transparent\",\r\n                        borderRadius: \"14px\",\r\n                        controlHeight: \"50px\",\r\n                        colorBgElevated: \"#fff\",\r\n                        lineHeight: \"50px\",\r\n                        colorTextQuaternary: \"#fff\",\r\n                        colorText: \"#000\",\r\n                        colorInfoActive: \"#fff\",\r\n                        paddingXXS: \"6px\",\r\n                      },\r\n                    },\r\n                  }}\r\n                >\r\n                  <Form\r\n                    form={form}\r\n                    onFinish={onSignAsGuestFinish}\r\n                    layout=\"vertical\"\r\n                    requiredMark={false}\r\n                    className=\"join-meet-form\"\r\n                  >\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        justifyContent: settingsActive\r\n                          ? \"flex-start\"\r\n                          : \"center\",\r\n                        columnGap: \"6px\",\r\n                        flexDirection: \"column\",\r\n                      }}\r\n                    >\r\n                      <Form.Item\r\n                        name=\"userEmail\"\r\n                        label=\"Enter Your Email\"\r\n                        className=\"w-100\"\r\n                        style={{ padding: \"0 1rem\" }}\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            message: \"Please Enter Your Email\",\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <Input placeholder=\"Enter Here\" type=\"email\" />\r\n                      </Form.Item>\r\n\r\n                      <div\r\n                        className=\"device-settings clickable\"\r\n                        style={{\r\n                          marginBottom: settingsActive ? \"0.3rem\" : \"0\",\r\n                          marginTop: \"16px\",\r\n                        }}\r\n                        onClick={() => {\r\n                          if (settingsActive) {\r\n                            const settingsEl =\r\n                              document.getElementById(\"settingsSelect\");\r\n\r\n                            settingsEl.classList.add(\"settings-close\");\r\n                            setTimeout(() => {\r\n                              settingsEl.classList.remove(\"settings-close\");\r\n                              setSettingsActive((prev) => !prev);\r\n                            }, 300);\r\n                          } else {\r\n                            setSettingsActive((prev) => !prev);\r\n                          }\r\n                        }}\r\n                      >\r\n                        <Typography.Text className=\"fw-500\">\r\n                          Device Settings\r\n                        </Typography.Text>\r\n\r\n                        <ArrowDownSVG\r\n                          color=\"#fff\"\r\n                          style={{\r\n                            width: \"10px\",\r\n                            height: \"10px\",\r\n                            rotate: settingsActive ? \"180deg\" : \"0deg\",\r\n                            transition: \"all 0.4s ease-in-out\",\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div id=\"settingsSelect\">\r\n                      {settingsActive && (\r\n                        <div className=\"settings-select\">\r\n                          <Form.Item label=\"Audio Input\" name=\"audioInput\">\r\n                            <Select\r\n                              options={mics.map((mic) => ({\r\n                                value: mic.deviceId,\r\n                                label: mic.label,\r\n                              }))}\r\n                              placeholder=\"Select audio input\"\r\n                            />\r\n                          </Form.Item>\r\n\r\n                          <Form.Item label=\"Camera Input\" name=\"cameraInput\">\r\n                            <Select\r\n                              options={cams.map((cam) => ({\r\n                                value: cam.deviceId,\r\n                                label: cam.label,\r\n                              }))}\r\n                              placeholder=\"Select camera input\"\r\n                            />\r\n                          </Form.Item>\r\n\r\n                          <Form.Item label=\"Sound Output\" name=\"soundOutput\">\r\n                            <Select\r\n                              options={playbackDevices.map((device) => ({\r\n                                value: device.deviceId,\r\n                                label: device.label,\r\n                              }))}\r\n                              placeholder=\"Select sound input\"\r\n                            />\r\n                          </Form.Item>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n\r\n                    <Form.Item>\r\n                      <Row justify=\"center\">\r\n                        <Button\r\n                          htmlType=\"submit\"\r\n                          type=\"primary\"\r\n                          style={{\r\n                            borderRadius: \"32px\",\r\n                            paddingInline: \"1.5rem\",\r\n                          }}\r\n                          className=\"join-meet-btn\"\r\n                          loading={loading}\r\n                        >\r\n                          Join Meeting\r\n                        </Button>\r\n                      </Row>\r\n                    </Form.Item>\r\n                  </Form>\r\n                </ConfigProvider>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    );\r\n  } else if (!interacted && user) {\r\n    return (\r\n      <main className=\"join-meet\" style={{ background: `url(${joinBg})` }}>\r\n        <div className=\"blur\">\r\n          <div className=\"join-meet-main\">\r\n            <Row gutter={[0, 16]}>\r\n              <Col xs={24}>\r\n                <Row justify=\"center\">\r\n                  <Avatar src={user.profileImage} className=\"join-meet-img\" />\r\n                </Row>\r\n              </Col>\r\n\r\n              <Col xs={24}>\r\n                <Row justify=\"center\">\r\n                  <Typography.Text className=\"wc fw-500\">\r\n                    {user.fullName}\r\n                  </Typography.Text>\r\n                </Row>\r\n              </Col>\r\n              <Col xs={24}>\r\n                <Row align=\"middle\" justify=\"center\" gutter={[16, 16]}>\r\n                  <Col>\r\n                    <Tooltip title={micMuted ? \"Unmute\" : \"Mute\"}>\r\n                      <div\r\n                        className=\"icon-wrapper\"\r\n                        onClick={\r\n                          mics.length ? () => setMicMuted(!micMuted) : (_) => _\r\n                        }\r\n                      >\r\n                        {micMuted || !mics.length ? (\r\n                          <MuteVoiceSVG\r\n                            color=\"#fff\"\r\n                            style={{ width: \"20px\", height: \"20px\" }}\r\n                          />\r\n                        ) : (\r\n                          <VoiceSVG\r\n                            color=\"#fff\"\r\n                            style={{ width: \"20px\", height: \"20px\" }}\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    </Tooltip>\r\n                  </Col>\r\n                  <Col>\r\n                    <Tooltip\r\n                      title={!camActive ? \"Enable Camera\" : \"Disable Camera\"}\r\n                    >\r\n                      <div\r\n                        className=\"icon-wrapper\"\r\n                        onClick={\r\n                          cams.length\r\n                            ? () => setCamActive(!camActive)\r\n                            : (_) => _\r\n                        }\r\n                      >\r\n                        {!camActive || !cams.length ? (\r\n                          <NoVideoSVG\r\n                            color=\"#fff\"\r\n                            style={{ width: \"20px\", height: \"20px\" }}\r\n                          />\r\n                        ) : (\r\n                          <VideoSVG\r\n                            color=\"#fff\"\r\n                            style={{ width: \"20px\", height: \"20px\" }}\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    </Tooltip>\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n\r\n              <Col xs={24}>\r\n                <ConfigProvider\r\n                  theme={{\r\n                    token: {\r\n                      colorPrimary: \"#fff\",\r\n                      colorPrimaryText: \"#fff\",\r\n                      borderRadius: \"14px\",\r\n                      colorBorder: \"#fff\",\r\n                      colorText: \"#fff\",\r\n                      colorTextPlaceholder: \"#fff\",\r\n                    },\r\n                    components: {\r\n                      Select: {\r\n                        colorBgBase: \"black\",\r\n                        colorBgContainer: \"transparent\",\r\n                        borderRadius: \"14px\",\r\n                        controlHeight: \"50px\",\r\n                        colorBgElevated: \"#fff\",\r\n                        lineHeight: \"50px\",\r\n                        colorTextQuaternary: \"#fff\",\r\n                        colorText: \"#000\",\r\n                        colorInfoActive: \"#fff\",\r\n                        paddingXXS: \"6px\",\r\n                      },\r\n                    },\r\n                  }}\r\n                >\r\n                  <Form\r\n                    form={form}\r\n                    onFinish={onFinish}\r\n                    layout=\"vertical\"\r\n                    requiredMark={false}\r\n                    className=\"join-meet-form\"\r\n                  >\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        justifyContent: settingsActive\r\n                          ? \"flex-start\"\r\n                          : \"center\",\r\n                        alignItems: \"center\",\r\n                        columnGap: \"6px\",\r\n                      }}\r\n                    >\r\n                      <div\r\n                        className=\"device-settings clickable\"\r\n                        style={{\r\n                          marginBottom: settingsActive ? \"0.3rem\" : \"0\",\r\n                        }}\r\n                        onClick={() => {\r\n                          if (settingsActive) {\r\n                            const settingsEl =\r\n                              document.getElementById(\"settingsSelect\");\r\n\r\n                            settingsEl.classList.add(\"settings-close\");\r\n                            setTimeout(() => {\r\n                              settingsEl.classList.remove(\"settings-close\");\r\n                              setSettingsActive((prev) => !prev);\r\n                            }, 300);\r\n                          } else {\r\n                            setSettingsActive((prev) => !prev);\r\n                          }\r\n                        }}\r\n                      >\r\n                        <Typography.Text className=\"fw-500\">\r\n                          Device Settings\r\n                        </Typography.Text>\r\n\r\n                        <ArrowDownSVG\r\n                          color=\"#fff\"\r\n                          style={{\r\n                            width: \"10px\",\r\n                            height: \"10px\",\r\n                            rotate: settingsActive ? \"180deg\" : \"0deg\",\r\n                            transition: \"all 0.4s ease-in-out\",\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div id=\"settingsSelect\">\r\n                      {settingsActive && (\r\n                        <div className=\"settings-select\">\r\n                          <Form.Item label=\"Audio Input\" name=\"audioInput\">\r\n                            <Select\r\n                              options={mics.map((mic) => ({\r\n                                value: mic.deviceId,\r\n                                label: mic.label,\r\n                              }))}\r\n                              placeholder=\"Select audio input\"\r\n                            />\r\n                          </Form.Item>\r\n\r\n                          <Form.Item label=\"Camera Input\" name=\"cameraInput\">\r\n                            <Select\r\n                              options={cams.map((cam) => ({\r\n                                value: cam.deviceId,\r\n                                label: cam.label,\r\n                              }))}\r\n                              placeholder=\"Select camera input\"\r\n                            />\r\n                          </Form.Item>\r\n\r\n                          <Form.Item label=\"Sound Output\" name=\"soundOutput\">\r\n                            <Select\r\n                              options={playbackDevices.map((device) => ({\r\n                                value: device.deviceId,\r\n                                label: device.label,\r\n                              }))}\r\n                              placeholder=\"Select sound input\"\r\n                            />\r\n                          </Form.Item>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n\r\n                    <Form.Item>\r\n                      <Row justify=\"center\">\r\n                        <Button\r\n                          htmlType=\"submit\"\r\n                          type=\"primary\"\r\n                          style={{\r\n                            borderRadius: \"32px\",\r\n                            paddingInline: \"1.5rem\",\r\n                          }}\r\n                          className=\"join-meet-btn\"\r\n                        >\r\n                          Join Meeting\r\n                        </Button>\r\n                      </Row>\r\n                    </Form.Item>\r\n                  </Form>\r\n                </ConfigProvider>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    );\r\n  } else if (user) {\r\n    return (\r\n      <DragContext.Provider value={{ dragData, setDragData }}>\r\n        <VirtualSupportView\r\n          micId={selectedMic}\r\n          camId={selectedCam}\r\n          playbackDeviceId={selectedPlaybackDevice}\r\n          startMicMuted={micMuted}\r\n          startCamActive={camActive}\r\n        />\r\n      </DragContext.Provider>\r\n    );\r\n  }\r\n}\r\n"],"names":["createContext","SERVICE_BASE","API_BASE","addDimension","data","axios","deleteDimension","id","renameDimension","getMyDimensions","params","limit","offset","getHoloCategory","getHoloDimensionByCategory","MeetingCallControls","isHost","audioMuted","cameraEnabled","soundMuted","toggleAudioMute","toggleVideo","toggleSoundMute","SystemMessage","unPublishScreen","sharingScreen","sharingDim","unPublishDim","userFullName","joinedSharedDim","setJoinedSharedDim","sharedDimId","controlSettingsShow","setControlSettingsShow","permissions","setPermissions","showArrow","setActiveBtn","sharingWhiteboard","sharingFile","useState","dimModalOpen","setDimModalOpen","myDims","setMyDims","navigate","useNavigate","useEffect","MetaverseService","rows","console","log","message","settingsMenu","useMemo","justify","align","className","xs","style","marginBottom","onClick","screen","chat","mic","cam","whiteboard","canDownload","endMenu","endMeeting","type","padding","position","prev","color","width","height","rotate","transition","md","ellipsis","background","borderRadius","flex","title","wrap","gutter","placement","trigger","overlay","marginInlineEnd","marginTop","length","footer","closable","onCancel","open","centered","map","dim","span","shareDim","maxHeight","objectFit","src","image","preview","customerDimensionTranslations","name","MeetNavigateSide","activeBtn","setHideSide","askedForCounter","setMainFullScreen","user","useContext","userContext","warn","logo","lg","icon","ParticipantsSVG","SMSSVG","item","mouseLeaveDelay","PackageSVG","ToolsSVG","CounterSVG","VirtualMeetSVG","AlbumsSVG","CustomerServiceFilled","hologram","fontSize","profileImage","size","MeetingCallParticipants","participants","onSearch","onChange","prefix","placeholder","border","participant","profileImg","marginInlineStart","hasAudio","talking","hasVideo","uid","COMMON_BASE","CART_BASE","getProductList","mainCategory","subCategory","sortBy","getProductById","productId","getCategories","getMyProductList","addToCart","getCartData","InventorySection","setProductSelected","products","setProducts","categories","setCategories","loading","setLoading","productLoading","setProductLoading","selectedCategory","setSelectedCategory","ShopService","then","catch","axiosCatch","finally","JSON","stringify","overflowX","paddingBottom","AppstoreOutlined","category","maxWidth","alt","businessCategoryTranslations","find","lang","languageCode","product","businessProductVariants","images","defualtImage","businessProductTranslations","price","PlusOutlined","ProductSection","productSelected","productData","setProductData","currentProductVariant","setCurrentProductVariant","productQuantity","setProductQuantity","selectedVariant","setSelectedVariant","attributes","setAttributes","options","setOptions","addLoading","setAddLoading","productInfo","split","found","variant","join","margin","display","justifyContent","alignItems","shape","controls","min","max","quantity","value","e","att","index","attributeName","colorCheck","attOptions","option","attId","enOptionName","backgroundColor","outline","attr","defaulttOption","copy","foundIndex","findIndex","filter","p","customerId","productVariantId","notification","spinning","LoadingOutlined","MeetChat","messages","sendMessage","noMarign","useForm","form","messageListEndRef","useRef","onFinish","values","msg","trim","setFieldValue","current","scrollIntoView","flexDirection","owner","ref","minHeight","overflowAnchor","scrollMarginBottom","disabled","htmlType","MyCart","cart","setCart","res","businessProductVariant","to","ShareTools","shareWhiteboard","publishScreen","activeTool","setActiveTool","activeToolLoading","setActiveToolLoading","tools","defaultLabel","ScreenSVG","ShareDimenstionSVG","WhiteBoardSVG","FileSVG","LiveSVG","tool","stopDim","stopWhiteboard","stopFilePreview","textAlign","MetaExperience","sharingDimId","setDragData","DragContext","overflowY","draggable","onDragStart","dragging","dropText","dimId","file","onDragEnd","preventDefault","stopPropagation","categoriesImages","Education","Business","Fun","Holomeet","setCategory","meetingId","useParams","xl","xxl","HolomeetRooms","metaverse","setMetaverse","room","defaultDim","description","FilesSharing","sharedFiles","setSharedFiles","uploading","setUploading","useDrivePicker","openPicker","draggerProps","multiple","action","beforeUpload","info","CommonService","fileUrl","uploadedFiles","newFile","url","isGoogleDrive","embedUrl","content","showUploadList","onFileDelete","useCallback","handleOpenPicker","clientId","process","developerKey","viewId","showUploadView","showUploadFolders","supportDrives","multiselect","callbackFunction","docs","newFiles","mimeType","customRequest","onSuccess","fileList","cursor","filesExtentionsImg","fileType","imageSrc","png","pdf","doc","xls","zip","jpg","fileImg","SharedFiles","userSelect","window","YoutubeLink","fastboard","Form","RegExp","test","link","regex","videoId","match","manager","addApp","kind","provider","resetFields","requiredMark","layout","label","rules","required","Counter","counterForm","counterActiveBtn","setCounterActiveBtn","setAskedForCounter","askAllUserForCounter","formData","fileName","customField","counterButtons","btn","FullNameSVG","SignatureSVG","CounterFileSVG","PluseSVG","CounterParticipants","participantsForm","selectedUsers","setSelectedUsers","searchValue","setSearchValue","showParticipants","setShowParticipants","toLowerCase","includes","getFieldValue","users","askSelectedUserForCounter","undefined","theme","components","Checkbox","borderRadiusSM","colorBgContainer","colorPrimary","colorWhite","colorPrimaryHover","colorPrimaryBorder","paddingRight","target","scale","noStyle","rowGap","fontWeight","textOverflow","ProductionTools","dimensionFrames","iframeRef","dragedMedia","setDragedMedia","mediaLibrary","setMediaLibrary","contentWindow","unityInstance","SendMessage","SocialEventService","onDragOver","onDrop","screenId","newFrame","texture","videoImg","media","LiveStream","selectedCam","setSelectedCam","cams","borderColor","camImage","WifiOutlined","CounterForUser","counterFormData","filesDraggerProps","userName","fullName","signatureDraggerProps","error","changeCounterUserSharedData","hisGuests","fullNameGuests","guest","guestName","forEach","signature","customFieldGuests","guestCustomField","fields","add","remove","key","restField","MinusCircleOutlined","block","alignContent","CounterSharedData","counterSharedData","sharedData","Object","keys","push","borderBottom","paddingTop","userData","fontStyle","files","field","entries","addDesk","listDesks","dimensionId","getMyDesks","getDeskInfo","editDesk","Desks","desksData","setDesksData","DeskService","dimensionDesks","desk","status","location","reload","EmbedLink","MeetAsaider","chatLoading","sharedHolomeetId","EyeInvisibleFilled","AvatarMain","toAbsoluteUrl","origin","pathname","getFileTypeFromMimeType","mime","MeetingScreen","setMainScreen","publishDim","isMain","localScreenTrack","chatRoomId","screenSize","hideSide","setDimensionFrames","deskId","setIframeRef","setCounterSharedData","unityCanvas","setUnityCanvas","whiteboardContainer","setWhiteboardContainer","mainFullScreen","dragData","toggleFullScreen","shareFile","meetingControlsProps","cGAccessToken","configScript","document","createElement","href","rel","div","innerHTML","ele","scriptName","top","head","append","createUnityInstance","canvas","config","progress","platform","onResponseInputRecived","counter","hasOwnProperty","hostShareCounterData","setCounterFromUnity","updateDimensionFrames","frames","setFrames","web3","ethereum","alert","loaderScript","onload","lat","lon","body","playTrack","createUI","enabled","createPortal","allow","class","onclick","filePath","errorComponent","onError","err","bottom","boxShadow","backdropFilter","userProfileImage","SearchUser","query","InviteFriends","setInviteParticipantsPopup","nameSearch","setNameSearch","setUsers","handleSearch","ParticipantsService","URLSearchParams","timeOutId","setTimeout","clearTimeout","token","colorPrimaryText","colorBorder","colorText","colorTextPlaceholder","Input","firstName","lastName","HolomeetDim","Number","setHolomeet","slideResponsive","breakpoint","settings","slidesToShow","slidesToScroll","formatSystemMsg","isSystemMsg","VirtualSupportView","micId","camId","playbackDeviceId","startMicMuted","startCamActive","useLocation","meeting","setMeeting","setChatRoomId","setMessages","localAudioTrack","setLocalAudioTrack","localVideoTrack","setLocalVideoTrack","setLocalScreenTrack","setSoundMuted","remoteUsers","setRemoteUsers","mainScreenId","setMainScreenId","setSharingDimId","setSharingFile","setSharedDimId","setFastboard","setTalking","inviteParticipantsPopup","setCounterFormData","setSharedHolomeetId","deskType","setDeskType","joinTriesRef","soundMutedRef","useSearchParams","searchParams","userRef","micIdRef","camIdRef","playbackDeviceIdRef","startMicMutedRef","startCamActiveRef","chatRoomIdRef","meetingRef","agoraClient","AgoraRTC","mode","codec","agoraScreenClient","agoraDimClient","agoraChatClient","AgoraChat","appKey","Grid","isHostRef","muted","screens","arr","userId","track","localTracks","trackMediaType","play","remoteUser","videoTrack","hasScreen","screenTrack","hasDim","dimTrack","mainScreen","myRtcScreen","randomVideoScreen","otherScreens","me","remote","participantsRef","sharingFileScreenObj","sharingDimScreenObj","sharedDimScreenObj","deskScreenObj","whiteboardScreenObj","_text","isOpened","send","chatType","text","from","publishAudio","AEC","microphoneId","audioTrack","setMuted","publish","publishCamera","cameraId","unPublishCamera","close","unpublish","stream","captureStream","getVideoTracks","mediaStreamTrack","optimizationMode","localDimTrack","whiteboardRoomId","changePermissions","changeSharedFiles","destroy","dataAskedFor","usersAndDataAskedFor","holomeetId","defualtValueForPer","closeAllPer","forceMuteMic","forceSoundMute","joinWhiteboardRoom","whiteboardRoomToken","createFastboard","sdkConfig","appIdentifier","region","joinRoom","uuid","roomToken","userPayload","nickName","managerConfig","apps","initMeeting","appId","agoraRte","rtcToken","rtcScreenToken","rtcDimToken","toString","agoraToken","chatToken","getChatRooms","pagenum","pagesize","rooms","roomId","Error","joinChatRoom","handleSystemMsg","perms","parse","ignored","senderUser","sharedFullName","sharedSignature","sharedfile","sharedCustomField","stop","_meeting","removeAllListeners","removeEventHandler","enableAudioVolumeIndicator","addEventHandler","onConnected","onDisconnected","onTextMessage","on","joinedUser","leavingUser","publishingUser","mediaType","subscribe","idx","setPlaybackDevice","unPublishingUser","unsubscribe","myVol","vol","level","get","systemMessages","getHistoryMessages","targetId","searchDirection","pageSize","normalMsgs","isHostPresent","some","setWritable","replace","inviteMenu","items","navigator","clipboard","writeText","dropdownRender","destroyPopupOnHide","getPopupContainer","getElementById","onOpenChange","CustomSlider","responsive","UserInteractionHOC","setUser","interacted","setInteracted","mics","setMics","setCams","playbackDevices","setPlaybackDevices","selectedMic","setSelectedMic","selectedPlaybackDevice","setSelectedPlaybackDevice","micMuted","setMicMuted","camActive","setCamActive","settingsActive","setSettingsActive","onSignAsGuestFinish","AuthService","userEmail","email","localStorage","setItem","customerWebDashboardAccessToken","response","audioInput","cameraInput","soundOutput","setFieldsValue","deviceId","joinBg","_","Select","colorBgBase","controlHeight","colorBgElevated","lineHeight","colorTextQuaternary","colorInfoActive","paddingXXS","columnGap","settingsEl","classList","device","paddingInline","Provider"],"sourceRoot":""}