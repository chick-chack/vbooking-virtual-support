{"version":3,"file":"static/js/390.95bba212.chunk.js","mappings":"qcAYe,SAASA,EAAM,GAAmB,IAAjBC,EAAY,EAAZA,aAC9B,GAAeC,EAAAA,EAAAA,KAARC,GAAiB,YAAb,GACX,GAA8BC,EAAAA,EAAAA,WAAS,GAAM,eAAtCC,EAAO,KAAEC,EAAU,KAClBC,GAAYC,EAAAA,EAAAA,YAAWC,EAAAA,GAAvBF,QACFG,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEXC,EAAK,yCAAG,WAAOC,GAAM,sFAIyB,OAHlDT,GAAW,GACHU,EAAoBD,EAApBC,MAAOC,EAAaF,EAAbE,SACTC,EAAc,IAAIC,gBAAgBT,EAASU,QAC3CC,EAAOH,EAAYI,IAAI,gBAAkB,IAAI,EAAD,gBAItCC,EAAAA,EAAAA,MAAkB,CAC1BP,MAAOA,EACPC,SAAUA,IACT,KAAD,WAJcO,EAAI,EAAlBC,KAAQA,KAKVC,aAAaC,QACX,eACAH,EAAKI,iCAEPrB,EAAQiB,GACRK,EAAAA,EAAAA,SAAAA,QAAAA,cACEL,EAAKI,gCACPhB,EAASS,GAAM,mDAEfS,EAAAA,EAAAA,GAAW,EAAD,IAAQ,QAEA,OAFA,UAElBxB,GAAW,GAAO,6EAErB,gBAzBU,sCA2BX,OACE,UAAC,IAAI,CAACH,KAAMA,EAAM4B,OAAO,WAAWC,SAAUlB,EAAOmB,cAAc,EAAM,WACvE,UAAC,IAAG,CAACC,OAAQ,CAAC,EAAG,IAAI,WACnB,SAAC,IAAG,CAACC,GAAI,GAAG,UACV,SAAC,SAAS,CACRC,KAAK,QACLC,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,wBAGbC,MAAM,QACNC,UAAU,QAAO,UAEjB,SAAC,IAAK,CACJC,KAAK,QACLC,YAAY,mBACZF,UAAU,sBAIhB,SAAC,IAAG,CAACN,GAAI,GAAG,UACV,SAAC,SAAS,CACRC,KAAK,WACLC,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,0BAGbC,MAAM,WACNC,UAAU,QAAO,UAEjB,SAAC,aAAc,CACbE,YAAY,sBACZF,UAAU,yBAMlB,UAAC,IAAG,CAACG,QAAQ,gBAAgBC,MAAM,SAAQ,WACzC,SAAC,IAAG,CAACV,GAAI,GAAG,UACV,SAAC,SAAe,CACdM,UAAU,YACVK,MAAO,CAAEC,MAAO,WAChBC,QAAS,kBAAM/C,EAAa,iBAAiB,EAAC,SAC/C,6BAIH,SAAC,IAAG,CAACkC,GAAI,GAAG,UACV,SAAC,SAAS,CAACM,UAAU,QAAO,UAC1B,SAAC,KAAM,CACLpC,QAASA,EACTqC,KAAK,UACLD,UAAU,cACVQ,SAAS,SAAQ,SAClB,oBAOP,SAAC,IAAO,WACN,SAAC,SAAe,CAACH,MAAO,CAAEC,MAAO,WAAY,SAAC,UAGhD,UAAC,IAAG,CAACb,OAAQ,CAAC,EAAG,IAAKO,UAAU,OAAM,WACpC,SAAC,IAAG,CAACN,GAAI,GAAG,UACV,UAAC,IAAG,CAACS,QAAQ,SAASV,OAAQ,CAAC,GAAI,IAAI,WACrC,SAAC,IAAG,WACF,gBAAKO,UAAU,cAAa,UAC1B,SAAC,IAAG,CAACI,MAAM,gBAGf,SAAC,IAAG,WACF,gBAAKJ,UAAU,cAAa,UAC1B,SAAC,IAAG,CAACI,MAAM,SAAQ,UACjB,SAAC,KAAS,WAIhB,SAAC,IAAG,WACF,gBAAKJ,UAAU,cAAa,UAC1B,SAAC,IAAG,CAACI,MAAM,qBAKnB,SAAC,IAAG,CAACV,GAAI,GAAG,UACV,SAAC,IAAG,CAACS,QAAQ,SAAQ,UACnB,UAAC,SAAe,CAACE,MAAO,CAAEC,MAAO,WAAY,UAAC,0BAE5C,iBACED,MAAO,CAAEC,MAAO,QAChBN,UAAU,YACVO,QAAS,kBAAM/C,EAAa,IAAI,EAAC,SAClC,uBAQT,SAAC,IAAG,CAAC6C,MAAO,CAAEI,UAAW,QAAS,UAChC,UAAC,SAAe,CAACT,UAAU,QAAO,UAAC,6CAEjC,iBAAMK,MAAO,CAAEC,MAAO,WAAY,SAAC,0BAA4B,QAC/D,iBAAMD,MAAO,CAAEC,MAAO,WAAY,SAAC,6BAK7C,C,qCCvJe,SAASI,EAAO,GAAmB,IAAjBlD,EAAY,EAAZA,aAC/B,GAAeC,EAAAA,EAAAA,KAARC,GAAiB,YAAb,GACX,GAA8BC,EAAAA,EAAAA,WAAS,GAAM,eAAtCC,EAAO,KAAEC,EAAU,KAClBC,GAAYC,EAAAA,EAAAA,YAAWC,EAAAA,GAAvBF,QACFG,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEXuC,EAAM,yCAAG,WAAOrC,GAAM,oFAIwB,OAHlDT,GAAW,GAC0BS,EAA7BsC,gBAAoB5B,GAAI,OAAKV,EAAM,GACrCG,EAAc,IAAIC,gBAAgBT,EAASU,QAC3CC,EAAOH,EAAYI,IAAI,gBAAkB,IAAI,EAAD,gBAKtCC,EAAAA,EAAAA,OAAmBE,GAAM,KAAD,WADlBD,EAAI,EAAlBC,KAAQA,KAGVC,aAAaC,QACX,eACAH,EAAKI,iCAEPC,EAAAA,EAAAA,SAAAA,QAAAA,cACEL,EAAKI,gCACPrB,EAAQiB,GACRZ,EAASS,GAAM,mDAEfS,EAAAA,EAAAA,GAAW,EAAD,IAAQ,QAEA,OAFA,UAElBxB,GAAW,GAAO,6EAErB,gBAxBW,sCA0BZ,OACE,UAAC,IAAI,CAACH,KAAMA,EAAM4B,OAAO,WAAWC,SAAUoB,EAAQnB,cAAc,EAAM,WACxE,UAAC,IAAG,CAACC,OAAQ,CAAC,EAAG,IAAI,WACnB,SAAC,IAAG,CAACC,GAAI,GAAG,UACV,SAAC,SAAS,CACRC,KAAK,QACLC,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,wBAGbC,MAAM,QACNC,UAAU,QAAO,UAEjB,SAAC,IAAK,CACJC,KAAK,QACLC,YAAY,mBACZF,UAAU,sBAIhB,SAAC,IAAG,CAACN,GAAI,GAAG,UACV,SAAC,SAAS,CACRC,KAAK,YACLC,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,4BAGbC,MAAM,aACNC,UAAU,QAAO,UAEjB,SAAC,IAAK,CAACE,YAAY,mBAAmBF,UAAU,sBAGpD,SAAC,IAAG,CAACN,GAAI,GAAG,UACV,SAAC,SAAS,CACRC,KAAK,WACLC,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,2BAGbC,MAAM,YACNC,UAAU,QAAO,UAEjB,SAAC,IAAK,CAACE,YAAY,kBAAkBF,UAAU,sBAGnD,SAAC,IAAG,CAACN,GAAI,GAAG,UACV,SAAC,SAAS,CACRC,KAAK,WACLC,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,0BAGbC,MAAM,WACNC,UAAU,QAAO,UAEjB,SAAC,aAAc,CACbE,YAAY,sBACZF,UAAU,sBAKhB,SAAC,IAAG,CAACN,GAAI,GAAG,UACV,SAAC,SAAS,CACRC,KAAK,kBACLI,MAAM,mBACNc,aAAc,CAAC,YACfjB,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,iCAEX,gBAAGgB,EAAa,EAAbA,cAAa,MAAQ,CACtBC,UAAS,SAACC,EAAGC,GACX,OAAKA,GAASH,EAAc,cAAgBG,EAGrCC,QAAQC,OACb,IAAIC,MACF,qDAJKF,QAAQG,SAOnB,EACD,GAEHrB,UAAU,QAAO,UAEjB,SAAC,aAAc,CACbE,YAAY,wBACZF,UAAU,yBAMlB,SAAC,IAAG,CAACG,QAAQ,MAAMC,MAAM,SAAQ,UAC/B,SAAC,IAAG,CAACV,GAAI,GAAG,UACV,SAAC,SAAS,CAACM,UAAU,QAAO,UAC1B,SAAC,KAAM,CACLpC,QAASA,EACTqC,KAAK,UACLD,UAAU,cACVQ,SAAS,SAAQ,SAClB,mBAOP,SAAC,IAAO,WACN,SAAC,SAAe,CAACH,MAAO,CAAEC,MAAO,WAAY,SAAC,UAGhD,UAAC,IAAG,CAACb,OAAQ,CAAC,EAAG,IAAKO,UAAU,OAAM,WACpC,SAAC,IAAG,CAACN,GAAI,GAAG,UACV,UAAC,IAAG,CAACS,QAAQ,SAASV,OAAQ,CAAC,GAAI,IAAI,WACrC,SAAC,IAAG,WACF,gBAAKO,UAAU,cAAa,UAC1B,SAAC,IAAG,CAACI,MAAM,gBAGf,SAAC,IAAG,WACF,gBAAKJ,UAAU,cAAa,UAC1B,SAAC,IAAG,CAACI,MAAM,gBAGf,SAAC,IAAG,WACF,gBAAKJ,UAAU,cAAa,UAC1B,SAAC,IAAG,CAACI,MAAM,qBAKnB,SAAC,IAAG,CAACV,GAAI,GAAG,UACV,SAAC,IAAG,CAACS,QAAQ,SAAQ,UACnB,UAAC,SAAe,CAACE,MAAO,CAAEC,MAAO,WAAY,UAAC,yBACrB,KACvB,iBACED,MAAO,CAAEC,MAAO,QAChBN,UAAU,YACVO,QAAS,kBAAM/C,EAAa,IAAI,EAAC,SAClC,wBASf,C,eCpMe,SAAS8D,EAAe,GAA6B,IAA3B9D,EAAY,EAAZA,aAAc+D,EAAQ,EAARA,SACrD,GAAe9D,EAAAA,EAAAA,KAARC,GAAiB,YAAb,GACX,GAA8BC,EAAAA,EAAAA,WAAS,GAAM,eAAtCC,EAAO,KAAEC,EAAU,KAEpB0B,EAAQ,yCAAG,WAAOjB,GAAM,4EACX,OAAjBT,GAAW,GAAM,kBAEGiB,EAAAA,EAAAA,eAA2B,CAAEP,MAAOD,EAAOC,QAAS,KAAD,EAA/DiD,EAAG,OACTD,EAASjD,EAAOC,OAChBkD,EAAAA,EAAAA,QAAqB,CAAE3B,QAAS0B,EAAIxC,KAAKc,UACzCtC,EAAa,oBAAoB,mDAEjC6B,EAAAA,EAAAA,GAAW,EAAD,IAAM,QAEE,OAFF,UAEhBxB,GAAW,GAAO,6EAErB,gBAZa,sCAcd,OACE,gBAAKmC,UAAU,iBAAgB,UAC7B,UAAC,IAAI,CACHtC,KAAMA,EACN4B,OAAO,WACPC,SAAUA,EACVC,cAAc,EAAM,WAEpB,UAAC,IAAG,CACFC,OAAQ,CAAC,EAAG,GACZW,MAAM,SACNJ,UAAU,iBACVK,MAAO,CAAEqB,MAAO,eAChBnB,QAAS,kBAAM/C,EAAa,IAAI,EAAC,WAEjC,SAAC,IAAG,WACF,SAAC,IAAG,CAAC4C,MAAM,SAAQ,UACjB,SAAC,KAAY,CAACE,MAAM,cAGxB,SAAC,IAAG,WACF,SAAC,SAAe,CAACN,UAAU,QAAO,SAAC,eAIvC,SAAC,IAAG,CAACA,UAAU,OAAM,UACnB,SAAC,UAAgB,CAAC2B,MAAO,EAAE,SAAC,uBAG9B,SAAC,IAAG,WACF,UAAC,SAAe,WAAC,oCAEf,kBAAM,qEAIV,SAAC,IAAG,CAACtB,MAAO,CAAEuB,OAAQ,eAAgB,UACpC,SAAC,SAAS,CACRjC,KAAK,QACLI,MAAM,QACNH,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,wBAGbE,UAAU,QAAO,UAEjB,SAAC,IAAK,CAACC,KAAK,QAAQC,YAAY,QAAQF,UAAU,sBAItD,SAAC,IAAG,CAACG,QAAQ,MAAK,UAChB,SAAC,SAAS,WACR,SAAC,KAAM,CACLK,SAAS,SACTP,KAAK,UACLI,MAAO,CACLqB,MAAO,QACPG,SAAU,OACVC,aAAc,QAEhBlE,QAASA,EAAQ,SAClB,cAML,SAAC,IAAG,CAACyC,MAAO,CAAEI,UAAW,SAAU,UACjC,UAAC,SAAe,CAACT,UAAU,QAAO,UAAC,4CACS,KAC1C,iBAAMK,MAAO,CAAEC,MAAO,WAAY,SAAC,0BAA4B,OAAK,KACpE,iBAAMD,MAAO,CAAEC,MAAO,WAAY,SAAC,+BAM/C,CCrGe,SAASyB,EAAiB,GAAmC,IAAjCvE,EAAY,EAAZA,aAAce,EAAK,EAALA,MAAOyD,EAAO,EAAPA,QAC9D,GAAevE,EAAAA,EAAAA,KAARC,GAAiB,YAAb,GAQLuE,EAAe,SAACC,GACpB,MAAmCA,EAAEC,OAA7BC,EAAS,EAATA,UAAWnB,EAAK,EAALA,MACnB,EAD8B,EAAJtB,KACE0C,MAAM,KAAzBC,GAA6B,YAAnB,GAGnB,GAAIrB,EAAMsB,QAAUH,GAEdI,SAASF,EAAY,IAAM,EAAG,CAEhC,IAAMG,EAAcC,SAASC,cAAc,kBAAD,OACtBH,SAASF,EAAY,IAAM,EAAC,MAI5B,OAAhBG,GACFA,EAAYG,OAEhB,CAEJ,EAEMC,EAAgB,SAACC,GACrB,IACA,EADiBA,EAAMX,OAAfxC,KACoB0C,MAAM,KAAzBC,GAA6B,YAAnB,GAEnB,IAAkB,cAAdQ,EAAMC,KAAqC,WAAdD,EAAMC,MAEjCP,SAASF,EAAY,IAAM,EAAG,CAChC5E,EAAKsF,cAAc,QAAD,OAASR,SAASF,EAAY,KAAO,IAEvD,IAAMW,EAAcP,SAASC,cAAc,kBAAD,OACtBH,SAASF,EAAY,IAAM,EAAC,MAI5B,OAAhBW,GAEFC,YAAW,WACTD,EAAYL,QACZK,EAAYE,QACd,GAAG,EAMP,CAEJ,EAWA,OACE,gBAAKnD,UAAU,iBAAgB,UAC7B,UAAC,IAAI,CACHtC,KAAMA,EACN4B,OAAO,WACPC,SAtEW,SAACjB,GAChB,IAAI8E,EAAOC,OAAO/E,OAAOA,GACzB0D,EAAQoB,EAAKE,KAAK,KAClB9F,EAAa,cACf,EAmEMgC,cAAc,EAAM,WAEpB,UAAC,IAAG,CACFC,OAAQ,CAAC,EAAG,GACZW,MAAM,SACNJ,UAAU,iBACVK,MAAO,CAAEqB,MAAO,eAChBnB,QAAS,kBAAM/C,EAAa,iBAAiB,EAAC,WAE9C,SAAC,IAAG,WACF,SAAC,IAAG,CAAC4C,MAAM,SAAQ,UACjB,SAAC,KAAY,CAACE,MAAM,cAGxB,SAAC,IAAG,WACF,SAAC,SAAe,CAACN,UAAU,QAAO,SAAC,eAIvC,SAAC,IAAG,CAACA,UAAU,OAAM,UACnB,SAAC,UAAgB,CAAC2B,MAAO,EAAE,SAAC,uBAG9B,SAAC,IAAG,WACF,UAAC,SAAe,WAAC,6CAEf,kBAAM,IAzChB,SAAsBpD,GACpB,IAAIgF,EAAQhF,EAAM8D,MAAM,KACpBmB,EAAWD,EAAM,GACjBE,EAASF,EAAM,GAGnB,OAFuBC,EAASE,MAAM,EAAG,GAAK,MAAQF,EAASE,OAAO,GAC/B,IAAMD,CAE/C,CAkCkBE,CAAapF,SAIzB,UAAC,IAAG,CACFyB,UAAU,oBACV4D,MAAM,EACNvD,MAAO,CAAEuB,OAAQ,UAAW,WAE5B,SAAC,IAAG,WACF,SAAC,SAAS,CACRjC,KAAK,SACLC,MAAO,CACL,CACEC,UAAU,EACVC,SAAS,IAEX,UAEF,SAAC,IAAK,CACJsC,UAAW,EACXzC,KAAK,QACLO,YAAY,SACZF,UAAU,kBACV6D,SAAU5B,EACV6B,UAAWjB,SAIjB,UAAC,IAAG,WACD,KACD,SAAC,SAAS,CACRlD,KAAK,SACLC,MAAO,CACL,CACEC,UAAU,EACVC,SAAS,IAEX,UAEF,SAAC,IAAK,CACJsC,UAAW,EACXlC,YAAY,SACZP,KAAK,QACLK,UAAU,kBACV6D,SAAU5B,EACV6B,UAAWjB,UAIjB,SAAC,IAAG,WACF,SAAC,SAAS,CACRlD,KAAK,SACLC,MAAO,CACL,CACEC,UAAU,EACVC,SAAS,IAEX,UAEF,SAAC,IAAK,CACJsC,UAAW,EACXlC,YAAY,SACZP,KAAK,QACLK,UAAU,kBACV6D,SAAU5B,EACV6B,UAAWjB,SAIjB,UAAC,IAAG,WACD,KACD,SAAC,SAAS,CACRlD,KAAK,SACLC,MAAO,CACL,CACEC,UAAU,EACVC,SAAS,IAEX,UAEF,SAAC,IAAK,CACJsC,UAAW,EACXlC,YAAY,SACZP,KAAK,QACLK,UAAU,kBACV6D,SAAU5B,EACV6B,UAAWjB,aAMnB,SAAC,IAAG,CAAC1C,QAAQ,MAAK,UAChB,SAAC,SAAS,WACR,SAAC,KAAM,CACLK,SAAS,SACTP,KAAK,UACLI,MAAO,CACLqB,MAAO,QACPG,SAAU,OACVC,aAAc,QACd,SACH,cAML,SAAC,IAAG,CAACzB,MAAO,CAAEI,UAAW,SAAU,UACjC,UAAC,SAAe,CAACT,UAAU,QAAO,UAAC,4CACS,KAC1C,iBAAMK,MAAO,CAAEC,MAAO,WAAY,SAAC,0BAA4B,OAAK,KACpE,iBAAMD,MAAO,CAAEC,MAAO,WAAY,SAAC,+BAM/C,CCvNe,SAASyD,EAAY,GAAgC,IAA9BvG,EAAY,EAAZA,aAAce,EAAK,EAALA,MAAO6E,EAAI,EAAJA,KACzD,GAAe3F,EAAAA,EAAAA,KAARC,GAAiB,YAAb,GACX,GAA8BC,EAAAA,EAAAA,WAAS,GAAM,eAAtCC,EAAO,KAAEC,EAAU,KAmB1B,OACE,gBAAKmC,UAAU,iBAAgB,UAC7B,UAAC,IAAI,CACHtC,KAAMA,EACN4B,OAAO,WACPC,SAtBW,SAACjB,GAChBd,EAAa,oBAEbK,GAAW,GACXiB,EAAAA,EAAAA,qBAAiC,CAC/BP,MAAAA,EACA6E,KAAMA,EACN5E,SAAUF,EAAOE,WAEhBwF,MAAK,YAAe,IAAZhF,EAAI,EAAJA,KACPyC,EAAAA,EAAAA,QAAqB,CAAE3B,QAASd,EAAKc,UACrCtC,EAAa,IACf,IACCyG,MAAM5E,EAAAA,GACN6E,SAAQ,kBAAMrG,GAAW,EAAM,GACpC,EAQM2B,cAAc,EAAM,WAEpB,UAAC,IAAG,CACFC,OAAQ,CAAC,EAAG,GACZW,MAAM,SACNJ,UAAU,iBACVK,MAAO,CAAEqB,MAAO,eAChBnB,QAAS,kBAAM/C,EAAa,IAAI,EAAC,WAEjC,SAAC,IAAG,WACF,SAAC,IAAG,CAAC4C,MAAM,SAAQ,UACjB,SAAC,KAAY,CAACE,MAAM,cAGxB,SAAC,IAAG,WACF,SAAC,SAAe,CAACN,UAAU,QAAO,SAAC,eAIvC,SAAC,IAAG,CAACA,UAAU,OAAM,UACnB,SAAC,UAAgB,CAAC2B,MAAO,EAAE,SAAC,sBAG9B,SAAC,IAAG,WACF,SAAC,SAAe,UAAC,0CAGnB,UAAC,IAAG,CAACtB,MAAO,CAAEuB,OAAQ,eAAiBnC,OAAQ,CAAC,EAAG,IAAI,WACrD,SAAC,IAAG,CAACC,GAAI,GAAG,UACV,SAAC,SAAS,CACRC,KAAK,WACLC,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,0BAGbC,MAAM,WACNC,UAAU,QAAO,UAEjB,SAAC,aAAc,CACbE,YAAY,sBACZF,UAAU,sBAKhB,SAAC,IAAG,CAACN,GAAI,GAAG,UACV,SAAC,SAAS,CACRC,KAAK,kBACLI,MAAM,mBACNc,aAAc,CAAC,YACfjB,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,iCAEX,gBAAGgB,EAAa,EAAbA,cAAa,MAAQ,CACtBC,UAAS,SAACC,EAAGC,GACX,OAAKA,GAASH,EAAc,cAAgBG,EAGrCC,QAAQC,OACb,IAAIC,MACF,qDAJKF,QAAQG,SAOnB,EACD,GAEHrB,UAAU,QAAO,UAEjB,SAAC,aAAc,CACbE,YAAY,wBACZF,UAAU,yBAMlB,SAAC,IAAG,CAACG,QAAQ,MAAMH,UAAU,OAAM,UACjC,SAAC,SAAS,WACR,SAAC,KAAM,CACLQ,SAAS,SACTP,KAAK,UACLI,MAAO,CACLqB,MAAO,QACPG,SAAU,OACVC,aAAc,QAEhBlE,QAASA,EAAQ,SAClB,cAML,SAAC,IAAG,CAACyC,MAAO,CAAEI,UAAW,SAAU,UACjC,UAAC,SAAe,CAACT,UAAU,QAAO,UAAC,4CACS,KAC1C,iBAAMK,MAAO,CAAEC,MAAO,WAAY,SAAC,0BAA4B,OAAK,KACpE,iBAAMD,MAAO,CAAEC,MAAO,WAAY,SAAC,+BAM/C,C,eCjIe,SAAS6D,IACtB,OAAkCxG,EAAAA,EAAAA,UAAS,KAAI,eAAxCyG,EAAS,KAAE5G,EAAY,KAC9B,GAA0BG,EAAAA,EAAAA,UAAS,IAAG,eAA/BY,EAAK,KAAEgD,EAAQ,KACtB,GAAwB5D,EAAAA,EAAAA,UAAS,IAAG,eAA7ByF,EAAI,KAAEpB,EAAO,KACpB,GAAsBqC,EAAAA,EAAAA,MAAfC,GAAgC,YAArB,GAQlB,OANAC,EAAAA,EAAAA,YAAU,WACuB,WAA3BD,EAAYzF,IAAI,QAClBrB,EAAa,IAEjB,GAAG,CAAC8G,KAGF,kBACEtE,UAAU,sBACVK,MAAO,CAAEmE,WAAW,OAAD,OAASC,EAAU,KAAKC,gBAAiB,QAAS,WAErE,gBAAK1E,UAAU,uBAAsB,UACnC,UAAC,IAAG,CAACG,QAAQ,gBAAgBC,MAAM,SAASX,OAAQ,CAAC,EAAG,IAAI,WAC1D,UAAC,IAAG,CAACkF,GAAI,GAAIC,GAAI,GAAIlF,GAAI,GAAG,WAC1B,UAAC,IAAG,CAACD,OAAQ,CAAC,EAAG,IAAI,WACnB,SAAC,IAAG,CAACC,GAAI,GAAG,UACV,SAAC,KAAI,CAACmF,GAAG,IAAG,UACV,SAAC,IAAK,CAACC,SAAS,EAAOC,I,gzOAG3B,SAAC,IAAG,CAACrF,GAAI,GAAG,UACV,UAAC,SAAe,CAACM,UAAU,aAAY,UAAC,4BAEtC,iBAAMK,MAAO,CAAEC,MAAO,QAAS,SAAC,eAKtC,UAAC,IAAG,CAACF,MAAM,SAASX,OAAQ,CAAC,GAAI,IAAKY,MAAO,CAAEI,UAAW,QAAS,WACjE,SAAC,IAAG,WACF,UAAC,UAAY,CACXuE,kBAAkB,QAClBC,KAAK,QACLC,SAAU,CACR5E,MAAO,UACPoE,gBAAiB,UACjBS,OAAQ,WACR,WAEF,SAAC,IAAM,CAACJ,IAAI,sEACZ,SAAC,IAAM,CAACA,IAAI,sEACZ,SAAC,IAAM,CAACA,IAAI,2EAGhB,SAAC,IAAG,WACF,SAAC,SAAe,CAAC/E,UAAU,SAAQ,SAAC,2DAM1C,SAAC,IAAG,CAAC2E,GAAI,EAAGC,GAAI,GAAIlF,GAAI,GAAG,UACzB,iBAAKM,UAAU,aAAY,WACT,MAAdoE,GAAmC,MAAdA,KACrB,UAAC,IAAI,CAACgB,UAAWhB,EAAWP,SAAU,SAAC3B,GAAC,OAAK1E,EAAa0E,EAAE,EAAC,WAC3D,SAAC,YAAY,CACXmD,KACE,SAAC,SAAe,CAACC,UAAQ,EAACtF,UAAU,QAAO,SAAC,YAI9CK,MAAO,CAAEqB,MAAO,eAAgB,UAGhC,SAACnE,EAAK,CAACC,aAAcA,KAFjB,MAIN,SAAC,YAAY,CACX6H,KACE,SAAC,SAAe,CAACC,UAAQ,EAACtF,UAAU,QAAO,SAAC,YAI9CK,MAAO,CAAEqB,MAAO,eAAgB,UAGhC,SAAChB,EAAM,CAAClD,aAAcA,KAFlB,QAOK,mBAAd4G,IACC,SAAC9C,EAAc,CACb9D,aAAcA,EACd+D,SAAUA,IAIC,qBAAd6C,IACC,SAACrC,EAAgB,CACfvE,aAAcA,EACde,MAAOA,EACPyD,QAASA,IAIE,gBAAdoC,IACC,SAACL,EAAW,CACVvG,aAAcA,EACde,MAAOA,EACP6E,KAAMA,eAQlB,SAAC,IAAG,CAACjD,QAAQ,SAASC,MAAM,SAAQ,UAClC,UAAC,SAAe,CAACC,MAAO,CAAEC,MAAO,WAAY,UAAC,6BACrB,IAAIiF,MAAOC,qBAK5C,C","sources":["views/Auth/Login.jsx","views/Auth/Signup.jsx","views/Auth/ForgotPassword.jsx","views/Auth/VerificationCode.jsx","views/Auth/NewPassword.jsx","views/Auth/index.jsx"],"sourcesContent":["import { useContext, useState, useCallback } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { Button, Col, Divider, Form, Input, Row, Typography } from \"antd\";\r\nimport { useForm } from \"antd/es/form/Form\";\r\n\r\nimport UserContext from \"context/userContext\";\r\nimport AuthService from \"services/auth.service\";\r\nimport { AppleSVG, FacebookSVG, GoogleSVG } from \"assets/jsx-svg\";\r\n\r\nimport { axiosCatch } from \"utils/axiosUtils\";\r\nimport axios from \"axios\";\r\n\r\nexport default function Login({ setActiveTab }) {\r\n  const [form] = useForm();\r\n  const [loading, setLoading] = useState(false);\r\n  const { setUser } = useContext(UserContext);\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n\r\n  const login = async (values) => {\r\n    setLoading(true);\r\n    const { email, password } = values;\r\n    const queryParams = new URLSearchParams(location.search);\r\n    const link = queryParams.get(\"redirectUrl\") || \"/\";\r\n    try {\r\n      const {\r\n        data: { data: user },\r\n      } = await AuthService.login({\r\n        email: email,\r\n        password: password,\r\n      });\r\n      localStorage.setItem(\r\n        \"vverse-token\",\r\n        user.customerWebDashboardAccessToken,\r\n      );\r\n      setUser(user);\r\n      axios.defaults.headers.authorization =\r\n        user.customerWebDashboardAccessToken;\r\n      navigate(link);\r\n    } catch (error) {\r\n      axiosCatch(error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form form={form} layout=\"vertical\" onFinish={login} requiredMark={false}>\r\n      <Row gutter={[0, 24]}>\r\n        <Col xs={24}>\r\n          <Form.Item\r\n            name=\"email\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please Enter E-mail\",\r\n              },\r\n            ]}\r\n            label=\"Email\"\r\n            className=\"w-100\"\r\n          >\r\n            <Input\r\n              type=\"email\"\r\n              placeholder=\"Enter your email\"\r\n              className=\"login-inputs\"\r\n            />\r\n          </Form.Item>\r\n        </Col>\r\n        <Col xs={24}>\r\n          <Form.Item\r\n            name=\"password\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please Enter Password\",\r\n              },\r\n            ]}\r\n            label=\"Password\"\r\n            className=\"w-100\"\r\n          >\r\n            <Input.Password\r\n              placeholder=\"Enter your password\"\r\n              className=\"login-inputs\"\r\n            />\r\n          </Form.Item>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row justify=\"space-between\" align=\"middle\">\r\n        <Col xs={12}>\r\n          <Typography.Text\r\n            className=\"clickable\"\r\n            style={{ color: \"#2D2D2D\" }}\r\n            onClick={() => setActiveTab(\"forgotPassword\")}\r\n          >\r\n            Forgot your password?\r\n          </Typography.Text>\r\n        </Col>\r\n        <Col xs={10}>\r\n          <Form.Item className=\"w-100\">\r\n            <Button\r\n              loading={loading}\r\n              type=\"primary\"\r\n              className=\"sign-in-btn\"\r\n              htmlType=\"submit\"\r\n            >\r\n              Sign In\r\n            </Button>\r\n          </Form.Item>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Divider>\r\n        <Typography.Text style={{ color: \"#8E8E93\" }}>or</Typography.Text>\r\n      </Divider>\r\n\r\n      <Row gutter={[0, 24]} className=\"mt-1\">\r\n        <Col xs={24}>\r\n          <Row justify=\"center\" gutter={[16, 16]}>\r\n            <Col>\r\n              <div className=\"login-icons\">\r\n                <Row align=\"middle\"></Row>\r\n              </div>\r\n            </Col>\r\n            <Col>\r\n              <div className=\"login-icons\">\r\n                <Row align=\"middle\">\r\n                  <GoogleSVG />\r\n                </Row>\r\n              </div>\r\n            </Col>\r\n            <Col>\r\n              <div className=\"login-icons\">\r\n                <Row align=\"middle\"></Row>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <Col xs={24}>\r\n          <Row justify=\"center\">\r\n            <Typography.Text style={{ color: \"#8E8E93\" }}>\r\n              Don't have an account?\r\n              <span\r\n                style={{ color: \"#000\" }}\r\n                className=\"clickable\"\r\n                onClick={() => setActiveTab(\"2\")}\r\n              >\r\n                Sign Up\r\n              </span>\r\n            </Typography.Text>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row style={{ marginTop: \"45px\" }}>\r\n        <Typography.Text className=\"fz-12\">\r\n          Protected by reCAPTCHA and subject to the\r\n          <span style={{ color: \"#6DAE1F\" }}>Vverse Privacy Policy</span> and\r\n          <span style={{ color: \"#6DAE1F\" }}>Terms of Service.</span>\r\n        </Typography.Text>\r\n      </Row>\r\n    </Form>\r\n  );\r\n}\r\n","import { useContext, useState, useCallback } from \"react\";\r\nimport { Button, Col, Divider, Form, Input, Row, Typography } from \"antd\";\r\nimport { useForm } from \"antd/es/form/Form\";\r\n\r\nimport UserContext from \"context/userContext\";\r\nimport AuthService from \"services/auth.service\";\r\n\r\nimport { AppleSVG, FacebookSVG, GoogleSVG } from \"assets/jsx-svg\";\r\nimport { axiosCatch } from \"utils/axiosUtils\";\r\nimport axios from \"axios\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\n\r\nexport default function Signup({ setActiveTab }) {\r\n  const [form] = useForm();\r\n  const [loading, setLoading] = useState(false);\r\n  const { setUser } = useContext(UserContext);\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n\r\n  const signUp = async (values) => {\r\n    setLoading(true);\r\n    const { confirmPassword, ...data } = values;\r\n    const queryParams = new URLSearchParams(location.search);\r\n    const link = queryParams.get(\"redirectUrl\") || \"/\";\r\n\r\n    try {\r\n      const {\r\n        data: { data: user },\r\n      } = await AuthService.signup(data);\r\n\r\n      localStorage.setItem(\r\n        \"vverse-token\",\r\n        user.customerWebDashboardAccessToken,\r\n      );\r\n      axios.defaults.headers.authorization =\r\n        user.customerWebDashboardAccessToken;\r\n      setUser(user);\r\n      navigate(link);\r\n    } catch (error) {\r\n      axiosCatch(error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form form={form} layout=\"vertical\" onFinish={signUp} requiredMark={false}>\r\n      <Row gutter={[0, 24]}>\r\n        <Col xs={24}>\r\n          <Form.Item\r\n            name=\"email\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please Enter E-mail\",\r\n              },\r\n            ]}\r\n            label=\"Email\"\r\n            className=\"w-100\"\r\n          >\r\n            <Input\r\n              type=\"email\"\r\n              placeholder=\"Enter your email\"\r\n              className=\"login-inputs\"\r\n            />\r\n          </Form.Item>\r\n        </Col>\r\n        <Col xs={24}>\r\n          <Form.Item\r\n            name=\"firstName\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please Enter First Name\",\r\n              },\r\n            ]}\r\n            label=\"First Name\"\r\n            className=\"w-100\"\r\n          >\r\n            <Input placeholder=\"Enter fisrt name\" className=\"login-inputs\" />\r\n          </Form.Item>\r\n        </Col>\r\n        <Col xs={24}>\r\n          <Form.Item\r\n            name=\"lastName\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please Enter Last Name\",\r\n              },\r\n            ]}\r\n            label=\"Last Name\"\r\n            className=\"w-100\"\r\n          >\r\n            <Input placeholder=\"Enter last name\" className=\"login-inputs\" />\r\n          </Form.Item>\r\n        </Col>\r\n        <Col xs={24}>\r\n          <Form.Item\r\n            name=\"password\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please Enter Password\",\r\n              },\r\n            ]}\r\n            label=\"Password\"\r\n            className=\"w-100\"\r\n          >\r\n            <Input.Password\r\n              placeholder=\"Enter your password\"\r\n              className=\"login-inputs\"\r\n            />\r\n          </Form.Item>\r\n        </Col>\r\n\r\n        <Col xs={24}>\r\n          <Form.Item\r\n            name=\"confirmPassword\"\r\n            label=\"Confirm Password\"\r\n            dependencies={[\"password\"]}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please Enter Confirm Password\",\r\n              },\r\n              ({ getFieldValue }) => ({\r\n                validator(_, value) {\r\n                  if (!value || getFieldValue(\"password\") === value) {\r\n                    return Promise.resolve();\r\n                  }\r\n                  return Promise.reject(\r\n                    new Error(\r\n                      \"The two passwords that you entered do not match!\",\r\n                    ),\r\n                  );\r\n                },\r\n              }),\r\n            ]}\r\n            className=\"w-100\"\r\n          >\r\n            <Input.Password\r\n              placeholder=\"Confirm your password\"\r\n              className=\"login-inputs\"\r\n            />\r\n          </Form.Item>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row justify=\"end\" align=\"middle\">\r\n        <Col xs={10}>\r\n          <Form.Item className=\"w-100\">\r\n            <Button\r\n              loading={loading}\r\n              type=\"primary\"\r\n              className=\"sign-in-btn\"\r\n              htmlType=\"submit\"\r\n            >\r\n              Sign Up\r\n            </Button>\r\n          </Form.Item>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Divider>\r\n        <Typography.Text style={{ color: \"#8E8E93\" }}>or</Typography.Text>\r\n      </Divider>\r\n\r\n      <Row gutter={[0, 24]} className=\"mt-1\">\r\n        <Col xs={24}>\r\n          <Row justify=\"center\" gutter={[16, 16]}>\r\n            <Col>\r\n              <div className=\"login-icons\">\r\n                <Row align=\"middle\"></Row>\r\n              </div>\r\n            </Col>\r\n            <Col>\r\n              <div className=\"login-icons\">\r\n                <Row align=\"middle\"></Row>\r\n              </div>\r\n            </Col>\r\n            <Col>\r\n              <div className=\"login-icons\">\r\n                <Row align=\"middle\"></Row>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <Col xs={24}>\r\n          <Row justify=\"center\">\r\n            <Typography.Text style={{ color: \"#8E8E93\" }}>\r\n              Don't have an account?{\" \"}\r\n              <span\r\n                style={{ color: \"#000\" }}\r\n                className=\"clickable\"\r\n                onClick={() => setActiveTab(\"1\")}\r\n              >\r\n                Sign In\r\n              </span>\r\n            </Typography.Text>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Form>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport { Button, Col, Form, Input, notification, Row, Typography } from \"antd\";\r\nimport { useForm } from \"antd/es/form/Form\";\r\n\r\nimport AuthService from \"services/auth.service\";\r\n\r\nimport { axiosCatch } from \"utils/axiosUtils\";\r\nimport { LeftArrowSVG } from \"assets/jsx-svg\";\r\n\r\nexport default function ForgotPassword({ setActiveTab, setEmail }) {\r\n  const [form] = useForm();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const onFinish = async (values) => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await AuthService.forgetPassword({ email: values.email });\r\n      setEmail(values.email);\r\n      notification.success({ message: res.data.message });\r\n      setActiveTab(\"verificationCode\");\r\n    } catch (err) {\r\n      axiosCatch(err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"card-container\">\r\n      <Form\r\n        form={form}\r\n        layout=\"vertical\"\r\n        onFinish={onFinish}\r\n        requiredMark={false}\r\n      >\r\n        <Row\r\n          gutter={[8, 0]}\r\n          align=\"middle\"\r\n          className=\"clickable mb-1\"\r\n          style={{ width: \"fit-content\" }}\r\n          onClick={() => setActiveTab(\"1\")}\r\n        >\r\n          <Col>\r\n            <Row align=\"middle\">\r\n              <LeftArrowSVG color=\"#000\" />\r\n            </Row>\r\n          </Col>\r\n          <Col>\r\n            <Typography.Text className=\"fz-16\">Back</Typography.Text>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"mb-1\">\r\n          <Typography.Title level={4}>Forgot password</Typography.Title>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Typography.Text>\r\n            Please enter your email address.\r\n            <br /> You will receive a code to create a new password via email.\r\n          </Typography.Text>\r\n        </Row>\r\n\r\n        <Row style={{ margin: \"50px 0 40px\" }}>\r\n          <Form.Item\r\n            name=\"email\"\r\n            label=\"Email\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please Enter E-mail\",\r\n              },\r\n            ]}\r\n            className=\"w-100\"\r\n          >\r\n            <Input type=\"email\" placeholder=\"Email\" className=\"login-inputs\" />\r\n          </Form.Item>\r\n        </Row>\r\n\r\n        <Row justify=\"end\">\r\n          <Form.Item>\r\n            <Button\r\n              htmlType=\"submit\"\r\n              type=\"primary\"\r\n              style={{\r\n                width: \"170px\",\r\n                fontSize: \"1rem\",\r\n                borderRadius: \"14px\",\r\n              }}\r\n              loading={loading}\r\n            >\r\n              Send\r\n            </Button>\r\n          </Form.Item>\r\n        </Row>\r\n\r\n        <Row style={{ marginTop: \"160px\" }}>\r\n          <Typography.Text className=\"fz-12\">\r\n            Protected by reCAPTCHA and subject to the{\" \"}\r\n            <span style={{ color: \"#6DAE1F\" }}>Vverse Privacy Policy</span> and{\" \"}\r\n            <span style={{ color: \"#6DAE1F\" }}>Terms of Service.</span>\r\n          </Typography.Text>\r\n        </Row>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n","import { Button, Col, Form, Input, Row, Typography } from \"antd\";\r\nimport { useForm } from \"antd/es/form/Form\";\r\n\r\nimport { LeftArrowSVG } from \"assets/jsx-svg\";\r\n\r\nexport default function VerificationCode({ setActiveTab, email, setCode }) {\r\n  const [form] = useForm();\r\n\r\n  const onFinish = (values) => {\r\n    let code = Object.values(values);\r\n    setCode(code.join(\"\"));\r\n    setActiveTab(\"newPassword\");\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { maxLength, value, name } = e.target;\r\n    const [, fieldIndex] = name.split(\"-\");\r\n\r\n    // Check if they hit the max character length\r\n    if (value.length >= maxLength) {\r\n      // Check if it's not the last input field\r\n      if (parseInt(fieldIndex, 10) < 4) {\r\n        // Get the next input field\r\n        const nextSibling = document.querySelector(\r\n          `input[name=ssn-${parseInt(fieldIndex, 10) + 1}]`,\r\n        );\r\n\r\n        // If found, focus the next field\r\n        if (nextSibling !== null) {\r\n          nextSibling.focus();\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (event) => {\r\n    const { name } = event.target;\r\n    const [, fieldIndex] = name.split(\"-\");\r\n\r\n    if (event.key === \"Backspace\" || event.key === \"Delete\") {\r\n      // Check if it's not the last input field\r\n      if (parseInt(fieldIndex, 10) < 5) {\r\n        form.setFieldValue(`numbr${parseInt(fieldIndex, 10)}`, \"\");\r\n\r\n        const prevSibling = document.querySelector(\r\n          `input[name=ssn-${parseInt(fieldIndex, 10) - 1}]`,\r\n        );\r\n\r\n        // If found, focus the next field\r\n        if (prevSibling !== null) {\r\n          // if (event.key === \"Backspace\") {\r\n          setTimeout(() => {\r\n            prevSibling.focus();\r\n            prevSibling.select();\r\n          }, 1);\r\n\r\n          // } else {\r\n          //   prevSibling.focus();\r\n          // }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  function truncateText(email) {\r\n    var parts = email.split(\"@\");\r\n    var username = parts[0];\r\n    var domain = parts[1];\r\n    var replacedUsername = username.slice(0, 2) + \"***\" + username.slice(-2);\r\n    var replacedEmail = replacedUsername + \"@\" + domain;\r\n    return replacedEmail;\r\n  }\r\n\r\n  return (\r\n    <div className=\"card-container\">\r\n      <Form\r\n        form={form}\r\n        layout=\"vertical\"\r\n        onFinish={onFinish}\r\n        requiredMark={false}\r\n      >\r\n        <Row\r\n          gutter={[8, 0]}\r\n          align=\"middle\"\r\n          className=\"clickable mb-1\"\r\n          style={{ width: \"fit-content\" }}\r\n          onClick={() => setActiveTab(\"forgotPassword\")}\r\n        >\r\n          <Col>\r\n            <Row align=\"middle\">\r\n              <LeftArrowSVG color=\"#000\" />\r\n            </Row>\r\n          </Col>\r\n          <Col>\r\n            <Typography.Text className=\"fz-16\">Back</Typography.Text>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"mb-1\">\r\n          <Typography.Title level={4}>Forgot password</Typography.Title>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Typography.Text>\r\n            Enter the 4 digit code sent to your email\r\n            <br /> {truncateText(email)}\r\n          </Typography.Text>\r\n        </Row>\r\n\r\n        <Row\r\n          className=\"phone-ver-wrapper\"\r\n          wrap={false}\r\n          style={{ margin: \"50px 0\" }}\r\n        >\r\n          <Col>\r\n            <Form.Item\r\n              name=\"numbr1\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: false,\r\n                },\r\n              ]}\r\n            >\r\n              <Input\r\n                maxLength={1}\r\n                name=\"ssn-1\"\r\n                placeholder=\"•\"\r\n                className=\"phone-ver-input\"\r\n                onChange={handleChange}\r\n                onKeyDown={handleKeyDown}\r\n              />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col>\r\n            {\" \"}\r\n            <Form.Item\r\n              name=\"numbr2\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: false,\r\n                },\r\n              ]}\r\n            >\r\n              <Input\r\n                maxLength={1}\r\n                placeholder=\"•\"\r\n                name=\"ssn-2\"\r\n                className=\"phone-ver-input\"\r\n                onChange={handleChange}\r\n                onKeyDown={handleKeyDown}\r\n              />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col>\r\n            <Form.Item\r\n              name=\"numbr3\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: false,\r\n                },\r\n              ]}\r\n            >\r\n              <Input\r\n                maxLength={1}\r\n                placeholder=\"•\"\r\n                name=\"ssn-3\"\r\n                className=\"phone-ver-input\"\r\n                onChange={handleChange}\r\n                onKeyDown={handleKeyDown}\r\n              />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col>\r\n            {\" \"}\r\n            <Form.Item\r\n              name=\"numbr4\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: false,\r\n                },\r\n              ]}\r\n            >\r\n              <Input\r\n                maxLength={1}\r\n                placeholder=\"•\"\r\n                name=\"ssn-4\"\r\n                className=\"phone-ver-input\"\r\n                onChange={handleChange}\r\n                onKeyDown={handleKeyDown}\r\n              />\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row justify=\"end\">\r\n          <Form.Item>\r\n            <Button\r\n              htmlType=\"submit\"\r\n              type=\"primary\"\r\n              style={{\r\n                width: \"170px\",\r\n                fontSize: \"1rem\",\r\n                borderRadius: \"14px\",\r\n              }}\r\n            >\r\n              Send\r\n            </Button>\r\n          </Form.Item>\r\n        </Row>\r\n\r\n        <Row style={{ marginTop: \"160px\" }}>\r\n          <Typography.Text className=\"fz-12\">\r\n            Protected by reCAPTCHA and subject to the{\" \"}\r\n            <span style={{ color: \"#6DAE1F\" }}>Vverse Privacy Policy</span> and{\" \"}\r\n            <span style={{ color: \"#6DAE1F\" }}>Terms of Service.</span>\r\n          </Typography.Text>\r\n        </Row>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport { Button, Col, Form, Input, notification, Row, Typography } from \"antd\";\r\nimport { useForm } from \"antd/es/form/Form\";\r\n\r\nimport AuthService from \"services/auth.service\";\r\n\r\nimport { axiosCatch } from \"utils/axiosUtils\";\r\nimport { LeftArrowSVG } from \"assets/jsx-svg\";\r\n\r\nexport default function NewPassword({ setActiveTab, email, code }) {\r\n  const [form] = useForm();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const onFinish = (values) => {\r\n    setActiveTab(\"verificationCode\");\r\n\r\n    setLoading(true);\r\n    AuthService.verifyForgetPassword({\r\n      email,\r\n      code: code,\r\n      password: values.password,\r\n    })\r\n      .then(({ data }) => {\r\n        notification.success({ message: data.message });\r\n        setActiveTab(\"1\");\r\n      })\r\n      .catch(axiosCatch)\r\n      .finally(() => setLoading(false));\r\n  };\r\n\r\n  return (\r\n    <div className=\"card-container\">\r\n      <Form\r\n        form={form}\r\n        layout=\"vertical\"\r\n        onFinish={onFinish}\r\n        requiredMark={false}\r\n      >\r\n        <Row\r\n          gutter={[8, 0]}\r\n          align=\"middle\"\r\n          className=\"clickable mb-1\"\r\n          style={{ width: \"fit-content\" }}\r\n          onClick={() => setActiveTab(\"1\")}\r\n        >\r\n          <Col>\r\n            <Row align=\"middle\">\r\n              <LeftArrowSVG color=\"#000\" />\r\n            </Row>\r\n          </Col>\r\n          <Col>\r\n            <Typography.Text className=\"fz-16\">Back</Typography.Text>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"mb-1\">\r\n          <Typography.Title level={4}>Reset Password</Typography.Title>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Typography.Text>Please Enter a New Strong Password</Typography.Text>\r\n        </Row>\r\n\r\n        <Row style={{ margin: \"50px 0 40px\" }} gutter={[0, 24]}>\r\n          <Col xs={24}>\r\n            <Form.Item\r\n              name=\"password\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Please Enter Password\",\r\n                },\r\n              ]}\r\n              label=\"Password\"\r\n              className=\"w-100\"\r\n            >\r\n              <Input.Password\r\n                placeholder=\"Enter your password\"\r\n                className=\"login-inputs\"\r\n              />\r\n            </Form.Item>\r\n          </Col>\r\n\r\n          <Col xs={24}>\r\n            <Form.Item\r\n              name=\"confirmPassword\"\r\n              label=\"Confirm Password\"\r\n              dependencies={[\"password\"]}\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Please Enter Confirm Password\",\r\n                },\r\n                ({ getFieldValue }) => ({\r\n                  validator(_, value) {\r\n                    if (!value || getFieldValue(\"password\") === value) {\r\n                      return Promise.resolve();\r\n                    }\r\n                    return Promise.reject(\r\n                      new Error(\r\n                        \"The two passwords that you entered do not match!\",\r\n                      ),\r\n                    );\r\n                  },\r\n                }),\r\n              ]}\r\n              className=\"w-100\"\r\n            >\r\n              <Input.Password\r\n                placeholder=\"Confirm your password\"\r\n                className=\"login-inputs\"\r\n              />\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row justify=\"end\" className=\"mt-1\">\r\n          <Form.Item>\r\n            <Button\r\n              htmlType=\"submit\"\r\n              type=\"primary\"\r\n              style={{\r\n                width: \"170px\",\r\n                fontSize: \"1rem\",\r\n                borderRadius: \"14px\",\r\n              }}\r\n              loading={loading}\r\n            >\r\n              Save\r\n            </Button>\r\n          </Form.Item>\r\n        </Row>\r\n\r\n        <Row style={{ marginTop: \"160px\" }}>\r\n          <Typography.Text className=\"fz-12\">\r\n            Protected by reCAPTCHA and subject to the{\" \"}\r\n            <span style={{ color: \"#6DAE1F\" }}>Vverse Privacy Policy</span> and{\" \"}\r\n            <span style={{ color: \"#6DAE1F\" }}>Terms of Service.</span>\r\n          </Typography.Text>\r\n        </Row>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { Avatar, Col, Image, Row, Tabs, Typography } from \"antd\";\r\n\r\nimport mapOfWorld from \"assets/images/mapOfWorld.png\";\r\nimport vverseLogo from \"assets/images/vverseLogo.png\";\r\n\r\nimport Login from \"./Login\";\r\nimport Signup from \"./Signup\";\r\nimport \"./style.css\";\r\nimport ForgotPassword from \"./ForgotPassword\";\r\nimport VerificationCode from \"./VerificationCode\";\r\nimport NewPassword from \"./NewPassword\";\r\nimport { Link, useSearchParams } from \"react-router-dom\";\r\n\r\nexport default function LoginView() {\r\n  const [activeTab, setActiveTab] = useState(\"1\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [code, setCode] = useState(\"\");\r\n  const [searchParam] = useSearchParams();\r\n\r\n  useEffect(() => {\r\n    if (searchParam.get(\"tab\") === \"signup\") {\r\n      setActiveTab(\"2\");\r\n    }\r\n  }, [searchParam]);\r\n\r\n  return (\r\n    <main\r\n      className=\"login-main login-bg\"\r\n      style={{ background: `url(${mapOfWorld})`, backgroundColor: \"#fff\" }}\r\n    >\r\n      <div className=\"login-main-container\">\r\n        <Row justify=\"space-between\" align=\"middle\" gutter={[0, 24]}>\r\n          <Col lg={12} md={12} xs={24}>\r\n            <Row gutter={[0, 24]}>\r\n              <Col xs={24}>\r\n                <Link to=\"/\">\r\n                  <Image preview={false} src={vverseLogo} />\r\n                </Link>\r\n              </Col>\r\n              <Col xs={24}>\r\n                <Typography.Text className=\"login-text\">\r\n                  REAL WORLD USE METAVERSE\r\n                  <span style={{ color: \"#000\" }}>.</span>\r\n                </Typography.Text>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row align=\"middle\" gutter={[12, 12]} style={{ marginTop: \"90px\" }}>\r\n              <Col>\r\n                <Avatar.Group\r\n                  maxPopoverTrigger=\"click\"\r\n                  size=\"large\"\r\n                  maxStyle={{\r\n                    color: \"#f56a00\",\r\n                    backgroundColor: \"#fde3cf\",\r\n                    cursor: \"pointer\",\r\n                  }}\r\n                >\r\n                  <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\r\n                  <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\r\n                  <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\r\n                </Avatar.Group>\r\n              </Col>\r\n              <Col>\r\n                <Typography.Text className=\"fw-600\">\r\n                  3k+ people joined us, now it’s your turn\r\n                </Typography.Text>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n          <Col lg={8} md={12} xs={24}>\r\n            <div className=\"login-card\">\r\n              {(activeTab === \"1\" || activeTab === \"2\") && (\r\n                <Tabs activeKey={activeTab} onChange={(e) => setActiveTab(e)}>\r\n                  <Tabs.TabPane\r\n                    tab={\r\n                      <Typography.Text ellipsis className=\"fz-18\">\r\n                        SIGN IN\r\n                      </Typography.Text>\r\n                    }\r\n                    style={{ width: \"fit-content\" }}\r\n                    key=\"1\"\r\n                  >\r\n                    <Login setActiveTab={setActiveTab} />\r\n                  </Tabs.TabPane>\r\n                  <Tabs.TabPane\r\n                    tab={\r\n                      <Typography.Text ellipsis className=\"fz-18\">\r\n                        SIGN UP\r\n                      </Typography.Text>\r\n                    }\r\n                    style={{ width: \"fit-content\" }}\r\n                    key=\"2\"\r\n                  >\r\n                    <Signup setActiveTab={setActiveTab} />\r\n                  </Tabs.TabPane>\r\n                </Tabs>\r\n              )}\r\n\r\n              {activeTab === \"forgotPassword\" && (\r\n                <ForgotPassword\r\n                  setActiveTab={setActiveTab}\r\n                  setEmail={setEmail}\r\n                />\r\n              )}\r\n\r\n              {activeTab === \"verificationCode\" && (\r\n                <VerificationCode\r\n                  setActiveTab={setActiveTab}\r\n                  email={email}\r\n                  setCode={setCode}\r\n                />\r\n              )}\r\n\r\n              {activeTab === \"newPassword\" && (\r\n                <NewPassword\r\n                  setActiveTab={setActiveTab}\r\n                  email={email}\r\n                  code={code}\r\n                />\r\n              )}\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n\r\n      <Row justify=\"center\" align=\"bottom\">\r\n        <Typography.Text style={{ color: \"#A5A299\" }}>\r\n          All Rights Reserved © {new Date().getFullYear()}\r\n        </Typography.Text>\r\n      </Row>\r\n    </main>\r\n  );\r\n}\r\n"],"names":["Login","setActiveTab","useForm","form","useState","loading","setLoading","setUser","useContext","UserContext","location","useLocation","navigate","useNavigate","login","values","email","password","queryParams","URLSearchParams","search","link","get","AuthService","user","data","localStorage","setItem","customerWebDashboardAccessToken","axios","axiosCatch","layout","onFinish","requiredMark","gutter","xs","name","rules","required","message","label","className","type","placeholder","justify","align","style","color","onClick","htmlType","marginTop","Signup","signUp","confirmPassword","dependencies","getFieldValue","validator","_","value","Promise","reject","Error","resolve","ForgotPassword","setEmail","res","notification","width","level","margin","fontSize","borderRadius","VerificationCode","setCode","handleChange","e","target","maxLength","split","fieldIndex","length","parseInt","nextSibling","document","querySelector","focus","handleKeyDown","event","key","setFieldValue","prevSibling","setTimeout","select","code","Object","join","parts","username","domain","slice","truncateText","wrap","onChange","onKeyDown","NewPassword","then","catch","finally","LoginView","activeTab","useSearchParams","searchParam","useEffect","background","mapOfWorld","backgroundColor","lg","md","to","preview","src","maxPopoverTrigger","size","maxStyle","cursor","activeKey","tab","ellipsis","Date","getFullYear"],"sourceRoot":""}